@using System.Diagnostics
@using System.Web.Optimization
@using WB.Core.SharedKernels.SurveyManagement.Web.Code
@using WB.Core.SharedKernels.SurveyManagement.Web.Models
@using WB.UI.Supervisor.Code
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="@Url.Content("~/Content/favicon.png")" />
    @Styles.Render("~/Content/main")
    @RenderSection("styles", false)
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <div class="container-fluid">

            <div class="navbar-header hidden-print">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.Action("Index", "Survey")">
                    Supervisor
                </a>
            </div>
            <div class="collapse navbar-collapse">
                    @Html.Partial("SupervisorMainMenu")
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="ui-pnotify" data-bind="visible: IsNotifyVisible()" style="display: none">
                <div class="alert ui-pnotify-container ui-pnotify-shadow">
                    <div class="ui-pnotify-icon"><span class="icon-exclamation-sign"></span></div>
                    <h4 class="ui-pnotify-title" data-bind="text: NotifyTitle()"></h4>
                    <div class="ui-pnotify-text" data-bind="html: NotifyText()"></div>
                </div>
            </div>
            <div id="umbrella">
                <div id="umbrella-message">
                    Loading, please wait
                </div>
            </div>
            @RenderBody()
            <div id="output">
                <div class="panel panel-danger">
                    <div class="panel-heading">
                        <button type="button" class="close" data-bind="click: HideOutput">&times;</button>
                        <span>Errors log</span>
                    </div>
                    <div class="panel-body">
                        <ul data-bind="foreach: Errors" class="list-group">
                            <li class="list-group-item">
                                <pre data-bind="html: error"></pre>
                            </li>
                        </ul>
                        @RenderSection("output", false)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid" id="footer-block">
        <hr>
        <footer>
            <div class="text-center">
                © @DateTime.Now.Year.ToString() <a href="http://www.worldbankgroup.org">The World Bank Group</a>, All Rights Reserved. <a href="http://go.worldbank.org/OS6V7NIUD0">Legal</a>.
            </div>
            <div class="text-center">
                @FileVersionInfo.GetVersionInfo(ViewContext.Controller.GetType().Assembly.Location).ProductVersion
                @*@ViewContext.Controller.GetType().Assembly.GetName().Version*@ 
                @if (AppSettings.IsDebugBuilded)
                {
                    <span id="build-config">[.NET Debug]</span>
                }
                @if (HttpContext.Current.IsDebuggingEnabled)
                {
                    <span id="compile-config" style="color: red">Web Debug</span>
                }
                | <a href="@Url.Action("GetLatestVersion", "Api/InterviewerSync", new { area = string.Empty })">Get Interviewer App</a>
            </div>
        </footer>
    </div>
    @Html.Partial("Clickjacking")
    @Scripts.Render("~/js/main")
    @Html.Partial("GlobalSettings")
    <script type="text/javascript">
        var setMinHeight = function () {
            var windowHeight = $(window).height();
            var navigationHeight = $('.navbar.navbar-fixed-top').height();
            var bodyTopPadding = $('body').css('paddingTop').replace("px", "") * 1;
            var footerHeight = $('#footer-block').outerHeight();
            var minHeight = windowHeight - navigationHeight - footerHeight - bodyTopPadding;
            $('#content').css('min-height', (minHeight > 1 ? minHeight : 1) + 'px');
            $('#wrapper').css('margin-top', navigationHeight + 'px');
            $('#umbrella').css('top', navigationHeight + 'px');
        };

        $(document).ready(function () {
            setMinHeight();
            $(window).resize(function () {
                setMinHeight();
            });
        });
    </script>
    <script>
        $(function () {
            var refreshSyncStatus = function () {
                $.ajax({
                    method: 'GET',
                    cache: false,
                    url: '@Url.Action("GetSyncStatus", "HQSync", new { area = string.Empty })',
                    success: function (dataString) {
                        var data = JSON.parse(dataString);
                        if (!data.StartedAt) {
                            return;
                        }
                        var title = 'Last synchronization: <br /> started {0}'.f(moment(data.StartedAtUtc).fromNow());
                        if (data.FinishedAt) {
                            title += '<br /> last successful sync {0} <br/> applied changes with {1} errors'.f(moment(data.FinisedAtUtc).fromNow(), data.ErrorsCount);
                        }
                        if (!data.IsHqReachable) {
                            title += '<br /> During last sync HQ was unreachable';
                        }

                        $('#synchronizationStatus').tooltip({
                            title: title,
                            placement: 'bottom',
                            html: true
                        }).attr('data-original-title', title)
                            .tooltip('fixTitle');

                        if (data.IsRunning) {
                            $('#synchronizationStatus').attr('class', '').addClass('label label-warning');
                        } else {
                            if (data.IsHqReachable) {
                                $('#synchronizationStatus').attr('class', '').addClass('label label-success');
                            } else {
                                $('#synchronizationStatus').attr('class', '').addClass('label badge-important');
                            }
                        }
                    }
                });

            }

            setInterval(refreshSyncStatus, 3000);
        });
    </script>


    @RenderSection("scripts", false)
</body>
</html>
