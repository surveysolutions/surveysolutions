@using WB.UI.Designer.BootstrapSupport
@using WB.UI.Designer.Resources
@using WB.UI.Shared.Web.Extensions
@model WB.UI.Designer.Models.LocalPasswordModel

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/Layout.cshtml";
}
<div id="edit-form">
    @if (TempData.ContainsKey(Alerts.SUCCESS))
    {
        <div class="alert alert-success header">@Html.Raw(@TempData[Alerts.SUCCESS])</div>
    }
    @using (Html.BeginForm("Manage", "Account", null, FormMethod.Post, new { @class = "form-signin", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        <h1>@AccountResources.ChangePassword</h1>
        if (TempData.ContainsKey(Alerts.ERROR))
        {
            <p class="note has-error">@Html.Raw(@TempData[Alerts.ERROR])</p>
        }
        <div class="form-group">
            @Html.PasswordFor(x => x.OldPassword, new { @class = "form-control", placeholder = "Current password" })
            @Html.ValidationMessageFor(x => x.OldPassword, null, new { @class = "help-inline" })
        </div>
        <div class="form-group">
            @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "New password (min 10 symbols, numbers AND letters)" })
            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "help-inline" })
        </div>
        <div class="form-group">
            @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Repeat password" })
            @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "help-inline" })
        </div>
        <div class="form-actions">
            <input type="submit" class="btn btn-success btn-lg" value="Change"/>
            @Html.ActionLink("Cancel", "Index", "Questionnaire", null, new { @class = "btn " })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/editform")
}