@using WB.UI.Designer.BootstrapSupport
@model WB.UI.Designer.Models.ResetPasswordConfirmationModel

@helper HasError()
{
    @(ViewContext.ViewData.ModelState.IsValid ? "" : "has-error")
}

@{
    ViewBag.Title = "Password reset";
    Layout = "~/Views/Shared/Layout.Account.cshtml";
}

@using (Html.BeginForm("ResetPasswordConfirmation", "Account", null, FormMethod.Post, new { @id="start-log-in", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <h1>
        Password reset
    </h1>
    if (TempData.ContainsKey(Alerts.ERROR))
    {
        <p class="note has-error">@Html.Raw(@TempData[Alerts.ERROR])</p>
    }
    <div class="form-group @HasError()">
        @Html.PasswordFor(x => x.Password, new { @class = "form-control " + HasError(), placeholder = "Password" })
        @Html.ValidationMessageFor(x => x.Password, null, new { @class = "help-inline" })
    </div>
    <div class="form-group @HasError()">
        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control " + HasError(), placeholder = "Confirm password" })
        @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "help-inline" })
    </div>
    <div class="form-actions">
        <input class="btn btn-success btn-lg" type="submit" value="Change Password" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/editform")
}