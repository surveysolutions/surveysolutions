@using System.Collections.Generic
@using System.Linq
@using Main.Core.Entities.SubEntities
@using WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf
@model WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionnaireModel

@{
    Layout = null;
    var questionnaire = Model;
    ViewBag.Questionnaire = questionnaire;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>@questionnaire.Title</title>
    @Styles.Render((ViewBag.UseInlineFonts ?? false) ? "~/Content/pdf-inline-fonts.css" : "~/Content/pdf-fonts.css")
    @Styles.Render("~/Content/pdf.css")
</head>
<body>
    <header>
        <div class="column_header authors">
            <ul>
                <li>This PDF generated by @questionnaire.Requested.By, <span>@questionnaire.Requested.On</span></li>
                <li>Questionnaire created by @questionnaire.Created.By, <span>@questionnaire.Created.On</span></li>
                <li>Last modified by @questionnaire.LastModified.By, <span>@questionnaire.LastModified.On</span></li>
            </ul>
            @if (questionnaire.SharedPersons.Count() != 0)
            {
                <div>Shared with:</div>
                <ul>
                    @foreach (var person in questionnaire.SharedPersons)
                    {
                        <li>
                            @person.Name
                            @if (person.Date.HasValue)
                            {
                                <span>(last edited @(person.Date))</span>
                            }
                            else
                            {
                                <span>(never edited)</span>
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <div>Not shared with anyone</div>
            }
        </div>
        <div class="column_header">
            <ul>
                <li>
                    <ul class="group-statistics">
                        <li>Sections: <span>@questionnaire.Statistics.SectionsCount</span></li>
                        <li>Sub-sections: <span>@questionnaire.Statistics.GroupsCount</span></li>
                        <li>Questions: <span>@questionnaire.Statistics.QuestionsCount</span></li>
                    </ul>
                </li>
                <li>Questions with enabling conditions: <span>@questionnaire.Statistics.QuestionsWithEnablingConditionsCount</span></li>
                <li>Questions with validation conditions: <span>@questionnaire.Statistics.QuestionsWithValidationConditionsCount</span></li>
                <li>Rosters: <span>@questionnaire.Statistics.RostersCount</span></li>
                <li>Variables: <span>@questionnaire.Statistics.VariablesCount</span></li>
            </ul>
        </div>
        <div class="column_header">
            <a href="https://solutions.worldbank.org/" target="_blank" class="logo">
                <img src="~/Content/images/pdf_logo.png" alt="Survey Solutions" />
            </a>
        </div>

    </header>
    <article>
        <section class="questionnaire_info">
            <div class="questionnaire_title">
                <h1>@questionnaire.Title</h1>
            </div>
        </section>
        <section class="table_of_contents">
            <dl>
                @foreach (var sectionId in questionnaire.SectionIds)
                {
                    var statistics = questionnaire.GetGroupStatistics(sectionId);
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#@questionnaire.GetItemRef(sectionId)" class="section_name">@questionnaire.GetGroupTitle(sectionId)</a>
                        <ul class="group-statistics">
                            @if (statistics.GroupsCount > 0)
                            {
                                <li>Sub-sections: <span>@statistics.GroupsCount</span></li>
                            }
                            else
                            {
                                <li>No sub-sections</li>
                            }
                            @if (statistics.RostersCount > 0)
                            {
                                <li>Rosters: <span>@statistics.RostersCount</span></li>
                            }
                            else
                            {
                                <li>No rosters</li>
                            }
                            @if (statistics.QuestionsCount > 0)
                            {
                                <li>Questions: <span>@statistics.QuestionsCount</span></li>
                            }
                            else
                            {
                                <li>No questions</li>
                            }
                            @if (statistics.StaticTextsCount > 0)
                            {
                                <li>Static texts: <span>@statistics.StaticTextsCount</span></li>
                            }
                            @if (statistics.VariablesCount > 0)
                            {
                                <li>Variables: <span>@statistics.VariablesCount</span></li>
                            }
                        </ul>
                    </dd>
                }
                @if (!questionnaire.IsConditionsAppendixEmpty)
                {
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#enablements_appendix" class="section_name appendix">Appendix @questionnaire.ConditionsAppendixIndex &#8212; Enabling CONDITIONS</a>
                    </dd>
                }
                @if (!questionnaire.IsValidationsAppendixEmpty)
                {
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#validations_appendix" class="section_name appendix">Appendix @questionnaire.ValidationsAppendixIndex &#8212; VALIDATION CONDITIONS AND MESSAGES</a>
                    </dd>
                }
                @if (!questionnaire.IsInstructionsAppendixEmpty)
                {
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#instructions_appendix" class="section_name appendix">Appendix @questionnaire.InstructionsAppendixIndex &#8212; INSTRUCTIONS</a>
                    </dd>
                }
                @if (!questionnaire.IsOptionsAppendixEmpty)
                {
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#options_appendix" class="section_name appendix">Appendix @questionnaire.OptionsAppendixIndex &#8212; OPTIONS</a>
                    </dd>
                }
                @if (!questionnaire.IsVariablesAppendixEmpty)
                {
                    <dt>&nbsp;</dt>
                    <dd>
                        <a href="#variables_appendix" class="section_name appendix">Appendix @questionnaire.VariablesAppendixIndex &#8212; VARIABLES</a>
                    </dd>
                }
                <dt>&nbsp;</dt>
                <dd>
                    <a href="#legend_appendix" class="section_name appendix">Legend</a>
                </dd>
            </dl>
        </section>
    </article>
    <article>
        @foreach (var sectionId in questionnaire.SectionIds)
        {
            <section class="section">
                <div class="section_header">
                    <h2 id="@questionnaire.GetItemRef(sectionId)">@questionnaire.GetGroupTitle(sectionId)</h2>
                </div>
                @Html.Partial("_RenderChildren", sectionId)
            </section>
        }
    </article>
    @if (!questionnaire.IsConditionsAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="enablements_appendix">Appendix @questionnaire.ConditionsAppendixIndex &#8212; Enabling conditions</h2>
            <ul class="container">
                @foreach (var item in questionnaire.ItemsWithLongConditions)
                {
                    <li>
                        <span class="number">[@item.Index]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(item.Id)" id="@questionnaire.GetConditionRef(item.Id)">
                                <span>@item.VariableName</span>: @item.Title
                            </a>
                            <p>
                                Enablement Condition:
                                <pre>@item.EnablementCondition</pre>
                            </p>
                        </div>
                    </li>
                }
            </ul>
        </article>}
    @if (!questionnaire.IsValidationsAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="validations_appendix">Appendix @questionnaire.ValidationsAppendixIndex &#8212; Validation conditions and messages</h2>
            <ul class="container">
                @foreach (var item in questionnaire.ItemsWithLongValidations)
                {
                    <li>
                        <span class="number">[@item.Index]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(item.Id)" id="@questionnaire.GetValidationsRef(item.Id)">
                                <span>@item.VariableName</span>: @item.Title
                            </a>
                            @foreach (var validationCondition in item.ValidationConditions)
                            {
                                <p>
                                    Validation Condition:
                                    <pre>@validationCondition.Expression.Trim()</pre>
                                </p>
                                <p>
                                    Validation Message:
                                    <span>@validationCondition.Message</span>
                                </p>
                            }
                        </div>
                    </li>
                }

            </ul>
        </article>
    }
    @if (!questionnaire.IsInstructionsAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="instructions_appendix">Appendix @questionnaire.InstructionsAppendixIndex &#8212; Instructions</h2>
            <ul class="container">
                @for (var i = 0; i < questionnaire.QuestionsWithLongInstructions.Count; i++)
                {
                    var question = questionnaire.QuestionsWithLongInstructions[i];
                    <li>
                        <span class="number">[@(i + 1)]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(question.PublicKey)" id="@questionnaire.GetInstructionsRef(question.PublicKey)">
                                <span>@question.StataExportCaption</span>: @question.QuestionText
                            </a>
                            <p>
                                @question.Instructions
                            </p>
                        </div>
                    </li>
                }
            </ul>
        </article>
    }
    @if (!questionnaire.IsOptionsAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="options_appendix">Appendix @questionnaire.OptionsAppendixIndex &#8212; Options</h2>
            <ul class="container">
                @for (var i = 0; i < questionnaire.QuestionsWithLongOptionsList.Count; i++)
                {
                    var question = questionnaire.QuestionsWithLongOptionsList[i];
                    <li>
                        <span class="number">[@(i + 1)]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(question.PublicKey)" id="@questionnaire.GetOptionsRef(question.PublicKey)">
                                <span>@question.StataExportCaption</span>: @question.QuestionText
                            </a>
                            <p>
                                Options:
                                @foreach (var option in question.Answers)
                                {
                                    <span><span>@option.AnswerValue:</span>@(option.AnswerText),</span>
                                }
                            </p>
                        </div>
                    </li>
                }
            </ul>
        </article>
    }


@if (!questionnaire.IsVariablesAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="variables_appendix">Appendix @questionnaire.VariablesAppendixIndex &#8212; Variables</h2>
            <ul class="container">
                @for (var i = 0; i < questionnaire.VariableWithLongExpressions.Count; i++)
                {
                    var variable = questionnaire.VariableWithLongExpressions[i];
                    <li>
                        <span class="number">[@(i + 1)]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(variable.PublicKey)" id="@questionnaire.GetVariableRef(variable.PublicKey)">
                                <span>@variable.Name</span>:
                            </a>
                            <p>
                                @variable.Expression
                            </p>
                        </div>
                    </li>
                }
            </ul>
        </article>
    }

    @if (!questionnaire.IsOptionsFilterAppendixEmpty)
    {
        <article class="appendix_section">
            <h2 id="instructions_appendix">Appendix @questionnaire.OptionsFilterAppendixIndex &#8212; Option filters</h2>
            <ul class="container">
                @for (var i = 0; i < questionnaire.QuestionsWithLongFilterExpression.Count; i++)
                {
                    var question = questionnaire.QuestionsWithLongFilterExpression[i];
                    <li>
                        <span class="number">[@(i + 1)]</span>
                        <div class="appendix_detail">
                            <a href="#@questionnaire.GetItemRef(question.PublicKey)" id="@questionnaire.GetOptionsFilterRef(question.PublicKey)">
                                <span>@question.StataExportCaption</span>: @question.QuestionText
                            </a>
                            <p>
                                @question.Properties.OptionsFilterExpression
                            </p>
                        </div>
                    </li>
                }
            </ul>
        </article>
    }
<article class="appendix_section legend">
        <h2 id="legend_appendix">Legend</h2>
        <section>
            <h3>Legend and structure of information in this file</h3>
            <img src="~/Content/images/pdf-question-legend.jpg" />
            <img src="~/Content/images/pdf-roster-legend.jpg" />
        </section>
    </article>
</body>
</html>