@model WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionView
@using WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf
<div class="question no-page-break">
    <span>
        @Model.ItemNumber &nbsp;&nbsp; @Model.Title <span class="variable-name">@Model.VariableName</span>
        @if (Model.GetHasCondition())
        {
            <a href="#@("c" + Model.ItemNumber)" id="@("cq" + Model.ItemNumber)">[c @Model.ItemNumber]</a>
        }
        @if (!string.IsNullOrEmpty(Model.ValidationExpression))
        {
            <a href="#@("v" + Model.ItemNumber)" id="@("vq" + Model.ItemNumber)">[v @Model.ItemNumber]</a>
        }
    </span>

    @if (Model.Answers.Count > 0) {
        <ul class="answer-options">
            @if (Model.QuestionType == WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.YesNo)
            {
                <li>
                    <span>
                        Yes / No
                    </span>
                </li>
            }

            @foreach (PdfAnswerView answer in this.Model.Answers.Take(20))
            {
                <li>
                    @if (Model.QuestionType == WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.YesNo)
                    {
                        <input type="radio" disabled="disabled"/>
                        <span> / </span>
                        <input type="radio" title="@answer.Title" disabled="disabled" />
                    }
                    else
                    {
                        <input type="@(Model.QuestionType == WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.MultyOption ? "checkbox" : "radio")" title="@answer.Title" disabled="disabled" />
                    }
                    <span class="answer-value">
                        @answer.AnswerValue
                    </span>
                    <span>
                        @answer.Title
                    </span>
                    @if (!string.IsNullOrWhiteSpace(answer.ParentValue))
                    {
                        <span>
                            &nbsp;[@answer.ParentValue]
                        </span>
                    }
                </li>
            }

        </ul>
    }
    else {
        switch (Model.QuestionType)
        {
            case WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.Text:
                {
                <div class="answer-placeholder">&nbsp;</div>
                <div class="answer-placeholder">&nbsp;</div>
                <div class="answer-placeholder">&nbsp;</div>
                    break;
                }
            case WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.DateTime:
                {
                    <span class="no-line-break">
                        <span class="answer-placeholder date-answer-day"></span>/
                        <span class="answer-placeholder date-answer-month"></span>/
                        <span class="answer-placeholder date-answer-year" ></span>
                    </span>
                    break;
                }
            case WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf.PdfQuestionType.Numeric:
                {
                    <span class="no-line-break">
                        @for (int i = 0; i < 10; i++) {
                            <span class="square-placeholder">&nbsp;</span>
                        }
                    </span>
                    break;
                }
            default:
                <div class="answer-placeholder">&nbsp;</div>
                break;
        }
    }
</div>