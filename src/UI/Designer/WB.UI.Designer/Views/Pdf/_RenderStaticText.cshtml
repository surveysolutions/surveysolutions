@using WB.Core.BoundedContexts.Designer.Views.Questionnaire.Pdf
@model Main.Core.Entities.SubEntities.IStaticText
@{
    PdfQuestionnaireModel questionnaire = ViewBag.Questionnaire;
    var staticText = Model;
}
<div class="static-text">
    <div class="static-text_container">
        <div class="question-meta">
            <div class="type">Static text</div>
        </div>
        <div class="common-info">
            @if (questionnaire.StaticTextHasEnablementCondition(staticText))
            {
                <div class="condition">
                    <span>E</span>@questionnaire.GetExpressionExcerpt(staticText.ConditionExpression)
                    @if (questionnaire.ExpressionIsTooLong(staticText.ConditionExpression))
                {
                        <div class="more">
                            And <a href="#@questionnaire.GetConditionRef(staticText.PublicKey)">@(staticText.ConditionExpression.Length - questionnaire.Settings.ExpressionExcerptLength) other symbols [@questionnaire.GetEntityIndexInAppendix(staticText.PublicKey, "E")]</a>
                        </div>
                    }
                </div>
            }
            @for (int i = 0; i < questionnaire.GetValidationsCount(staticText.ValidationConditions); i++)
            {
                var validation = staticText.ValidationConditions[i];
                <div class="validation-expression">
                    <span>V@(i + 1)</span>@questionnaire.GetExpressionExcerpt(validation.Expression)
                    @if (questionnaire.ExpressionIsTooLong(validation.Expression))
                    {
                        <div class="more">
                            And <a href="#@questionnaire.GetValidationsRef(staticText.PublicKey)">@(validation.Expression.Length - questionnaire.Settings.ExpressionExcerptLength) other symbols [@questionnaire.GetEntityIndexInAppendix(staticText.PublicKey, "V")]</a>
                        </div>
                    }
                </div>
                <div class="validation-message"><span>M@(i + 1)</span>@validation.Message</div>
            }
        </div>
        <div id="@questionnaire.GetItemRef(staticText.PublicKey)" class="static_text">@staticText.Text</div>
        @if (questionnaire.StaticTextHasAttachedImage(staticText))
        {
            <figure>
                <img src="@Url.HttpRouteUrl("AttachmentThumbnailWithSize", new {id = questionnaire.GetAttachmentId(staticText), size = questionnaire.Settings.AttachmentSize})" alt="">
            </figure>
        }
    </div>
</div>