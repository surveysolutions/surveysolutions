@{
    
    Layout = "~/Views/Shared/Layout.empty.cshtml";
    this.ViewBag.Title = "Control Panel: Read Side";
}
@model IEnumerable<WB.Core.Infrastructure.EventHandlerDescription>

<h3>Read Side Control Panel</h3>

<pre id="statusArea" style="height: 500px; overflow-y: scroll;">
Requesting status...
</pre>
@using (Html.BeginForm("RebuildReadSidePartially", "ControlPanel", FormMethod.Post))
{
    <ul style="list-style: none;">


        @foreach (var handler in Model)
        {
            <li>
                <label>
                    <input type='checkbox' value="@handler.Name" name="handlers" checked="@IsHandlerChecked(handler.Name)"/>
                    <span><b>@handler.Name</b> , Builds:
                        @foreach (var buildsView in handler.BuildsViews)
                        {
                            <i>@buildsView</i>
                        }
                        @if (handler.UsesViews.Length > 0)
                        {

                            <span>, Uses:</span>
                            foreach (var usesView in handler.UsesViews)
                            {
                                <i>@usesView</i>
                            }
                        } </span>
                </label>
            </li>
        }
      
    </ul>
   
    @Html.ActionLink("Rebuild All", "RebuildReadSide", new { }, new { @class = "btn " })
    <button class="btn" type="submit">Rebuild Selected</button>
    @Html.ActionLink("Stop", "StopReadSideRebuilding", new { }, new { @class = "btn " })
}

@functions{
    public bool IsHandlerChecked(string handlerName)
    {
        if (!TempData.ContainsKey("CheckedHandlers"))
            return false;
        var checkedHandlers = TempData["CheckedHandlers"] as string[];
        if (checkedHandlers == null)
            return false;
        return checkedHandlers.Contains(handlerName);
    }
}
@section scripts
{
    @Scripts.Render("~/simplepage")

    <script type="text/javascript">

        function updateReadSideStatus() {
            return $.ajax({
                url: '@Url.Action("GetReadSideStatus")',
                data: { timestamp: new Date().getMilliseconds() }
            }).done(function (result) {
                $('#statusArea').text('Updated from server: ' + new Date().toTimeString() + '\r\n\r\n' + result);
            }).fail(function (xhr, status, error) {
                $('#statusArea').text(error + '\r\n' + xhr.responseText + '\r\n\r\nUpdated from server: ' + new Date().toTimeString());
            });
        }

        function updateReadSideStatusNeverending() {
            $.when(updateReadSideStatus()).always(function () {
                setTimeout(updateReadSideStatusNeverending, 1000);
            });
        }

        $(function () {
            updateReadSideStatusNeverending();
        });

    </script>

}