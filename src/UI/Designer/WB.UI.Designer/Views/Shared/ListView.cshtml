@using WB.UI.Designer.Extensions
@using WB.UI.Designer.Models
@using WB.UI.Designer.BootstrapSupport
@using WB.UI.Shared.Web.Membership

@model System.Collections.IEnumerable

@{
    string controller = ViewBag.Controller ?? WB.UI.Designer.GlobalHelper.CurrentController;

    IMembershipUserService userHelper = ViewBag.UserHelper;

    var propertyList = Model.VisibleProperties(userHelper);

    var sortOrder = (int?)ViewBag.SortOrder;
}

<table class="table table-hover">
    <caption></caption>
    <thead>
        <tr>
            @for (int i = 0; i < propertyList.Count(); i++)
            {
                var property = propertyList[i];
                var w = propertyList[i].IsDateTimePropertyValue() ? "135px" : "auto";
                var sortPropertyName = property.Name == "Owner" ? "CreatorName" : property.Name;
                <th style="min-width: @w" nowrap="nowrap">
                    @Html.ActionLink(property.GetLabel().ToSeparatedWords(), WB.UI.Designer.GlobalHelper.CurrentAction, new { p = ViewBag.PageIndex, sb = sortPropertyName, so = WB.UI.Designer.Extensions.CustomExtensions.InvertBooleableInt(sortOrder, ViewBag.SortBy == sortPropertyName), f = ViewBag.Filter })
                    @if (ViewBag.SortBy == sortPropertyName)
                    {
                        if (!sortOrder.ToBool())
                        {
                            <i class="icon-chevron-up"></i>
                        }
                        else
                        {
                            <i class="icon-chevron-down"></i>
                        }
                    }
                    else
                    { 
                        <i class="icon-chevron-up icon-white"></i>
                    }
                </th>

            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ int index = 0; }
        @foreach (var model in Model)
        {
            ViewData[index.ToString()] = model;
            <tr>
                @foreach (var property in propertyList)
                {
                    <td>
                        @Html.Display(index + "." + property.Name)
                    </td>
                }

                <td style="width: 110px">
                    @{
                var actionModel = model as IActionItem;
                if (actionModel != null)
                {
                    if (actionModel.CanCopy || actionModel.CanDelete || actionModel.CanEdit || actionModel.CanExport || actionModel.CanPreview || actionModel.CanPrint || actionModel.CanSynchronize)
                    {
                                <div class="btn-group pull-right">
                                    <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">Action
                                        <span class="caret"></span>
                                    </a>
                                    <ul class="dropdown-menu">
                                        @{
                                            var routevalues = model.GetIdValue();
                                            var itemId = model.GetId();
                                            var itemType = model.GetLabel();
                                            var itemName = Uri.EscapeDataString(model.GetName());

                                            if (actionModel.CanEdit)
                                            {
                                                <li>@Html.ActionLink("Edit", "Edit", controller, routevalues, null)</li>
                                            }
                                            if (actionModel.ShowUpdatedEditForm)
                                            {
                                                <li>@Html.ActionLink("Edit New", "Index", "App", routevalues, null)</li>
                                            }
                                            if (actionModel.CanSynchronize)
                                            {
                                                    <li>@Html.ActionLink("Export to HQ", "Export", "Synchronization", routevalues, null)</li>
                                            }
                                            if (actionModel.CanPreview)
                                            {
                                                    <li>@Html.ActionLink("Details", "Details", controller, routevalues, null)</li>
                                            }
                                            if (actionModel.CanCopy)
                                            {
                                                    <li>@Html.ActionLink("Clone", "Clone", controller, routevalues, null)</li>
                                            }
                                            if (actionModel.CanExportToPdf)
                                            {
                                                    <li class="divider"></li>
                                                                <li>@Html.ActionLink("Export as PDF", "exportquestionnaire", "Pdf", routevalues, null)</li>
                                            }
                                            if (actionModel.CanDelete)
                                            {
                                <li class="divider"></li>
                                            <li><a href="#mDelete" data-bind='click: deleteItem.bind($data,"@itemId    ", "@itemType    ", "@itemName    ")' data-toggle="modal">Delete</a></li>
                        }
                                        }
                                    </ul>

                                </div>
                    }
                }
                    }
                </td>
            </tr>
                index++;
        }
    </tbody>
</table>
