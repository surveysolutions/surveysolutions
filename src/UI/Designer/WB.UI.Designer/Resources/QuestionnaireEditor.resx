<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewSection" xml:space="preserve">
    <value>Add new section</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ClickHere" xml:space="preserve">
    <value>click here</value>
  </data>
  <data name="Compile" xml:space="preserve">
    <value>Compile</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="ErrorsCounter" xml:space="preserve">
    <value>{{count}} error</value>
  </data>
  <data name="ErrorsCounter_plural" xml:space="preserve">
    <value>{{count}} errors</value>
  </data>
  <data name="HellowMessageBtn" xml:space="preserve">
    <value>Hi, {{currentUserName}}</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PasteAfter" xml:space="preserve">
    <value>Paste after</value>
  </data>
  <data name="QuestionnaireSummary" xml:space="preserve">
    <value>({{questionsCount}}Q, {{groupsCount}}S, {{rostersCount}}R)</value>
    <comment>Q, S, R are the first letters of the Question, Section and Roster. Keep values that are in {{}} without changes</comment>
  </data>
  <data name="ReadOnly" xml:space="preserve">
    <value>Read Only</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SavedAtTimestamp" xml:space="preserve">
    <value>saved at {{dateTime, H:mm}}</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SideBarAddMacro" xml:space="preserve">
    <value>add new Macro</value>
  </data>
  <data name="SideBarAttachmentName" xml:space="preserve">
    <value>attachment name</value>
  </data>
  <data name="SideBarAttachmentsCounter" xml:space="preserve">
    <value>{{count}} File Attachment ({{bytes}} total)</value>
  </data>
  <data name="SideBarAttachmentsCounter_plural" xml:space="preserve">
    <value>{{count}} Files Attachments ({{bytes}} total)</value>
  </data>
  <data name="SideBarAttachmentsEmptyLine1" xml:space="preserve">
    <value>Use this tab to upload multimedia files that may be referenced in the questionnaire.</value>
  </data>
  <data name="SideBarAttachmentsEmptyLine2" xml:space="preserve">
    <value>To avoid slow synchronization we recommend combined size of all attached files not to exceed 2MB. For supported file types, formats, and dimensions</value>
  </data>
  <data name="SideBarAttachmentsEmptyLine3" xml:space="preserve">
    <value>To refer to an attachment in the questionnaire add a static text element and specify the attachment {{- name}} in its attachment property</value>
  </data>
  <data name="SideBarAttachmentsEstimate" xml:space="preserve">
    <value>Est. loading time: {{timeString}} at {{downloadSpeed}}Kb/s (EDGE)</value>
  </data>
  <data name="SideBarAttachmentsUpload" xml:space="preserve">
    <value>Upload new</value>
  </data>
  <data name="SideBarLookupEmptyLine1" xml:space="preserve">
    <value>Use this tab to define lookup tables.</value>
  </data>
  <data name="SideBarLookupEmptyLine2" xml:space="preserve">
    <value>A lookup table provides reference information that may be queried by a key and used in enabling conditions and validation expressions.</value>
  </data>
  <data name="SideBarLookupEmptyLine3" xml:space="preserve">
    <value>A lookup table consists of a name and the lookup file, which may contain multiple tab-delimited columns of numeric values.</value>
  </data>
  <data name="SideBarLookupTableAdd" xml:space="preserve">
    <value>ADD NEW Lookup table</value>
  </data>
  <data name="SideBarLookupTableDropFile" xml:space="preserve">
    <value>Drop File here</value>
  </data>
  <data name="SideBarLookupTableFileName" xml:space="preserve">
    <value>file name</value>
  </data>
  <data name="SideBarLookupTableName" xml:space="preserve">
    <value>table name</value>
  </data>
  <data name="SideBarLookupTablesCounter" xml:space="preserve">
    <value>{{count}} Lookup Table:</value>
  </data>
  <data name="SideBarLookupTablesCounter_plural" xml:space="preserve">
    <value>{{count}} Lookup Tables:</value>
  </data>
  <data name="SideBarLookupTableSelectFile" xml:space="preserve">
    <value>Select file</value>
  </data>
  <data name="SideBarLookupTableUpdateFile" xml:space="preserve">
    <value>Update file</value>
  </data>
  <data name="SideBarMacroContent" xml:space="preserve">
    <value>content</value>
  </data>
  <data name="SideBarMacroCounter" xml:space="preserve">
    <value>{{count}} Macro:</value>
  </data>
  <data name="SideBarMacroCounter_plural" xml:space="preserve">
    <value>{{count}} Macros:</value>
  </data>
  <data name="SideBarMacroDescription" xml:space="preserve">
    <value>description</value>
  </data>
  <data name="SideBarMacroEmptyLine1" xml:space="preserve">
    <value>Use this tab to define macro substitutions.</value>
  </data>
  <data name="SideBarMacroEmptyLine2" xml:space="preserve">
    <value>A macro is a named expression that can be used in enabling conditions and validation expressions. A macro consists of name and content.</value>
  </data>
  <data name="SideBarMacroEmptyLine3" xml:space="preserve">
    <value>To use a macro in an expression, refer to it by its {{- substitution}}</value>
  </data>
  <data name="SideBarMacroHideDescription" xml:space="preserve">
    <value>hide description</value>
  </data>
  <data name="SideBarMacroName" xml:space="preserve">
    <value>macro name</value>
  </data>
  <data name="SideBarMacroShowDescription" xml:space="preserve">
    <value>add description</value>
  </data>
  <data name="SideBarSectionsCounter" xml:space="preserve">
    <value>{{count}} Section:</value>
  </data>
  <data name="SideBarSectionsCounter_plural" xml:space="preserve">
    <value>{{count}} Sections:</value>
  </data>
  <data name="SideBarTranslationDownloadXlsx" xml:space="preserve">
    <value>Download xlsx</value>
  </data>
  <data name="SideBarTranslationGetTemplate" xml:space="preserve">
    <value>Get Template for </value>
  </data>
  <data name="SideBarTranslationGetTemplateLinkTextXlsx" xml:space="preserve">
    <value>Excel (xlsx)</value>
  </data>
  <data name="SideBarTranslationName" xml:space="preserve">
    <value>translation name</value>
  </data>
  <data name="SideBarTranslationsCounter" xml:space="preserve">
    <value>{{count}} Translation</value>
  </data>
  <data name="SideBarTranslationsCounter_plural" xml:space="preserve">
    <value>{{count}} Translations</value>
  </data>
  <data name="SideBarTranslationsEmptyLine1" xml:space="preserve">
    <value>Use this tab to manage questionnaire translations.</value>
  </data>
  <data name="SideBarTranslationsEmptyLine2" xml:space="preserve">
    <value>You may download and update translations to different languages.</value>
  </data>
  <data name="SideBarTranslationsEmptyLine3" xml:space="preserve">
    <value>Translation will be applied on original texts and override values. You may leave some texts empty to use default original translations.</value>
  </data>
  <data name="ToggleDropdown" xml:space="preserve">
    <value>Toggle Dropdown</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="VariableName" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="WarningsCounter" xml:space="preserve">
    <value>{{count}} warning</value>
  </data>
  <data name="WarningsCounter_plural" xml:space="preserve">
    <value>{{count}} warnings</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompilationErrorsCounter" xml:space="preserve">
    <value>{{count}} error found</value>
  </data>
  <data name="CompilationErrorsCounter_plural" xml:space="preserve">
    <value>{{count}} errors found</value>
  </data>
  <data name="CompilationLabel" xml:space="preserve">
    <value>Compilation:</value>
  </data>
  <data name="CompilationWarningsCounter" xml:space="preserve">
    <value>{{count}} warning found</value>
  </data>
  <data name="CompilationWarningsCounter_plural" xml:space="preserve">
    <value>{{count}} warnings found</value>
  </data>
  <data name="MoveTo" xml:space="preserve">
    <value>Move to</value>
  </data>
  <data name="Recompile" xml:space="preserve">
    <value>Recompile</value>
  </data>
  <data name="SideBarAttachmentDetailsFormat" xml:space="preserve">
    <value>format: {{- type}}</value>
  </data>
  <data name="SideBarAttachmentDetailsResolution" xml:space="preserve">
    <value>{{width}} × {{height}}px</value>
  </data>
  <data name="SideBarAttachmentDetailsSize" xml:space="preserve">
    <value>size: {{size}}</value>
  </data>
  <data name="SideBarAttachmentsTitle" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="SideBarAttachmentUploaded" xml:space="preserve">
    <value>uploaded: {{-lastUpdate, MMMM DD[,] YYYY [at] k:mm}}</value>
  </data>
  <data name="SideBarLookupTitle" xml:space="preserve">
    <value>Lookup tables</value>
  </data>
  <data name="SideBarMacroTitle" xml:space="preserve">
    <value>Macros</value>
  </data>
  <data name="SideBarSectionsTitle" xml:space="preserve">
    <value>Sections</value>
  </data>
  <data name="SideBarTranslationsTitle" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="SideBarTranslationsUploadNew" xml:space="preserve">
    <value>Upload new translation</value>
  </data>
  <data name="AttachmentPreview" xml:space="preserve">
    <value>Attachment preview</value>
  </data>
  <data name="FindReplaceFindWhat" xml:space="preserve">
    <value>Find what:</value>
  </data>
  <data name="FindReplaceMatchCase" xml:space="preserve">
    <value>Match case</value>
  </data>
  <data name="FindReplaceMatchWord" xml:space="preserve">
    <value>Match whole word</value>
  </data>
  <data name="FindReplaceReplaceWith" xml:space="preserve">
    <value>Replace with:</value>
  </data>
  <data name="FindReplaceTitle" xml:space="preserve">
    <value>Find and replace</value>
  </data>
  <data name="FindReplaceUseRegex" xml:space="preserve">
    <value>Use regular expression</value>
  </data>
  <data name="FindReplaceСonfirm" xml:space="preserve">
    <value>Please confirm action.</value>
  </data>
  <data name="ModalConfirm" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="ModalInfo" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="MoveToAnotherSubSection" xml:space="preserve">
    <value>Move to another sub-section:</value>
  </data>
  <data name="FindReplaceReplaceAllConfirm" xml:space="preserve">
    <value>Replace all </value>
  </data>
  <data name="FindReplaceBackToSearch" xml:space="preserve">
    <value>Back to search</value>
  </data>
  <data name="FindReplaceDone" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="FindReplaceFindAll" xml:space="preserve">
    <value>Find all</value>
  </data>
  <data name="FindReplaceInAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="FindReplaceInAllFound" xml:space="preserve">
    <value>in {{count}} found entity?</value>
  </data>
  <data name="FindReplaceInAllFound_plural" xml:space="preserve">
    <value>in {{count}} found entities?</value>
  </data>
  <data name="FindReplaceMatchingLines" xml:space="preserve">
    <value>Matching lines: {{count}}</value>
  </data>
  <data name="FindReplaceNext" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="FindReplacePrevious" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="FindReplaceReplaceAll" xml:space="preserve">
    <value>Replace all ({{count}})</value>
  </data>
  <data name="FindReplaceReplaceAllConfirmWith" xml:space="preserve">
    <value>with</value>
  </data>
  <data name="FindReplaceWereReplaced" xml:space="preserve">
    <value>were replaced with</value>
  </data>
  <data name="EnablingCondition" xml:space="preserve">
    <value>Enabling condition</value>
  </data>
  <data name="GroupTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="HideIfDisabled" xml:space="preserve">
    <value>Hide if disabled</value>
  </data>
  <data name="AddValidationRule" xml:space="preserve">
    <value>Add new validation rule</value>
  </data>
  <data name="EnteredMoreThanAllowed" xml:space="preserve">
    <value>You entered more than maximum allowed {{max}}</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error message</value>
  </data>
  <data name="OptionsListError" xml:space="preserve">
    <value>You entered an invalid input. Each line should follow the format: "Title...Value". 'Value' must be an integer number. Title must be an alpha-numeric string. No empty lines are allowed.</value>
  </data>
  <data name="QuestionAddInstruction" xml:space="preserve">
    <value>Add Interviewer Instruction</value>
  </data>
  <data name="QuestionClickReload" xml:space="preserve">
    <value>click reload</value>
  </data>
  <data name="QuestionFilter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="QuestionGpsNavigation" xml:space="preserve">
    <value>This question will be treated as GPS navigation question for Interviewer</value>
  </data>
  <data name="QuestionHideInstruction" xml:space="preserve">
    <value>Hide instruction</value>
  </data>
  <data name="QuestionInstruction" xml:space="preserve">
    <value>Instruction</value>
  </data>
  <data name="QuestionLinkedDescr" xml:space="preserve">
    <value>Bind to list question or question from roster group</value>
  </data>
  <data name="QuestionMustBeBound" xml:space="preserve">
    <value>You must bind this question</value>
  </data>
  <data name="QuestionQuestionType" xml:space="preserve">
    <value>Question type</value>
  </data>
  <data name="QuestionScope" xml:space="preserve">
    <value>Question scope</value>
  </data>
  <data name="QuestionText" xml:space="preserve">
    <value>Question text</value>
  </data>
  <data name="QuestionToUpdateOptions" xml:space="preserve">
    <value>To update options</value>
  </data>
  <data name="QuestionVariableLabel" xml:space="preserve">
    <value>Variable label</value>
  </data>
  <data name="QuestionVariableName" xml:space="preserve">
    <value>Variable name</value>
  </data>
  <data name="RosterAddItem" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="RosterName" xml:space="preserve">
    <value>Roster name</value>
  </data>
  <data name="RosterShowStrings" xml:space="preserve">
    <value>Show strings</value>
  </data>
  <data name="RosterSource" xml:space="preserve">
    <value>Roster source</value>
  </data>
  <data name="RosterSourceFixed" xml:space="preserve">
    <value>Fixed set of items:</value>
  </data>
  <data name="RosterSourceNumericQuestion" xml:space="preserve">
    <value>Source question for number of rows:</value>
  </data>
  <data name="RosterSourceNumericTitles" xml:space="preserve">
    <value>Source question for names of rows:</value>
  </data>
  <data name="RosterSourceQuestion" xml:space="preserve">
    <value>Source question (answer determines both the number and the name of roster rows):</value>
  </data>
  <data name="RosterVariableName" xml:space="preserve">
    <value>Roster ID</value>
  </data>
  <data name="SelectQuestion" xml:space="preserve">
    <value>Select question</value>
  </data>
  <data name="SettingsCan" xml:space="preserve">
    <value>Can </value>
  </data>
  <data name="SettingsInviteCollaborators" xml:space="preserve">
    <value>Invite collaborators by e-mail:</value>
  </data>
  <data name="SettingsOwner" xml:space="preserve">
    <value>owner</value>
  </data>
  <data name="SettingsPrivate" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="SettingsPublic" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="SettingsQuestionnaireName" xml:space="preserve">
    <value>Questionnaire name:</value>
  </data>
  <data name="SettingsQuestionnaireSharing" xml:space="preserve">
    <value>Make this questionnaire</value>
  </data>
  <data name="SettingsRevokeAccess" xml:space="preserve">
    <value>Revoke access</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Questionnaire settings</value>
  </data>
  <data name="SettingsVisibleToEveryone" xml:space="preserve">
    <value>visible to everyone in read only mode</value>
  </data>
  <data name="SettingsVisibleToOwner" xml:space="preserve">
    <value>visible to owner only</value>
  </data>
  <data name="SettingsWhoHasAccess" xml:space="preserve">
    <value>Who has access:</value>
  </data>
  <data name="ShowList" xml:space="preserve">
    <value>Show list</value>
  </data>
  <data name="ValidationCondition" xml:space="preserve">
    <value>Validation condition</value>
  </data>
</root>