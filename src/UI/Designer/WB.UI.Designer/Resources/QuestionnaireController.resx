<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>Assign</value>
  </data>
  <data name="Assigning" xml:space="preserve">
    <value>Assigning</value>
  </data>
  <data name="CancelSearch" xml:space="preserve">
    <value>Cancel search</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>confirmation</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CopyQuestionnaire" xml:space="preserve">
    <value>Copy Questionnaire</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="CreateNewQuestionnaire" xml:space="preserve">
    <value>Create New Questionnaire</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteFolderConfirmation" xml:space="preserve">
    <value>Are you sure to want to delete folder {0} ?</value>
  </data>
  <data name="CreateSubFolder" xml:space="preserve">
    <value>Create SubFolder</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="AssignFolder" xml:space="preserve">
    <value>Assign Folder</value>
  </data>
  <data name="DeleteConfirmationText" xml:space="preserve">
    <value>Do you really want to delete "{0}" questionnaire?</value>
  </data>  
  <data name="AssignFolderText" xml:space="preserve">
    <value>Please assign folder for "{0}" questionnaire</value>
  </data>
  <data name="Deleting" xml:space="preserve">
    <value>Deleting</value>
  </data>
  <data name="Designer" xml:space="preserve">
    <value>Questionnaire designer</value>
  </data>
  <data name="DownloadPdf" xml:space="preserve">
    <value>Download PDF</value>
  </data>
  <data name="EmptyList" xml:space="preserve">
    <value>This list does not contain any records</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location:  </value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorDescription" xml:space="preserve">
    <value>An error occurred while processing your request</value>
  </data>
  <data name="ExportAsPDF" xml:space="preserve">
    <value>Export as PDF</value>
  </data>
  <data name="Forbidden" xml:space="preserve">
    <value>You don't have permission to edit this questionnaire</value>
  </data>
  <data name="ForbiddenDelete" xml:space="preserve">
    <value>You don't have permissions to delete this questionnaire.</value>
  </data>
  <data name="ForbiddenRevert" xml:space="preserve">
    <value>You don't  have permissions to restore operation for this questionnaire.</value>
  </data>
  <data name="GeneratingPdf" xml:space="preserve">
    <value>Generating pdf for "{0}"</value>
  </data>
  <data name="GeneratePdf" xml:space="preserve">
    <value>Generate pdf</value>
  </data>
  <data name="ChooseLanguageTitle" xml:space="preserve">
    <value>Please choose language to render pdf questionnaire on it</value>
  </data>
  <data name="ChooseLanguage" xml:space="preserve">
    <value>Choose language</value>
  </data>
  <data name="Initializing" xml:space="preserve">
    <value>Initializing</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Modified on</value>
  </data>
  <data name="ManageUsers" xml:space="preserve">
    <value>Manage users</value>
  </data>
  <data name="MyQuestionnaires" xml:space="preserve">
    <value>My Questionnaires</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hi, {0}</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PublicQuestionnaires" xml:space="preserve">
    <value>Public Questionnaires</value>
  </data>
  <data name="QuestionnaireTreeFolders" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="FoldersManagement" xml:space="preserve">
    <value>Folders Management</value>
  </data>
  <data name="FoldersDescription" xml:space="preserve">
    <value>You can configure the structure of folders for public questionnaires page. For this click on folder by right button and then use one of the operations:
&lt;br/&gt;- "Create folder" use for creating subfolder 
&lt;br/&gt;- "Edit" to rename folder name
&lt;br/&gt;- "Remove" to delete folder with subfolders</value>
  </data>
  <data name="QuestionnaireTitle" xml:space="preserve">
    <value>Questionnaire Title</value>
  </data>
  <data name="RestoreQuestionnaire" xml:space="preserve">
    <value>Restore questionnaire</value>
  </data>
  <data name="RetryExportPDF" xml:space="preserve">
    <value>Retry export as PDF</value>
  </data>
  <data name="SelectTabFile" xml:space="preserve">
    <value>Choose tab-separated values file to upload, please</value>
  </data>
  <data name="SuccessDeleteMessage" xml:space="preserve">
    <value>Questionnaire "{0}" successfully deleted</value>
  </data>
  <data name="TabFilesOnly" xml:space="preserve">
    <value>Only tab-separated values files are accepted</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="You" xml:space="preserve">
    <value>you</value>
  </data>
  <data name="Untitled" xml:space="preserve">
    <value>Untitled</value>
  </data>
</root>