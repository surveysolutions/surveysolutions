@using System.Linq
@using System.Web
@using WB.UI.Designer.Extensions
@using WB.UI.Shared.Web.Extensions
@model IEnumerable<Main.Core.Entities.SubEntities.QuestionnaireCategoricalOption>
@{
    ViewBag.Title = QuestionnaireEditor.CascadingOptionsWindowTitle;
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>@ViewBag.Title</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link href="~/questionnaire/content/designer-start/bootstrap-custom.css" rel="stylesheet" />
    <link href="~/questionnaire/content/designer-start/bootstrap-override.css" rel="stylesheet" />
    <link href="~/questionnaire/content/wb-options-window.css" rel="stylesheet" />

    <script type="text/javascript">
        function close_window() {
            if (confirm('@Html.Raw(HttpUtility.JavaScriptStringEncode(QuestionnaireEditor.OptionsCloseWindow))')) {
                close();
            }
        }

        function apply() {
            $.post("@Url.Action("ApplyCascadingOptions", "Questionnaire")", function(response) {
                if (response.IsSuccess) {
                    close();
                } else {
                    $(document).scrollTop(0);
                    $("#applyOptionsErrorContent").html(response.Error);
                    $('#applyOptionsError').fadeIn();
                    setTimeout(function() { $('#applyOptionsError').fadeOut(); }, 10000);
                }
            });
        }

        var ajustNavPanels = function() {
            $("body").css("paddingTop", $("#topNav").outerHeight() + 3);
            $("body").css("paddingBottom", $("#bottomNav").outerHeight() + 3);
        }

        $(window).resize(function() {
            ajustNavPanels();
        });

        $(document).ready(function() {
            ajustNavPanels();

            setTimeout(function() { $('.alert.alert-danger').fadeOut(); }, 10000);
        });
    </script>
    @Html.GenerateFavicon(Url.Content("~/favicon.ico"))
</head>
<body>
    @using (Html.BeginForm("EditCascadingOptions", "Questionnaire", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <nav id="topNav" class="navbar navbar-default navbar-fixed-top" role="navigation">
            <div class="container">
                <div id="uploadForm" class="navbar-form navbar-left">
                    <input type="file" title="Import" name="csvFile">
                    <button class="btn btn-default" type="submit">@QuestionnaireEditor.Upload</button>
                </div>
                <div class="pull-right">
                    <a class="btn btn-default navbar-btn" href="@Url.Action("ExportOptions", "Questionnaire")">@QuestionnaireEditor.Export</a>
                </div>
            </div>
        </nav>
    }

    <div id="content" class="container">
        <div id="applyOptionsError" class="alert alert-danger">
            <div id="applyOptionsErrorContent"></div>
        </div>
        @foreach (string key in Alerts.ALL)
        {
            if (TempData.ContainsKey(key))
            {
                <div class="alert alert-danger">
                    @foreach (var errorMessage in ((string) TempData[key]).Split(new[] {Environment.NewLine}, StringSplitOptions.RemoveEmptyEntries))
                    {
                        @Html.Raw(errorMessage)
                        <br/>
                    }
                </div>
            }
        }
        @if (Model != null && Model.Any())
        {
            <table class="table table-bordered table-hover table-condensed">
                <thead>
                    <tr class="active">
                        <td>@QuestionnaireEditor.OptionsUploadValue</td>
                        <td>@QuestionnaireEditor.OptionsUploadTitle</td>
                        <td>@QuestionnaireEditor.OptionsUploadParent</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var option in Model)
                    {
                        <tr>
                            <td>@option.Value</td>
                            <td>@option.Title</td>
                            <td>@option.ParentValue</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <table class="table table-bordered table-hover table-condensed">
                <thead>
                    <tr class="active">
                        <td>@QuestionnaireEditor.OptionsUploadValue</td>
                        <td>@QuestionnaireEditor.OptionsUploadTitle</td>
                        <td>@QuestionnaireEditor.OptionsUploadParent</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                </tbody>
            </table>
            
            <p>@string.Format(QuestionnaireEditor.OptionsUploadLimit, 15000)</p>
        }
    </div>
    <nav id="bottomNav" class="navbar navbar-default navbar-fixed-bottom" role="navigation">
        <div class="container">
            <a class="btn btn-success navbar-btn" href="javascript:apply();">@QuestionnaireEditor.OptionsUploadApply</a>
            <a class="btn btn-link navbar-btn" href="@Url.Action("ResetCascadingOptions", "Questionnaire")">@QuestionnaireEditor.Cancel</a>
            <a class="btn btn-link navbar-btn pull-right" href="javascript:close_window();">@QuestionnaireEditor.Close</a>
        </div>
    </nav>
</body>
</html>
