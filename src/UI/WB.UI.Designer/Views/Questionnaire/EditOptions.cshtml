@using WB.UI.Designer.Extensions
@using System.Globalization
@{
    ViewBag.Title = $"{QuestionnaireEditor.OptionsWindowTitle}: {@Model.QuestionTitle}";
    Layout = null;
}

<!DOCTYPE html>
<html class="no-js" lang="@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName">
<head>
    <title>@ViewBag.Title</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- libs:css -->
    <link rel="stylesheet" href="~/css/libs.css">
    <!-- endinject -->
    <!-- markup:css -->
    <link rel="stylesheet" href="~/css/markup.css">
    <!-- endinject -->
    <!-- popup:css -->
    <link rel="stylesheet" href="~/css/popup.css">
    <!-- endinject -->
    <!-- manifest:json -->
    <script>window.localization = {"QuestionnaireEditor.en.json":"../../resx/QuestionnaireEditor-b8f4ec5e5f.en.json","QuestionnaireEditor.ar.json":"../../resx/QuestionnaireEditor-635620ebd1.ar.json","QuestionnaireEditor.es.json":"../../resx/QuestionnaireEditor-e7d9eca832.es.json","QuestionnaireEditor.fr.json":"../../resx/QuestionnaireEditor-371e2e4990.fr.json","QuestionnaireEditor.ru.json":"../../resx/QuestionnaireEditor-912ee1d1d0.ru.json","QuestionnaireEditor.sq.json":"../../resx/QuestionnaireEditor-a63da5f11a.sq.json","QuestionnaireEditor.zh.json":"../../resx/QuestionnaireEditor-0f106fe676.zh.json"}</script>@{ var locales_json = @"{""QuestionnaireEditor.en.json"":""../../resx/QuestionnaireEditor-b8f4ec5e5f.en.json"",""QuestionnaireEditor.ar.json"":""../../resx/QuestionnaireEditor-635620ebd1.ar.json"",""QuestionnaireEditor.es.json"":""../../resx/QuestionnaireEditor-e7d9eca832.es.json"",""QuestionnaireEditor.fr.json"":""../../resx/QuestionnaireEditor-371e2e4990.fr.json"",""QuestionnaireEditor.ru.json"":""../../resx/QuestionnaireEditor-912ee1d1d0.ru.json"",""QuestionnaireEditor.sq.json"":""../../resx/QuestionnaireEditor-a63da5f11a.sq.json"",""QuestionnaireEditor.zh.json"":""../../resx/QuestionnaireEditor-0f106fe676.zh.json""}"; }
    <!-- endinject -->
       @{
            var locales = Newtonsoft.Json.JsonConvert.DeserializeObject<Dictionary<string, string>>(locales_json);
            var locale = locales["QuestionnaireEditor." + CultureInfo.CurrentUICulture.TwoLetterISOLanguageName + ".json"];
    
        }
        <link rel='preload' href='@locale' as="fetch" crossorigin="anonymous">
    @Html.RenderConfig(new {
    applyUrl = Url.Action("ApplyOptions", "Questionnaire"),
    editOptionsUrl = Url.Action("EditOptions", "Questionnaire"),
    resetOptionsUrl = Url.Action("ResetOptions", "Questionnaire"),
    getOptionsUrl = Url.Action("GetOptions", "Questionnaire"),
    exportOptionsUrl = Url.Action("ExportOptions", "Questionnaire"),
    addOrUpdateOptionUrl = Url.Action("AddOrUpdateOption", "Questionnaire"),
    deleteOptionUrl = Url.Action("DeleteOption", "Questionnaire"),
    isCascading = Model.IsCascading
})
    <script>           
    var require = {
                baseUrl: '/',
                paths: {
                    'vue': 'js/vue-js',
                    'jquery': 'js/jquery',
                    'i18next': 'js/i18next',
                    'i18next-http-backend': 'js/i18next-http-backend',
                    'vuetify': 'js/vuetify'
                }
            };
            loadCss = function(config) {
                var head = document.getElementsByTagName('head')[0];
             
                if (config.content) {
                    var style  = document.createElement('style');
                    style.type = 'text/css';
                    
                    if (style.styleSheet)
                        style.styleSheet.cssText = config.content;
                    else
                        style.innerHTML = config.content;
             
                    head.appendChild(style);
                } else if (config.url) {
                    var link  = document.createElement('link');
                    link.href = config.url;
                    link.rel  = 'stylesheet';
                    link.type = 'text/css';
                    head.appendChild(link);
                }
            };
        </script>
    <script data-main="js/vue-app/app" src="~/js/require.js"></script>
    @Html.GenerateFavicon(Url.Content("~/favicon.ico"))
</head>
<body>
<div id="app">
    <categories></categories>
</div>
</body>
</html>
