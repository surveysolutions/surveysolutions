<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Attachment_Delete" xml:space="preserve">
    <value>Pièce jointe {0} supprimée</value>
  </data>
  <data name="Attachment_Update" xml:space="preserve">
    <value>La pièce jointe {0} a été mise à jour</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Changer</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="LookupTable_Add" xml:space="preserve">
    <value>La table de référence {0} a été ajoutée</value>
  </data>
  <data name="LookupTable_Delete" xml:space="preserve">
    <value>La table de référence {0} a été supprimée</value>
  </data>
  <data name="LookupTable_Update" xml:space="preserve">
    <value>La table de référence {0} a été mise à jour</value>
  </data>
  <data name="Macro_Add" xml:space="preserve">
    <value>Macro {0} ajouté</value>
  </data>
  <data name="Macro_Delete" xml:space="preserve">
    <value>Macro {0} supprimé</value>
  </data>
  <data name="Macro_Update" xml:space="preserve">
    <value>Macro {0} mis à jour</value>
  </data>
  <data name="NoTitle" xml:space="preserve">
    <value>Sans titre</value>
  </data>
  <data name="Person_Add" xml:space="preserve">
    <value>Utilisateur avec e-mail {0} ajouté aux personnes partagées</value>
  </data>
  <data name="Person_Delete" xml:space="preserve">
    <value>Utilisateur avec un e-mail {0} supprimé des personnes partagées</value>
  </data>
  <data name="Question_Add" xml:space="preserve">
    <value>Question {0} ajoutée</value>
  </data>
  <data name="Question_Clone" xml:space="preserve">
    <value>Question {0} copiée à partir de la question {1}</value>
  </data>
  <data name="Question_Delete" xml:space="preserve">
    <value>Question {0} supprimée</value>
  </data>
  <data name="Question_Move_To_Roster" xml:space="preserve">
    <value>La question {0} a été déplacée vers la liste {1}</value>
  </data>
  <data name="Question_Move_To_Section" xml:space="preserve">
    <value>Question {0} déplacée vers la section {1}</value>
  </data>
  <data name="Question_Update" xml:space="preserve">
    <value>Question {0} mise à jour</value>
  </data>
  <data name="Questionnaire_Add" xml:space="preserve">
    <value>Questionnaire {0} créé</value>
  </data>
  <data name="Questionnaire_Clone" xml:space="preserve">
    <value>Questionnaire {0} cloné à partir du questionnaire {1}</value>
  </data>
  <data name="Questionnaire_Delete" xml:space="preserve">
    <value>Questionnaire {0} supprimé</value>
  </data>
  <data name="Questionnaire_Import" xml:space="preserve">
    <value>Questionnaire {0} importé</value>
  </data>
  <data name="Questionnaire_Replace" xml:space="preserve">
    <value>Questionnaire {0} remplacé</value>
  </data>
  <data name="Questionnaire_Update" xml:space="preserve">
    <value>Questionnaire {0} mis à jour</value>
  </data>
  <data name="QuestionnaireChangeHistory" xml:space="preserve">
    <value>Historique des modifications du questionnaire</value>
  </data>
  <data name="ResetQuestionnaireToThis" xml:space="preserve">
    <value>Restaurer le questionnaire à la version à {0}?</value>
  </data>
  <data name="Revert" xml:space="preserve">
    <value>Revenir</value>
  </data>
  <data name="reverted" xml:space="preserve">
    <value>Le questionnaire "{0}" a été restauré</value>
  </data>
  <data name="reverted_to" xml:space="preserve">
    <value>Le questionnaire "{0}" est restauré à la version de {1}</value>
  </data>
  <data name="RevertToThisVersion" xml:space="preserve">
    <value>Revenir à cette version</value>
  </data>
  <data name="Roster_Add" xml:space="preserve">
    <value>Roster {0} ajouté</value>
  </data>
  <data name="Roster_Clone" xml:space="preserve">
    <value>Roster {0} copié à partir du Roster {1}</value>
  </data>
  <data name="Roster_Delete" xml:space="preserve">
    <value>Roster {0} supprimé</value>
  </data>
  <data name="Roster_Move_To_Roster" xml:space="preserve">
    <value>Roster {0} déplacé vers le roster {1}</value>
  </data>
  <data name="Roster_Move_To_Section" xml:space="preserve">
    <value>Roster {0} déplacé vers la section {1}</value>
  </data>
  <data name="Roster_RosterBecameAGroup" xml:space="preserve">
    <value>Roster {0} est devenu une sous-section</value>
  </data>
  <data name="Roster_Update" xml:space="preserve">
    <value>Roster {0} mis à jour</value>
  </data>
  <data name="Section_Add" xml:space="preserve">
    <value>Section {0} ajoutée</value>
  </data>
  <data name="Section_Clone" xml:space="preserve">
    <value>Section {0} copiée à partir de la section {1}</value>
  </data>
  <data name="Section_Delete" xml:space="preserve">
    <value>Section {0} supprimée</value>
  </data>
  <data name="Section_GroupBecameARoster" xml:space="preserve">
    <value>La sous-section {0} est devenue un roster</value>
  </data>
  <data name="Section_Move_To_Roster" xml:space="preserve">
    <value>Section {0} déplacée vers le roster {1}</value>
  </data>
  <data name="Section_Move_To_Section" xml:space="preserve">
    <value>Section {0} déplacée vers la section {1}</value>
  </data>
  <data name="Section_Update" xml:space="preserve">
    <value>Section {0} mise à jour</value>
  </data>
  <data name="StaticText_Add" xml:space="preserve">
    <value>Texte statique {0} ajouté</value>
  </data>
  <data name="StaticText_Clone" xml:space="preserve">
    <value>Texte statique {0} copié à partir du texte statique {1}</value>
  </data>
  <data name="StaticText_Delete" xml:space="preserve">
    <value>Texte statique {0} supprimé</value>
  </data>
  <data name="StaticText_Move_To_Roster" xml:space="preserve">
    <value>Texte statique {0} déplacé vers le roster {1}</value>
  </data>
  <data name="StaticText_Move_To_Section" xml:space="preserve">
    <value>Texte statique {0} déplacé vers la section {1}</value>
  </data>
  <data name="StaticText_Update" xml:space="preserve">
    <value>Texte statique {0} mis à jour</value>
  </data>
  <data name="TextsReplaced" xml:space="preserve">
    <value>Tous les '{0}' ont été remplacés par '{1}'. {2} entrées concernées</value>
  </data>
  <data name="ThisListDoesNotContainAnyRecords" xml:space="preserve">
    <value>Cette liste ne contient aucun enregistrement</value>
  </data>
  <data name="Timestamp" xml:space="preserve">
    <value>Horodatage</value>
  </data>
  <data name="Translation_Delete" xml:space="preserve">
    <value>Traduction {0} supprimée</value>
  </data>
  <data name="Translation_Update" xml:space="preserve">
    <value>Traduction {0} mise à jour</value>
  </data>
  <data name="UnknownUserName" xml:space="preserve">
    <value>&lt;&lt; INCONNU &gt;&gt;</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nom d'utilisateur</value>
  </data>
  <data name="Variable_Add" xml:space="preserve">
    <value>La variable {0} a été ajoutée</value>
  </data>
  <data name="Variable_Clone" xml:space="preserve">
    <value>La variable {0} clonée à partir de la variable {1}</value>
  </data>
  <data name="Variable_Delete" xml:space="preserve">
    <value>Variable {0} supprimée</value>
  </data>
  <data name="Variable_Move_To_Roster" xml:space="preserve">
    <value>La variable {0} a été déplacée vers la liste {1}</value>
  </data>
  <data name="Variable_Move_To_Section" xml:space="preserve">
    <value>La variable {0} est déplacée vers la section {1}</value>
  </data>
  <data name="Variable_Update" xml:space="preserve">
    <value>La variable {0} a été mise à jour</value>
  </data>
  <data name="Metadata_Update" xml:space="preserve">
    <value>Métadonnées du questionnaire {0} mises à jour</value>
  </data>
  <data name="Translation_DefaultTranslationSet" xml:space="preserve">
    <value>La traduction par défaut est définie sur {0}</value>
  </data>
  <data name="Translation_Original" xml:space="preserve">
    <value>Original</value>
  </data>
</root>