<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EnableEncryption" xml:space="preserve">
    <value>启用加密</value>
  </data>
  <data name="ExportEncryption_Title" xml:space="preserve">
    <value>导出加密</value>
  </data>
  <data name="ExportEncryptionSettings" xml:space="preserve">
    <value>导出加密设置</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="RegeneratePasswordConfirm" xml:space="preserve">
    <value>您确定要重新生成密码吗？您需要重新生成导出数据才能打开。</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="ChangeStateConfirm" xml:space="preserve">
    <value>您确定要改变保护状态吗？您需要重新生成要导出的数据。</value>
  </data>
  <data name="CurrentLogo" xml:space="preserve">
    <value>当前标识</value>
  </data>
  <data name="ExportEncryption_Description" xml:space="preserve">
    <value>勾选“启用加密”将导出数据归档进行加密并使用提供的密码保护。点击刷新按钮更改密码。启用加密后，只有知道密码得到人才可以打开导出数据。</value>
  </data>
  <data name="GlobalNoteClearingConfirm" xml:space="preserve">
    <value>您确定雅删除全局注释吗？</value>
  </data>
  <data name="GlobalNoteSaved" xml:space="preserve">
    <value>未保存</value>
  </data>
  <data name="GlobalNoteSettings" xml:space="preserve">
    <value>全局注释</value>
  </data>
  <data name="GlobalNoteSettings_Description" xml:space="preserve">
    <value>在全局注释中添加文本以在服务器的每个界面显示</value>
  </data>
  <data name="GlobalNotice" xml:space="preserve">
    <value>全局注释</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>公司标识</value>
  </data>
  <data name="LogoNotUpdated" xml:space="preserve">
    <value>公司标识未更新。请提供有效的图片</value>
  </data>
  <data name="LogoSettings" xml:space="preserve">
    <value>公司标识</value>
  </data>
  <data name="LogoSettings_Description" xml:space="preserve">
    <value>公司标识会在服务器登录界面和调查员程序登录界面显示一个自定义的图片。点击上传文件按钮从您的计算机向服务器上传文件。</value>
  </data>
  <data name="LogoUpdated" xml:space="preserve">
    <value>公司标识已更新</value>
  </data>
  <data name="RemoveLogo" xml:space="preserve">
    <value>删除标识</value>
  </data>
  <data name="InterviewerAutoUpdate" xml:space="preserve">
    <value>启用自动更新</value>
  </data>
  <data name="InterviewerAutoUpdateDisabled" xml:space="preserve">
    <value>Android应用程序自动更新禁用</value>
  </data>
  <data name="InterviewerAutoUpdateEnabled" xml:space="preserve">
    <value>Android应用程序自动更新启用</value>
  </data>
</root>
