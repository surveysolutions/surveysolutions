<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EnableEncryption" xml:space="preserve">
    <value>Activer le cryptage</value>
  </data>
  <data name="ExportEncryption_Title" xml:space="preserve">
    <value>Exporter le cryptage</value>
  </data>
  <data name="ExportEncryptionSettings" xml:space="preserve">
    <value>Exporter les paramètres du cryptage</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="RegeneratePasswordConfirm" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir créer un nouveau mot de passe? Vous devrez régénérer les données exportées pour les ouvrir.</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="ChangeStateConfirm" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir changer l'état de la protection? Vous devrez régénérer les données exportées afin de l'ouvrir.</value>
  </data>
  <data name="CurrentLogo" xml:space="preserve">
    <value>Logo actuel</value>
  </data>
  <data name="ExportEncryption_Description" xml:space="preserve">
    <value>Cochez la case Activer le cryptage pour crypter les archives de données d'exportation et protégez-les avec le mot de passe fourni. Changez le mot de passe en appuyant sur le bouton d'erreur circulaire. Après le cryptage, seules les personnes connaissant le mot de passe peuvent ouvrir les données exportées.</value>
  </data>
  <data name="GlobalNoteClearingConfirm" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer la note globale?</value>
  </data>
  <data name="GlobalNoteSaved" xml:space="preserve">
    <value>Note sauvegardée</value>
  </data>
  <data name="GlobalNoteSettings" xml:space="preserve">
    <value>Note globale</value>
  </data>
  <data name="GlobalNoteSettings_Description" xml:space="preserve">
    <value>Spécifiez le texte dans le champ Note globale à afficher en haut de chaque écran sur le serveur.</value>
  </data>
  <data name="GlobalNotice" xml:space="preserve">
    <value>Note globale</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Logo de l'entreprise</value>
  </data>
  <data name="LogoNotUpdated" xml:space="preserve">
    <value>Le logo de l'entreprise n'a pas été mis à jour. Veuillez fournir une image valide</value>
  </data>
  <data name="LogoSettings" xml:space="preserve">
    <value>Logo d'entreprise</value>
  </data>
  <data name="LogoSettings_Description" xml:space="preserve">
    <value>Le logo de la société affiche une image personnalisée sur la page de connexion du serveur et sur la page de connexion de l'application Interviewer. Cliquez sur le bouton Choisir un fichier pour importer une image de votre ordinateur sur le serveur.</value>
  </data>
  <data name="LogoUpdated" xml:space="preserve">
    <value>Le logo de l'entreprise</value>
  </data>
  <data name="RemoveLogo" xml:space="preserve">
    <value>Supprimer le logo</value>
  </data>
  <data name="InterviewerAutoUpdate" xml:space="preserve">
    <value>Activer les mises à jour automatiques</value>
  </data>
  <data name="InterviewerAutoUpdateDisabled" xml:space="preserve">
    <value>Mises à jour automatiques des applications Android désactivées</value>
  </data>
  <data name="InterviewerAutoUpdateEnabled" xml:space="preserve">
    <value>Mises à jour automatiques des applications Android activées</value>
  </data>
</root>
