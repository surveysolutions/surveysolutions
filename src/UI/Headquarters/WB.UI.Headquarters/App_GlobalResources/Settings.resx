<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExportEncryption_Title" xml:space="preserve">
    <value>Export Encryption</value>
  </data>
  <data name="RegeneratePasswordConfirm" xml:space="preserve">
    <value>Are you sure you want to create a new password? You will need to regenerate exported data in order to open them.</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ExportEncryptionSettings" xml:space="preserve">
    <value>Export encryption settings</value>
  </data>
  <data name="EnableEncryption" xml:space="preserve">
    <value>Enable encryption</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="GlobalNotice" xml:space="preserve">
    <value>Global note</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Company logo</value>
  </data>
  <data name="LogoUpdated" xml:space="preserve">
    <value>Company logo updated</value>
  </data>
  <data name="UserProfileSettings_Title" xml:space="preserve">
    <value>User Profile settings</value>
  </data>
  <data name="MobileAppSettings_Title" xml:space="preserve">
    <value>Interviewer/Supervisor application settings</value>
  </data>
  <data name="MobileAppSettings_Description" xml:space="preserve">
    <value>Some specific settings by android version of Interviewer/Supervisor application</value>
  </data>
  <data name="EditOwnProfileEnabled" xml:space="preserve">
    <value>Enumerator's Profile editing</value>
  </data>
  <data name="EditOwnProfileEnabledDesc" xml:space="preserve">
    <value>Allow enumerators update their contact information in the profile</value>
  </data>
  <data name="InterviewerAutoUpdate" xml:space="preserve">
    <value>Enable automatic updates</value>
  </data>
  <data name="InterviewerAutoUpdateEnabled" xml:space="preserve">
    <value>Android applications automatic updates enabled</value>
  </data>
  <data name="InterviewerAutoUpdateDisabled" xml:space="preserve">
    <value>Android applications automatic updates disabled</value>
  </data>
  <data name="LogoNotUpdated" xml:space="preserve">
    <value>Company logo was not updated. Please provide a valid image</value>
  </data>
  <data name="ChangeStateConfirm" xml:space="preserve">
    <value>Are you sure you want to change protection state? You will need to regenerate exported data in order to open it.</value>
  </data>
  <data name="GlobalNoteSettings" xml:space="preserve">
    <value>Global note</value>
  </data>
  <data name="LogoSettings" xml:space="preserve">
    <value>Company logo</value>
  </data>
  <data name="RemoveLogo" xml:space="preserve">
    <value>Remove logo</value>
  </data>
  <data name="GlobalNoteSaved" xml:space="preserve">
    <value>Note saved</value>
  </data>
  <data name="ExportEncryption_Description" xml:space="preserve">
    <value>Check Enable encryption box to encrypt export data archives and protect them with the provided password. Change password by pressing the circular error button. After encryption, only people who know the password can open the exported data.</value>
  </data>
  <data name="GlobalNoteSettings_Description" xml:space="preserve">
    <value>Specify text in the Global Note field to be shown on the top of every screen on the server.</value>
  </data>
  <data name="LogoSettings_Description" xml:space="preserve">
    <value>Company logo shows a custom image on the server login page and on the login page of the Interviewer app. Click the Choose file button to upload an image from your computer to the server.</value>
  </data>
  <data name="CurrentLogo" xml:space="preserve">
    <value>Current logo</value>
  </data>
  <data name="GlobalNoteClearingConfirm" xml:space="preserve">
    <value>Are you sure you want to delete global note?</value>
  </data>
  <data name="AutoUpdateDescription" xml:space="preserve">
    <value>If checked then only latest version of Interviewer/Supervisor application can synchronize with Headquarters</value>
  </data>
  <data name="EmailProvider_Amazon" xml:space="preserve">
    <value>Amazon Simple Email Service (SES)</value>
  </data>
  <data name="EmailProvider_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="EmailProvider_Sendgrid" xml:space="preserve">
    <value>SendGrid Email Delivery Service</value>
  </data>
  <data name="EmailProvider_NoneDescription" xml:space="preserve">
    <value>Invitation messages for web interviews are not sent to the respondents by Survey Solutions.</value>
  </data>
  <data name="EmailProvider_AmazonDescription" xml:space="preserve">
    <value>Configure the parameters to access Amazon SES below. More information on usage of Amazon SES with Survey Solutions is available </value>
  </data>
  <data name="EmailProvider_SendgridDescription" xml:space="preserve">
    <value>Configure the parameters to access SendGrid below. More information on usage of SendGrid with Survey Solutions is available </value>
  </data>
  <data name="EmailProvider_SenderAddress" xml:space="preserve">
    <value>Sender email address</value>
  </data>
  <data name="EmailProvider_SendGridApiKey" xml:space="preserve">
    <value>API key</value>
  </data>
  <data name="EmailProvider_AwsAccessKeyId" xml:space="preserve">
    <value>Access key ID</value>
  </data>
  <data name="EmailProvider_AwsSecretAccessKey" xml:space="preserve">
    <value>Secret access key</value>
  </data>
  <data name="EmailProvider_TestEmailAddress" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="EmailProvider_SendTestEmail" xml:space="preserve">
    <value>Send email</value>
  </data>
  <data name="EmailProvider_SendTestEmailResult" xml:space="preserve">
    <value>An example of invitation email was sent successfully</value>
  </data>
  <data name="EmailProvider_SendTestEmailHeader" xml:space="preserve">
    <value>Send test email</value>
  </data>
  <data name="EmailProvider_PageDesc" xml:space="preserve">
    <value>Set up bulk email service provider. Configure how the invitations for web interviews will be sent.</value>
  </data>
  <data name="EmailProvider_SenderHeader" xml:space="preserve">
    <value>Sender information</value>
  </data>
  <data name="EmailProvider_SenderHelp" xml:space="preserve">
    <value>Email address of the sender that will appear in the FROM field of the incoming messages.</value>
  </data>
  <data name="EmailProvider_ReplyAddressHelp" xml:space="preserve">
    <value>Email address where the replies from the invitees may be sent (default is the sender email address.)</value>
  </data>
  <data name="EmailProvider_SenderName" xml:space="preserve">
    <value>Sender name</value>
  </data>
  <data name="EmailProvider_ReplyAddress" xml:space="preserve">
    <value>Reply address</value>
  </data>
  <data name="EmailProvider_SenderNameHelp" xml:space="preserve">
    <value>Name of the sender that will appear in the FROM field of the incoming messages.</value>
  </data>
  <data name="EmailProvider_Address" xml:space="preserve">
    <value>Sender postal address</value>
  </data>
  <data name="EmailProvider_AddressHelp" xml:space="preserve">
    <value>Current postal address of the sender.</value>
  </data>
  <data name="EmailProvider_ServiceProvideHeader" xml:space="preserve">
    <value>Specify bulk email service provider</value>
  </data>
  <data name="EmailProvider_AwsAccessKeyIdHelp" xml:space="preserve">
    <value>You can find the AWS account ID from AWS Management Console</value>
  </data>
  <data name="EmailProvider_AwsSecretAccessKeyHelp" xml:space="preserve">
    <value>Found in Security Credentials at AWS Management Console</value>
  </data>
  <data name="EmailProvider_SendGridApiKeyHelp" xml:space="preserve">
    <value>You can find it on API Keys page under SendGrid settings menu item</value>
  </data>
  <data name="EmailProvider_GeneralError" xml:space="preserve">
    <value>General error occurred</value>
  </data>
  <data name="EmailProvider_HelpLinkText" xml:space="preserve">
    <value>here</value>
  </data>
  <data name="EmailProvider_SendTestEmailMessage" xml:space="preserve">
    <value>Send yourself a test email message to verify that the bulk email service is functional and to get a preview of what the respondents will receive.</value>
  </data>
  <data name="EmailProvider_SettingsSavedSuccessfully" xml:space="preserve">
    <value>Email service configuration was saved successfully.</value>
  </data>
  <data name="DeviceNotifications" xml:space="preserve">
    <value>Enable notifications on device</value>
  </data>
  <data name="DeviceNotificationsDescription" xml:space="preserve">
    <value>When enabled devices will notify owners about changes and actions to be taken</value>
  </data>
</root>
