<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExportEncryption_Title" xml:space="preserve">
    <value>Export Encryption</value>
  </data>
  <data name="RegeneratePasswordConfirm" xml:space="preserve">
    <value>Are you sure you want to create a new password? You will need to regenerate exported data in order to open them.</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ExportEncryptionSettings" xml:space="preserve">
    <value>Export encryption settings</value>
  </data>
  <data name="EnableEncryption" xml:space="preserve">
    <value>Enable encryption</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="GlobalNotice" xml:space="preserve">
    <value>Global note</value>
  </data>
  <data name="Logo" xml:space="preserve">
    <value>Company logo</value>
  </data>
  <data name="LogoUpdated" xml:space="preserve">
    <value>Company logo updated</value>
  </data>
  <data name="InterviewerSettings_Title" xml:space="preserve">
    <value>Interviewer application settings</value>
  </data>
  <data name="InterviewerSettings_Description" xml:space="preserve">
    <value>Some specific settings by android version of Interviewer application</value>
  </data>
  <data name="InterviewerAutoUpdate" xml:space="preserve">
    <value>Enable automatic updates</value>
  </data>
  <data name="InterviewerAutoUpdateEnabled" xml:space="preserve">
    <value>Android applications automatic updates enabled</value>
  </data>
  <data name="InterviewerAutoUpdateDisabled" xml:space="preserve">
    <value>Android applications automatic updates disabled</value>
  </data>
  <data name="LogoNotUpdated" xml:space="preserve">
    <value>Company logo was not updated. Please provide a valid image</value>
  </data>
  <data name="ChangeStateConfirm" xml:space="preserve">
    <value>Are you sure you want to change protection state? You will need to regenerate exported data in order to open it.</value>
  </data>
  <data name="GlobalNoteSettings" xml:space="preserve">
    <value>Global note</value>
  </data>
  <data name="LogoSettings" xml:space="preserve">
    <value>Company logo</value>
  </data>
  <data name="RemoveLogo" xml:space="preserve">
    <value>Remove logo</value>
  </data>
  <data name="GlobalNoteSaved" xml:space="preserve">
    <value>Note saved</value>
  </data>
  <data name="ExportEncryption_Description" xml:space="preserve">
    <value>Check Enable encryption box to encrypt export data archives and protect them with the provided password. Change password by pressing the circular error button. After encryption, only people who know the password can open the exported data.</value>
  </data>
  <data name="GlobalNoteSettings_Description" xml:space="preserve">
    <value>Specify text in the Global Note field to be shown on the top of every screen on the server.</value>
  </data>
  <data name="LogoSettings_Description" xml:space="preserve">
    <value>Company logo shows a custom image on the server login page and on the login page of the Interviewer app. Click the Choose file button to upload an image from your computer to the server.</value>
  </data>
  <data name="CurrentLogo" xml:space="preserve">
    <value>Current logo</value>
  </data>
  <data name="GlobalNoteClearingConfirm" xml:space="preserve">
    <value>Are you sure you want to delete global note?</value>
  </data>
  <data name="AllowedToSync" xml:space="preserve">
    <value>Allowed Interviewer/Supervisor application versions:</value>
  </data>
  <data name="Any" xml:space="preserve">
    <value>Any</value>
  </data>
  <data name="VersionOrNewer" xml:space="preserve">
    <value>Allow to use {0} or newer</value>
  </data>
  <data name="CurrentVersion" xml:space="preserve">
    <value>Same as the Headquarters</value>
  </data>
</root>
