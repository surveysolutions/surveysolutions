@using WB.Core.SharedKernels.SurveyManagement.Web.Code.Security
@using WB.UI.Headquarters.Resources

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = Dashboard.Questionnaires;
}

@section scripts
{
    @Scripts.Render("~/js/main-no-libs")
    @Scripts.Render("~/js/list")
    @Scripts.Render("~/js/questionnaires")
    <script type="text/javascript">
        'use strict';

        $(function () {
            var questionnaireListUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "QuestionnairesApi", action = "Questionnaires" })';
           
            var requestHeaders = {};
            requestHeaders[input.settings.acsrf.tokenName] = input.settings.acsrf.token;

            $.fn.dataTable.ext.errMode = 'none';

            var onTableInitComplete = function () {
                $('#DataTables_Table_0_filter label').on('click', function (e) {
                    if (e.target !== this)
                        return;
                    if ($(this).hasClass("active")) {
                        $(this).removeClass("active");
                    }
                    else {
                        $(this).addClass("active");
                    }
                    $(".column-questionnaire-title").toggleClass("padding-left-slide");
                });

                $.contextMenu({
                    // define which elements trigger this menu
                    selector: "table#questionnaires .with-context-menu",
                    // define the elements of the menu
                    items: {
                        foo: { name: "Foo", callback: function (key, opt) { alert("Foo!"); } },
                        bar: { name: "Bar", callback: function (key, opt) { alert("Bar!") } }
                    }
                });
            };

            var table = $('table#questionnaires')
                .on('init.dt', onTableInitComplete)
                .on('error.dt', function (e, settings, techNote, message) {
                    //location.reload();
                })
                .on('init.dt', function () {
                    
                })
                .DataTable({
                    processing: true,
                    language:
                    {
                        "url": window.input.settings.config.dataTableTranslationsUrl
                    },
                    serverSide: true,
                    ajax: {
                        url: questionnaireListUrl,
                        type: "POST",
                        headers: requestHeaders
                    },
                    "createdRow": function( row, data, dataIndex ) {
                        $(row).addClass('with-context-menu');
                    },
                    columns: [
                       {
                           data: "title",
                           name: "Title", // case-sensitive!
                           //"class": "with-context-menu"
                           //render: function (data, type, row) {
                           //    return "<a href=" + questionnaireImportModeUrl + "/" + row.id + "?questionnaireTitle=" + encodeURI(data) + ">" + data + "</a>";
                           //}
                       },
                       {
                           data: "version",
                           name: "Version"  // case-sensitive! should be DB name here from Designer DB questionnairelistviewitems? to sort column
                       },
                       {
                           data: "importDate",
                           name: "ImportDate"  // case-sensitive! should be DB name here from Designer DB questionnairelistviewitems? to sort column
                       },
                       {
                           data: "creationDate",
                           name: "CreationDate"  // case-sensitive! should be DB name here from Designer DB questionnairelistviewitems? to sort column
                       },
                       {
                           data: "lastEntryDate",
                           name: "LastEntryDate", // case-sensitive! should be DB name here from Designer questionnairelistviewitems? to sort column
                           "class": "changed-recently"
                       },
                       {
                           data: "createdBy",
                           name: "CreatorName",  // case-sensitive! should be DB name here from Designer DB questionnairelistviewitems? to sort column
                           "class": "created-by"
                       }
                    ],
                    rowId: 'id',
                    pagingType: "full_numbers",
                    lengthChange: false, // do not show page size selector
                    pageLength: 50, // page size
                    "order": [[1, 'desc']]
                });
        });
    </script>
}
<main>
    <div class="container-fluid">
        <div class="row">
            <div class="page-header">
                <h1>@Dashboard.Questionnaires</h1>
            </div>
        </div>
        <div class="well well-sm">
            <div class="btn-group">
                @if (!(User.Identity.IsObserver()))
                {
                    <div class="form-inline">
                        <a class="btn btn-default" data-bind="attr: { href: $importTemplateUrl }">
                            <i class="glyphicon glyphicon-import">
                            </i> @Dashboard.ImportTemplate
                        </a>
                    </div>
                }
            </div>
        </div>

        <div id="list">
            <table id="questionnaires" class="table table-striped table-bordered table-condensed table-hover">
                <thead>
                <tr>
                    <th>@Dashboard.Title</th>
                    <th>@Dashboard.Version</th>
                    <th>@Dashboard.ImportDate</th>
                    <th>@Dashboard.CreationDate</th>
                    <th>@Dashboard.LastEntryDate</th>
                    <th>Created By</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
</main>
