@using WB.Core.BoundedContexts.Headquarters.AssignmentImport
@model WB.UI.Headquarters.Models.PreloadedDataInterviewProgressModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = BatchUpload.InterviewsImport_ImportingProgressPageTitle;
}

@section scripts
{
    @Scripts.Render("~/js/responsibles-selector")
    <script type="text/javascript">
        var InterviewCreationProgressModel = function(ajax) {
            var $importInterviewsStatusUrl =
                '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "InterviewsApi", action = "GetImportInterviewsStatus"})';

            var self = this;

            self.status = {
                verifiedCount: ko.observable(@Model.Status.VerifiedCount),
                totalCount: ko.observable(@Model.Status.TotalCount),
                failedVerifications: ko.observable(@Model.Status.WithErrorsCount),
                hasErrors: ko.observable(false)
            };

            self.updateStatusByInterviewsImport = function() {
                ajax.sendRequest($importInterviewsStatusUrl,
                    'get',
                    {},
                    true,
                    function (data) {
                        if (data == null || data.status === "Import")
                        {
                            var verificationFinishedUrl =
                                '@Url.Action("InterviewImportProgress", "SurveySetup")';

                            window.location.href = verificationFinishedUrl;
                        }

                        self.status.verifiedCount(data.verifiedInterviewsCount);
                        self.status.totalCount(data.totalInterviewsCount);
                        self.status.failedVerifications(data.interviewsWithError);

                        self.status.hasErrors(data.interviewsWithError > 0);

                        _.delay(self.updateStatusByInterviewsImport, 3000);
                    });
            };
            self.updateStatusByInterviewsImport();
        };

        $(function() {
            var model = new InterviewCreationProgressModel(new Ajax(new Notifier()));
            ko.applyBindings(model);

            window.model = model;
        });
    </script>
}
<main>
    <div class="container">
        <div class="row">
            <div class="page-header">
                <ol class="breadcrumb">
                    <li>@Html.ActionLink(MainMenu.SurveySetup, "Index", "SurveySetup")</li>
                    <li>@Html.ActionLink(BatchUpload.BreadCrumbs_CreatingMultipleInterviews, "BatchUpload", "SurveySetup", new { id = Model.QuestionnaireId, version = Model.Version }, new { })</li>
                </ol>
                <h1>@BatchUpload.CreatingMultipleAssignments</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7">
                <h3>
                    @string.Format(BatchUpload.Import_VerificationOfAssignments_ForQuestionnaire, Html.QuestionnaireName(Model.QuestionnaireTitle, Model.Version))
                </h3>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7 col-xs-12 action-block">
                <div class="import-progress">
                    <p class="success-text">
                        @BatchUpload.Import_VerificationOfDataFile_Succeeded
                    </p>
                </div>
                <div class="import-progress" >
                    <p>
                        @BatchUpload.Import_VerificationOfAssignmentData
                        <span>
                            (@Html.Raw(string.Format(BatchUpload.Import_VerificationOfDataFile_Progress, "<span data-bind='text: status.verifiedCount'></span>", "<span data-bind='text: status.totalCount'></span>")))
                        </span>
                    </p>
                    <p class="success-text" data-bind="if: status.verifiedCount() > 0">
                        <!-- ko if: (status.verifiedCount() - status.failedVerifications()) == 1 -->
                        @BatchUpload.Import_Verification_1_AssignmentVerified
                        <!-- /ko -->
                        <!-- ko if: (status.verifiedCount() - status.failedVerifications()) > 1 -->
                        @Html.Raw(string.Format(BatchUpload.Import_Verification_AssignmentsVerified, "<span data-bind='text: (status.verifiedCount() - status.failedVerifications())'></span>"))
                        <!-- /ko -->
                    </p>
                    <p class="default-text" data-bind="ifnot: status.hasErrors">@BatchUpload.ImportInterviews_NoneFailed</p>
                    <p class="error-text" data-bind="if: status.hasErrors">
                        <!-- ko if: status.failedVerifications() == 1 -->
                        @BatchUpload.Import_Verification_1_Error
                        <!-- /ko -->
                        <!-- ko if: status.failedVerifications() > 1 -->
                        @Html.Raw(string.Format(BatchUpload.Import_Verification_Errors, "<span data-bind='text: status.failedVerifications'></span>"))
                        <!-- /ko -->
                    </p>
                </div>
                <div class="cancelable-progress">
                    <div class="progress">
                        <div class="progress-bar progress-bar-success" data-bind="style: { width: (100 * status.verifiedCount()/status.totalCount()) + '%' }, attr: {'aria-valuemax': status.totalCount, 'aria-valuenow': status.verifiedCount}" role="progressbar" aria-valuenow="@Model.Status.VerifiedCount" aria-valuemin="0" aria-valuemax="@Model.Status.TotalCount">
                            <span class="sr-only"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
