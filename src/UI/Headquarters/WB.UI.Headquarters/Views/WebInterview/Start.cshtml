@using Recaptcha.Web.Mvc;
@model WB.UI.Headquarters.Models.WebInterview.StartWebInterview
@{
    Layout = "_WebInterviewLayout.cshtml";
}
@if (Model.IsStarted)
{
    <h2>@WebInterview.WebSurvey</h2>
    <p>
        <ul class="list-unstyled">
            <li><strong>@WebInterview.FinishInterviewText</strong></li>
            <li><strong>@string.Format(WebInterview.SurveyFormatText, Model.QuestionnaireTitle)</strong></li>
        </ul>
    </p>
}
else
{
    <h2>@WebInterview.WelcomeText</h2>
    <p><b>@(string.Format(WebInterview.InvitationText, Model.QuestionnaireTitle))</b></p>
}

<div class="additional-info-block">
    @WebInterview.Resume_InvitationSmallText
    @if (Model.IsStarted)
    {
        <ul class="list-unstyled">
            <li>@string.Format(WebInterview.InterviewIdFormatText, Model.InterviewId)</li>
            <li>@string.Format(WebInterview.InterviewStartDateFormatText, Model.StartedDate.HasValue ? Model.StartedDate.Value.ToString(@"MMM dd yyyy, hh:mm") : WebInterview.NotStartedText)</li>
        </ul>
    }
</div>
@if (Model.ServerUnderLoad)
{
    <p><strong>@Html.Raw(WebInterview.ServerUnderLoad)</strong></p>
}
@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.AntiForgeryToken()
    </div>
    if (Model.UseCaptcha && !Model.ServerUnderLoad)
    {
        if (ViewData.ModelState.ContainsKey("InvalidCaptcha") && ViewData.ModelState["InvalidCaptcha"].Errors.Any())
        {
            <div class="form-group has-error">
                <p>
                    <span class="help-block">
                        @Html.ValidationMessage("InvalidCaptcha")
                    </span>
                </p>
            </div>
        }
        <div class="form-group">
            @Html.Recaptcha()
        </div>
    }

    if (Model.ServerUnderLoad)
    {
        <div class="form-actions">
            <button class="btn btn-success btn-lg" onClick="window.location.reload();return false">@WebInterview.RefreshPage</button>
        </div>
    }
    else
    {
        if (Model.HasPreviousStartedInterview)
        {
            <div class="form-actions">
                <button class="btn btn-success btn-lg" name="resume" value="true">@WebInterview.Resume</button>
                <button type="submit" class="btn btn-link">@WebInterview.DiscardAndStart</button>
            </div>
                <p>@WebInterview.OrStartInterview</p>
                <div class="form-actions"><button type="submit" class="btn btn-link btn-looks-like-link">@WebInterview.Start</button></div>
        }
        else
        {
            <div class="form-actions">
                <button class="btn btn-success btn-lg" type="submit" name="resume" value="false">@WebInterview.Start</button>
            </div>
        }
    }
}
