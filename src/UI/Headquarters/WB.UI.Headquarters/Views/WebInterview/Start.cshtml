@using Recaptcha.Web.Mvc;
@model WB.UI.Headquarters.Models.WebInterview.StartWebInterview
@{
    Layout = "_WebInterviewLayout.cshtml";
}
<div class="row two-columns-form">
    <div class="col-lg-4 col-lg-offset-2 col-md-5 col-md-offset-1 col-sm-6 col-xs-12 left-column">
        <div class="centered-box-table">
            <div class="centered-box-table-cell">
                <img src="@Url.Content("~/api/CompanyLogo/Thumbnail")" id="placeholder" alt="company-logo" />
                <div class="default-logo"></div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-sm-6 col-xs-12 right-column">
        <div class="centered-box-table">
            <h1>
                @WebInterview.WelcomeText
            </h1>
            <h3>
                @(string.Format(WebInterview.InvitationText, Model.QuestionnaireTitle))
            </h3>
            <p>
                @WebInterview.InvitationSmallText
            </p>
            @if (Model.ServerUnderLoad)
            {                    
                <p><strong>@Html.Raw(WebInterview.ServerUnderLoad)</strong></p>
            }
            @using (Html.BeginForm())
            {
                <div class="form-group">
                    @Html.AntiForgeryToken()
                </div>
                if (Model.UseCaptcha && !Model.ServerUnderLoad)
                {
                    if (ViewData.ModelState.ContainsKey("InvalidCaptcha") && ViewData.ModelState["InvalidCaptcha"].Errors.Any())
                    {
                        <div class="form-group has-error">
                            <p>
                                <span class="help-block">
                                    @Html.ValidationMessage("InvalidCaptcha")
                                </span>
                            </p>
                        </div>
                    }
                    <div class="form-group">
                        @Html.Recaptcha()
                    </div>
                }

                if (Model.HasPreviousStartedInterview && !Model.ServerUnderLoad)
                {
                    <p>
                        @WebInterview.HasPreviousStartedInterview
                    </p>
                    <div class="form-actions">
                        <button class="btn btn-success btn-lg" name="resume" value="true">@WebInterview.Resume</button>
                    </div>
                    <p>
                        <br />
                        @WebInterview.OrStartInterview
                    </p>
                }

                <div class="form-actions">
                    @if (Model.ServerUnderLoad) {
                        <button class="btn btn-success btn-lg" onClick="window.location.reload(); return false">@WebInterview.RefreshPage</button>
                    } else {
                        <button class="btn btn-success btn-lg" type="submit">@WebInterview.Start</button>
                    }                
                </div>
            }
        </div>
    </div>
</div>