@using System.Web.Optimization
@using Main.Core.Entities.SubEntities
@using WB.Core.GenericSubdomains.Utils
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@using WB.Core.SharedKernels.SurveyManagement.Web.Code
@using WB.UI.Headquarters.Resources
@using WB.Core.SharedKernels.SurveyManagement.Web.Utils




@model WB.Core.SharedKernels.SurveyManagement.Web.Models.InterviewersModel
@{
    Layout = "~/Views/Shared/_LayoutWithSidebar.cshtml";
    ViewBag.Title = Pages.Interviewers_Title;
}

@section scripts
{
    @Scripts.Render("~/Scripts/bootstrap3-typeahead.js", "~/Scripts/components/typeahead-extended.js", "~/Scripts/knockout/ko.typeahead.js", "~/Scripts/viewmodels/pages/interviewers.js")
    <script type="text/javascript">
        var $interviewersPageUrl = '@Html.Raw(@Url.Action("Index", "Interviewers", new { }, Request.Url.Scheme))';
        var $interviewersApiUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "UsersApi", action = "Interviewers"})';
        var $supervisorsUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "Teams", action = "Supervisors"})';
        var $editUrl = '@Url.Action("Edit", "Interviewer", new { area = string.Empty })';
        var $commandExecutionUrl = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "CommandApi", action = "ExecuteCommands" })';
        $(function () {
            var model = new Supervisor.VM.Interviewers($interviewersApiUrl, $commandExecutionUrl, $interviewersPageUrl, $supervisorsUrl);
            ko.applyBindings(model);
            model.load();

            @if (TempData.ContainsKey(Alerts.SUCCESS))
            {
                <text> setTimeout(function () { $('.alert-success').hide(); }, 5000);</text>
            }
        });

    </script>
}

@section header
{
    <h3 class="sinle-line-header">@Pages.Interviewers_Header</h3>
}

@section actionbar
{
    <div class="btn-group">
        <div class="form-inline">
            @if (User.IsInRole(UserRoles.Headquarter.ToString()) || User.IsInRole(UserRoles.Administrator.ToString()))
            {
                <a class="btn btn-default" href="@Url.Action("Create", "Interviewer", new { area = string.Empty})">
                    <i class="glyphicon glyphicon-user"></i> @Pages.Create
                </a>

                if (User.IsInRole(UserRoles.Administrator.ToString()))
                {
                    <button type="button" class="btn btn-default" data-bind="visible: Archived() != 'true', disable: IsNothingSelected, click: $root.archiveInterviewers">@Pages.Interviewers_Archive</button>
                    <button type="button" class="btn btn-default" data-bind="visible: Archived() == 'true', disable: IsNothingSelected, click: $root.unarchiveInterviewers">@Pages.Interviewers_Unarchive</button>
                }
            }

            <div class="input-group">
                <input type="text" class="form-control" placeholder="@Pages.Search" data-bind="value: SearchBy, enterKey: filter">
                <div class="input-group-btn">
                    <button class="btn btn-default" type="button" data-bind="click: filter">
                        <i class="glyphicon glyphicon-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}


@section filters
{
    <ul class="list-group">
    @if (User.IsInRole(UserRoles.Headquarter.ToString()) || User.IsInRole(UserRoles.Administrator.ToString()))
    {
        <li class="list-group-item">
            <h4 class="list-group-item-heading">@Pages.Interviewers_SupervisorTitle</h4>
            <p class="list-group-item-text">
                <div class="input-group">
                    <input class="form-control" placeholder="@Pages.AnyOption" data-bind="typeahead: SelectedSupervisor, typeaheadOptions: {source: Supervisors, displayText: function(item){return item.UserName}}, valueupdate:'afterkeydown'" type="text"/>
                    <span data-bind="spinner: IsSupervisorsLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                    <div class="input-group-btn" data-bind="click: function(){ SelectedSupervisor(undefined); }">
                        <div class="btn btn-default"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                    </div>
                </div>
            </p>
        </li>
    }
        <li class="list-group-item">
            <h4 class="list-group-item-heading">@Pages.Interviewers_ConnectedToDeviceTitle</h4>
            <p class="list-group-item-text">
                <select data-bind="value: ConnectedToDevice" class="form-control">
                    <option value="">@Pages.AnyOption</option>
                    <option value="true">@Pages.Interviewers_Connected</option>
                    <option value="false">@Pages.Interviewers_NotConnected</option>
                </select>
            </p>
        </li>
        <li class="list-group-item">
            <h4 class="list-group-item-heading">@Pages.Interviewers_ArchiveStatusTitle</h4>
            <p class="list-group-item-text">
                <select data-bind="value: Archived" class="form-control">
                    <option value="false">@Pages.Interviewers_ActiveUsers</option>
                    <option value="true">@Pages.Interviewers_ArchivedUsers</option>
                </select>
            </p>
        </li>
    </ul>

}


@section grid
{
    @{ bool isVisibleSupervisorColumn = User.IsInRole(UserRoles.Headquarter.ToString()) || User.IsInRole(UserRoles.Administrator.ToString()); }
    <table class="table table-striped table-bordered table-condensed table-hover">
        <thead>
            <tr>
                @if (User.IsInRole(UserRoles.Administrator.ToString()))
                {
                    <th>
                        <input type="checkbox" data-bind="click: $root.selectAll($element)"/>
                    </th>
                }
                <th data-bind='sortby : "UserName"'>@Pages.Interviewers_UserNameTitle</th>
                <th data-bind='sortby : "CreationDate"'>@Pages.Interviewers_CreationDateTitle</th>
                <th data-bind='sortby : "Email"'>@Pages.Interviewers_EmailTitle</th>
                @if (isVisibleSupervisorColumn)
                {
                    <th>@Pages.Interviewers_SupervisorTitle</th>
                } 
                <th>@Pages.Interviewers_ConnectedToDeviceTitle</th>
                @if (User.IsInRole("Administrator"))
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            <!-- ko foreach:Items -->
            <tr>
                @if (User.IsInRole(UserRoles.Administrator.ToString()))
                {
                    <td>
                        <input type="checkbox" data-bind="checked: IsSelected" />
                    </td>
                }
                <td>
                    <a data-bind="attr: { href: $editUrl + '/' + UserId() }, text: UserName, visible: $parent.Archived() != 'true'"></a>
                    <span data-bind="text: UserName, visible: $parent.Archived() == 'true'"></span>
                </td>
                <td data-bind="text: CreationDate"></td>
                <td>
                    <a data-bind="attr:{href:'mailto:' + Email()},text:Email"></a>
                </td>
                @if (isVisibleSupervisorColumn)
                {
                    <td data-bind="text: SupervisorName()"></td>
                }
                <td data-bind="text: DeviceId() == null ? 'No': 'Yes'"></td>
                @if (User.IsInRole("Administrator"))
                {
                    <td class="interviewers-list-actions-column">
                        <a class="btn btn-danger" data-bind="click : $parent.archiveUser, visible: $parent.Archived() != 'true'">
                            <i class="glyphicon glyphicon-remove"></i>
                        </a>
                        <a class="btn btn-success" data-bind="click : $parent.unarchiveUser, visible: $parent.Archived() == 'true'">
                            <i class="glyphicon glyphicon-plus"></i>
                        </a>
                    </td>
                }
            </tr>
            <!-- /ko -->
        </tbody>
    </table>

    <script type="text/html" id="confirm-archive-template">
        <h3>
            <b>
                <!-- ko if: $data.length>5 -->

                <span class='text-normal' data-bind='text: length'></span>

                <!-- /ko -->
                <!-- ko if: $data.length<=5 -->
                <!-- ko foreach:$data -->
                <!-- ko if: $index() > 0 -->,<!-- /ko -->
                '<span class='text-normal' data-bind='text: UserName'></span>'
                <!-- /ko --> <!-- /ko -->
            </b>
            @Pages.Interviewers_ArchiveInterviewers
        </h3>
    </script>
    <script type="text/html" id="confirm-archive-continue-message-template">
        <br/>
        <b>
            <span style="color: red;">
                @Pages.Interviewers_ArchiveInterviewersConfirmMessage
            </span>
        </b>
        <br/>
        <br/>@Pages.Interviewers_ArchiveInterviewersConfirm
    </script>

    <script type="text/html" id="confirm-unarchive-template">
        <h3>
            <b>
                <!-- ko if: $data.length>5 -->

                <span class='text-normal' data-bind='text: length'></span>

                <!-- /ko -->
                <!-- ko if: $data.length<=5 -->
                <!-- ko foreach:$data -->
                <!-- ko if: $index() > 0 -->,<!-- /ko -->
                '<span class='text-normal' data-bind='text: UserName'></span>'
                <!-- /ko --> <!-- /ko -->
            </b>
            @Archived.UnarchiveInterviewerWarning
        </h3>
    </script>
    <script type="text/html" id="confirm-unarchive-continue-message-template">
        <br />@Archived.DoYouWantToContinue
    </script>
}