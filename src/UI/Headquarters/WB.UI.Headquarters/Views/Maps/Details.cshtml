@using WB.Core.BoundedContexts.Headquarters
@using WB.Core.BoundedContexts.Headquarters.Services
@using WB.Core.GenericSubdomains.Portable
@using WB.Core.GenericSubdomains.Portable.ServiceLocation
@model WB.Core.BoundedContexts.Headquarters.Views.Maps.MapBrowseItem

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = Dashboard.Maps;

    var authorizedUser = ServiceLocator.Current.GetInstance<IAuthorizedUser>();
    var isObserver = authorizedUser.IsObserver;
    var isAdmin = authorizedUser.IsAdministrator;
}

@section scripts
{
    @Scripts.Render("~/js/main-no-libs")
    @Scripts.Render("~/js/common")
    @Scripts.Render("~/js/list")
    @Scripts.Render("~/js/mapusers")

    <script type="text/javascript">
        var mapsListUrl =
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "MapsApi", action = "MapUsers"})';

        var $deleteMapUserUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "MapsApi", action = "DeleteMapUser"})';

        var notifier = new Notifier();
        var ajax = new Ajax(notifier);

        $(function() {
            var model = new Supervisor.VM.MapUsers(mapsListUrl, notifier, ajax, $deleteMapUserUrl);

            model.getDataTableColumns = function() {
                return [
                    {
                        data: "userName",
                        name: "UserName", // case-sensitive!
                        "class": "title"
                    }
                ];
            };

            model.onTableInitCompleteExtra = function () {

                var buildMenuItem = function(selectedRow) {
                    var items = {}


                    @if (!isObserver)
                    {
                        <text>
                        items["delete"] =
                        {
                            name: "@Pages.MapDetails_DelinkUser",
                            callback: model.deleteMapUser
                        };
                        </text>
                    }
                    return items;
                }

                var contextMenuOptions = {
                    selector: "table#data_holder .with-context-menu",
                    autoHide: false,
                    build: function ($trigger, e) {
                        var selectedRow = model.selectRowAndGetData($trigger);
                        var items = buildMenuItem(selectedRow);
                        return { items: items };
                    },
                    trigger: 'left'
                };

                $.contextMenu(contextMenuOptions);
            };

            ko.applyBindings(model);
            model.load();
        });
    </script>

}

<main>
    <div class="container-fluid">
        <div class="row">
            @Html.Partial("_alerts")
            <div class="page-header clearfix">
                <ol class="breadcrumb">
                    <li>
                        @Html.ActionLink(MainMenu.Maps, "Index", "Maps")
                    </li>
                </ol>
                    <h1>Map: @Model.FileName</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-md-7 col-sm-12">
                <div class="row">
                    <div class="col-md-4 col-sm-3 questionnaire-statistics">
                        <ul class="list-unstyled">
                            <li><b>Max Scale:</b> <span>@Model.MaxScale</span></li>
                            <li><b>Min Scale:</b> <span>@Model.MinScale</span></li>
                        </ul>
                    </div>
                    <div class="col-md-4 col-sm-3 questionnaire-statistics">
                        <ul class="list-unstyled">
                            <li><b>Size:</b> <span>@FileSizeUtils.SizeInMegabytes(Model.Size) MB</span></li>
                            <li><b>Wkid:</b> <span>@Model.Wkid</span></li>
                        </ul>
                    </div>
                    <div class="col-md-4 col-sm-3 questionnaire-statistics">
                        <ul class="list-unstyled">
                            <li><b>Imported on:</b> <span>@(Model.ImportDate.HasValue ? Model.ImportDate.Value.FormatDateWithTime():"")</span></li>
                        </ul>
                    </div>
                </div>
                <iframe width="100%" height="550px" src='@Url.RouteUrl("Default", new {httproute = "", controller = "Maps", action = "MapPreview", mapName = Model.Id})'></iframe>
                <p>This preview shows the loaded map supperimposed on the world map</p>
            </div>
            <div id="list" class="col-md-5 col-sm-6">
                <table id="data_holder" class="table table-striped table-bordered table-hover table-ordered"
                       data-order="[[ 0, &quot;asc&quot; ]]" data-searching="true">
                    <thead>
                        <tr>
                            <th>@Pages.MapDetails_InterviewerName</th>
                        </tr>
                    </thead>
                </table>
            </div>
            </div>
    </div>
</main>
