@using System.Web.Optimization
@using WB.Core.SharedKernels.SurveyManagement.ValueObjects.Export
@using WB.Core.SharedKernels.SurveyManagement.Web.Models
@model WB.Core.SharedKernels.SurveyManagement.Web.Models.BatchUploadModel
@{
    Layout = "~/Views/Shared/_LayoutWithoutSidebar.cshtml";
    ViewBag.Title = "Index";
}

@section scripts
{
    @Scripts.Render("~/validate", "~/Scripts/pages/import-interviews.js")
    <script type="text/javascript">
    $(function () {
        var $importInterviewsStatusUrl = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "InterviewsApi", action = "GetImportInterviewsStatus" })';
        var model = new Supervisor.VM.ImportInterviews('@Model.QuestionnaireId', '@Model.QuestionnaireVersion', $importInterviewsStatusUrl);
        ko.applyBindings(model);
        model.load();
    });
    </script>
}

<div class="row-fluid">
    <div data-bind="visible: canImportInterviews" style="display: none;">
        <h3>@string.Format("{0}: (ver. {1}) {2}", BatchUpload.UploadSample, Model.QuestionnaireVersion, Model.QuestionnaireTitle)</h3>
        <div>
            @BatchUpload.UploadSampleDescription
        </div>
        <br/>
        @if (Model != null && Model.FeaturedQuestions != null)
        {
            <div>
                <table class="table table-striped table-bordered table-condensed table-break-words">
                    <thead>
                    <tr>
                        @foreach (var item in Model.FeaturedQuestions)
                        {
                            <th>@Html.DisplayFor(modelItem => item.Caption)</th>
                        }
                    </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < 5; i++)
                    {

                        <tr>
                            @foreach (var item in Model.FeaturedQuestions)
                            {
                                <th>_</th>
                            }
                        </tr>

                    }
                    </tbody>
                </table>
            </div>
        }
        <div>
            @using (Html.BeginForm("SampleBatchUpload", "HQ", new {id = Model.QuestionnaireId, version = Model.QuestionnaireVersion}, FormMethod.Post, new {enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(x => x.QuestionnaireId)
                @Html.HiddenFor(x => x.QuestionnaireVersion)
                <br/>
                <div class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(m => m.File, new {type = "file", accept = ".tab, .txt"})
                        @Html.ValidationMessageFor(x => x.File)
                    </div>
                </div>
                <input type="submit" class="btn btn-primary" name="Submit" value="@BatchUpload.Upload"/>
            }
        </div>

        <h3>@BatchUpload.AdvancedMode</h3>
        <div>
            @BatchUpload.AdvancedModeDescription
        </div>
        <br/>
        <a href="@Url.Action("TemplateDownload", "HQ", new {id = Model.QuestionnaireId, version = Model.QuestionnaireVersion})" class="btn">@BatchUpload.DownloadTemplateArchive</a>

        <div>
            @using (Html.BeginForm("PanelBatchUpload", "HQ", routeValues: new {id = Model.QuestionnaireId, version = Model.QuestionnaireVersion}, method: FormMethod.Post, htmlAttributes: new {enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.QuestionnaireId)
                @Html.HiddenFor(x => x.QuestionnaireVersion)
                <br/>
                <div class="control-group">
                    <div class="controls">
                        @Html.TextBoxFor(m => m.File, new {type = "file", accept = ".zip"})
                        @Html.ValidationMessageFor(x => x.File)
                    </div>
                </div>
                <input type="submit" class="btn btn-primary" name="Submit" value="@BatchUpload.Upload"/>
            }
        </div>
    </div>

    <div class="container" data-bind="visible: !canImportInterviews()"  style="display: none;">
        <div class="jumbotron">
            <h2 data-bind="text: status.questionnaireTitle"></h2>
            <p>Import interviews is in progress, please wait until current operation is finished</p>
            <p>
                <b><span data-bind="text: status.createdInterviewsCount"></span></b> of <b><span data-bind="text: status.totalInterviewsCount"></span></b> interviews created
            </p>
            <p><b><span data-bind="text: status.elapsedTime"></span></b> of <b><span data-bind="text: status.estimatedTime"></span></b> time spent</p>
        </div>
    </div>
</div>

