@using System.Web.Optimization
@using WB.Core.SharedKernels.SurveyManagement.Web.Models
@model WB.Core.SharedKernels.SurveyManagement.Web.Models.BatchUploadModel
@{
    Layout = "~/Views/Shared/_LayoutWithoutSidebar.cshtml";
    ViewBag.Title = BatchUpload.BatchUpload_Title;
}

@section scripts
{
    @Scripts.Render("~/validate")
    <script type="text/javascript">
        $(function () {
            $('.prefilled-file-upload').bind('change', function() {
                var fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 300) {
                    bootbox.alert('@BatchUpload.FileSizeLimit');
                    $(".prefilled-file-upload").val('');
                }
            });
        });
    </script>
}

<div class="row-fluid">
        <div>
            <h3>@string.Format("{0}: (ver. {1}) {2}", BatchUpload.UploadSample, Model.QuestionnaireVersion, Model.QuestionnaireTitle)</h3>
            <div>
                @BatchUpload.UploadSampleDescription
            </div>
            <br />
            @if (Model != null && Model.FeaturedQuestions != null)
            {
                <div style="overflow-x: scroll">
                    <table class="table table-striped table-bordered table-condensed table-break-words">
                        <thead>
                            <tr>
                                @foreach (var item in Model.FeaturedQuestions)
                                {
                                    <th>@Html.DisplayFor(modelItem => item.Caption)</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < 5; i++)
                            {

                                <tr>
                                    @foreach (var item in Model.FeaturedQuestions)
                                    {
                                        <th>_</th>
                                    }
                                </tr>

                            }
                        </tbody>
                    </table>
                </div>
            }
            <div>
                @using (Html.BeginForm("SampleBatchUpload", "HQ", new { questionnaireId = Model.QuestionnaireId, version = Model.QuestionnaireVersion }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(x => x.QuestionnaireId)
                    @Html.HiddenFor(x => x.QuestionnaireVersion)
                    <br />
                    <div class="control-group form-group">
                        <div class="controls">
                            @Html.TextBoxFor(m => m.File, new { type = "file", accept = ".tab, .txt, .zip", @class = "prefilled-file-upload" })
                            @Html.ValidationMessageFor(x => x.File, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <input type="submit" class="btn btn-primary" name="Submit" value="@BatchUpload.Upload"/>
                }
            </div>
        </div>

    <h3>@BatchUpload.AdvancedMode</h3>
    <div>
        @BatchUpload.AdvancedModeDescription
    </div>
    <br />
    <a href="@Url.Action("TemplateDownload", "HQ", new {id = Model.QuestionnaireId, version = Model.QuestionnaireVersion})" class="btn">@BatchUpload.DownloadTemplateArchive</a>

    <div>
        @using (Html.BeginForm("PanelBatchUpload", "HQ", routeValues: new { id = Model.QuestionnaireId, version = Model.QuestionnaireVersion }, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.QuestionnaireId)
            @Html.HiddenFor(x => x.QuestionnaireVersion)
            <br />
            <div class="control-group form-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.File, new { type = "file", accept = ".zip" })
                    @Html.ValidationMessageFor(x => x.File, null, new { @class = "help-block" })
                </div>
            </div>
                <input type="submit" class="btn btn-primary" name="Submit" value="@BatchUpload.Upload" />
        }
    </div>
</div>
