@using System.Web.Optimization
@using WB.Core.SharedKernels.SurveyManagement.Web.Models
@model WB.Core.SharedKernels.SurveyManagement.Web.Models.BatchUploadModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = BatchUpload.BatchUpload_Title;
}

@section scripts
{
    @Scripts.Render("~/validate")
    <script type="text/javascript">
        $(function () {
            $('.prefilled-file-upload').bind('change', function() {
                var fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 300) {
                    bootbox.alert('@BatchUpload.FileSizeLimit');
                    $(".prefilled-file-upload").val('');
                }
            });
        });
    </script>
}

<main>
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-sm-9 page-header">
                <ol class="breadcrumb">
                    <li><a href="">@BatchUpload.Questionnaire</a></li>
                </ol>
                <div class="page-title">
                    @BatchUpload.CreatingMultipleInterviews
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <h2>@string.Format("{0} (ver. {1})", Model.QuestionnaireTitle, Model.QuestionnaireVersion)</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-xs-10 prefilled-data-info">
                <p>@BatchUpload.UploadDescription</p>
                <p>@BatchUpload.EmptySupervisorDescription</p>

                @if (Model != null && Model.FeaturedQuestions != null)
                {
                    <a href="#" class="list-required-prefilled-data toggle-prefilled-table">@BatchUpload.ViewListPrefilledData</a>

                    <script type="text/javascript">
                        $(function () {
                            $('.toggle-prefilled-table').click(function () {
                                $('.prefilled-table').toggle();
                                return false;
                            });
                        });
                    </script>

                    <div class="prefilled-table" style="overflow-x: scroll; display: none;">
                        <br />
                        <table class="table table-striped table-bordered table-condensed table-break-words">
                            <thead>
                                <tr>
                                    @foreach (var item in Model.FeaturedQuestions)
                                    {
                                        <th>@Html.DisplayFor(modelItem => item.Caption)</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < 5; i++)
                                {
                                    <tr>
                                        @foreach (var item in Model.FeaturedQuestions)
                                        {
                                            <th>_</th>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
        <div class="row flex-row">
            <div class="col-sm-6">
                <div class="flex-block selection-box">
                    <div class="block">
                        <h3>@BatchUpload.SimpleTitle</h3>
                        <p>@BatchUpload.SimpleDescription</p>
                    </div>
                    <div>
                        @using (Html.BeginForm("SampleBatchUpload", "HQ", new { questionnaireId = Model.QuestionnaireId, version = Model.QuestionnaireVersion }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(x => x.QuestionnaireId)
                            @Html.HiddenFor(x => x.QuestionnaireVersion)

                            <label class="btn btn-success btn-file">
                                @BatchUpload.UploadTabFile
                                @Html.TextBoxFor(m => m.File, new { type = "file", accept = ".tab, .txt, .zip", onchange = "this.form.submit()" })
                            </label>
                            @Html.ValidationMessageFor(x => x.File, null, new { @class = "help-block" })
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="flex-block selection-box">
                    <div class="block">
                        <h3>@BatchUpload.BatchTitle</h3>
                        <p>@BatchUpload.BatchDescription</p>

                        <a href="@Url.Action("TemplateDownload", "HQ", new {id = Model.QuestionnaireId, version = Model.QuestionnaireVersion})">@BatchUpload.DownloadTemplateArchive</a>
                    </div>
                    <div>
                        @using (Html.BeginForm("PanelBatchUpload", "HQ", routeValues: new { id = Model.QuestionnaireId, version = Model.QuestionnaireVersion }, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(x => x.QuestionnaireId)
                            @Html.HiddenFor(x => x.QuestionnaireVersion)

                            <label class="btn btn-success btn-file">
                                @BatchUpload.UploadZipFile
                                @Html.TextBoxFor(m => m.File, new { type = "file", accept = ".zip", onchange = "this.form.submit()" })
                            </label>
                            @Html.ValidationMessageFor(x => x.File, null, new { @class = "help-block" })
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-sm-5 text-page">
                <p>
                    @Html.Raw(string.Format(BatchUpload.ManualModeWithLink, Url.Action("TakeNew", "HQ", new { id = Model.QuestionnaireId, version = Model.QuestionnaireVersion })))
                </p>
            </div>
        </div>
    </div>
</main>
