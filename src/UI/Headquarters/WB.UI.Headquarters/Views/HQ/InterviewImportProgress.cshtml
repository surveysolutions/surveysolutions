@model WB.UI.Headquarters.Models.PreloadedDataInterviewProgressModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = BatchUpload.VerifySampleData;
}

@section scripts
{
    @Scripts.Render("~/js/batch-upload-start-interview-creation")
    <script type="text/javascript">
        var InterviewCreationProgressModel = function () {
        };

        $(function () {
            var model = new InterviewCreationProgressModel();
            ko.applyBindings(model);
        });
    </script>
}
<main>
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-sm-8 page-header">
                <ol class="breadcrumb">
                    <li>@Html.ActionLink(MainMenu.Questionnaires, "Index", "HQ")</li>
                    <li>@Html.ActionLink("creating multiple interviews", "BatchUpload", "HQ", new { id = Model.QuestionnaireId, version = Model.Version }, new { })</li>
                </ol>
                <div class="page-title">
                    Creating multiple interviews with batch upload
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7">
                <h3>Importing information for @Model.QuestionnaireTitle&nbsp;(ver.&nbsp;@Model.Version)</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7 col-xs-12 action-block">
                <h4>
                    @if (Model.Status.IsInProgress)
                    {
                        @:Processing interview @Model.Status.CreatedInterviewsCount of @Model.Status.TotalInterviewsCount...
                    }
                    else
                    {
                        @:Done:
                    }
                    @if (Model.Status.CreatedInterviewsCount > 0)
                    {
                        <span class="success-text">@Model.Status.CreatedInterviewsCount interviews created</span>
                    }
                    @if (!Model.Status.State.Errors.Any())
                    {
                        <span class="default-text">None failed</span>
                    }
                    else
                    {
                        <span class="default-text">@Model.Status.State.Errors.Count interviews failed to be created</span>
                    }
                </h4>
                @if (Model.Status.IsInProgress)
                {
                    <div>
                        <div class="progress">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@Model.Status.CreatedInterviewsCount" aria-valuemin="0" aria-valuemax="@Model.Status.TotalInterviewsCount">
                                <span class="sr-only"></span>
                            </div>
                        </div>
                        @*<button class="btn cancel-uploading" type="button">abort import</button>*@
                    </div>
                }
            </div>
        </div>
    </div>
</main>