@model WB.Core.SharedKernels.SurveyManagement.Web.Models.CloneQuestionnaireModel

@{
    ViewBag.Title = QuestionnaireClonning.CloneQuestionnaireTitle;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}


<main>
    <div class="container">
        <div class="row">
            <div class="page-header">
                <ol class="breadcrumb">
                    <li>
                        @Html.ActionLink(MainMenu.Questionnaires, "Index", "SurveySetup")
                    </li>
                </ol>
                <h1>@QuestionnaireClonning.CloneQuestionnaireTitle</h1>
            </div>

        </div>
        <div class="row">
            <div class="col-sm-8">
                <h2>
                    @QuestionnaireClonning.ToCloneQuestionnaire @Html.QuestionnaireName(Model.OriginalTitle, Model.Version) @(this.Model.IsCensus ? QuestionnaireClonning.inCensusMode : QuestionnaireClonning.inRegularMode)
                </h2>
            </div>
        </div>
        <div class="row">
            <form method="POST" class="col-sm-8">
                <div class="form-group @Html.HasErrorClassFor(x => x.NewTitle)">
                    @Html.LabelFor(x => x.NewTitle, new {@class = "control-label required"})
                    @Html.TextBoxFor(x => x.NewTitle, new {@class = "form-control", autocomplete = "off"})
                    @Html.ValidationMessageFor(x => x.NewTitle, null, new {@class = "help-block"})
                </div>

                @Html.AntiForgeryToken()

                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.Version)
                @Html.HiddenFor(x => x.OriginalTitle)
                @Html.HiddenFor(x => x.IsCensus)
                <button type="submit" class="btn btn-success">@QuestionnaireClonning.Clone</button>
                @Html.ActionLink(Common.Cancel, "Index", "SurveySetup", new {}, new {@class = "back-link"})
            </form>
        </div>
    </div>
</main>

