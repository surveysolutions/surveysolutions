@model WB.Core.BoundedContexts.Headquarters.Views.PreloadedData.PreloadedDataVerificationErrorsView
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = BatchUpload.VerifySampleData;
}

@section scripts
{
}
<main>
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-sm-8 page-header">
                <ol class="breadcrumb">
                    <li>@Html.ActionLink(MainMenu.Questionnaires, "Index", "HQ")</li>
                    <li>@Html.ActionLink("creating multiple interviews", "BatchUpload", "HQ", new { id = Model.QuestionnaireId, version = Model.Version }, new { })</li>
                </ol>
                <div class="page-title">
                    Creating multiple interviews with batch upload
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7">
                <h3>Importing information from @Model.FileName for @Model.QuestionnaireTitle&nbsp;(ver.&nbsp;@Model.Version)</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7 col-xs-12 action-block">
                <div class="import-progress">
                    <p class="error-text">Batch file verification failed</p>
                    <p>Interviews are not created</p>
                </div>
                <h3 class="error-text">@Model.Errors.Length @(@Model.Errors.Length == 1 ? "error" : "errors") were found</h3>
                @foreach (var error in Model.Errors)
                {
                    <div class="error-block">
                        <h5 class="error-text"><span>@error.Code</span>: @error.Message</h5>
                        @foreach (var reference in error.References)
                        {
                            <p>@BatchUpload.FileName: @reference.DataFile</p>
                            <p>
                                @if (!string.IsNullOrEmpty(@reference.Content))
                                {
                                    <span>@reference.Type: @reference.Content</span>
                                }
                                (@if (reference.PositionX.HasValue){<span>@BatchUpload.Column: @reference.PositionX,</span>}
                                 @if (reference.PositionY.HasValue){<span>@BatchUpload.Row: @(reference.PositionY + 1)</span>})
                            </p>
                        }
                    </div>
                }
                <div class="action-buttons">
                    <a href="@Url.Action("BatchUpload", "HQ", new {id = Model.QuestionnaireId, version = Model.Version})" class="back-link">Back to import</a>
                </div>
            </div>
        </div>
    </div>
</main>