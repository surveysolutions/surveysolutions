@using System.Web.Optimization
@using WB.Core.BoundedContexts.Headquarters
@using WB.Core.BoundedContexts.Headquarters.Resources
@using WB.Core.BoundedContexts.Headquarters.Services
@using WB.Core.GenericSubdomains.Portable
@using WB.Core.GenericSubdomains.Portable.ServiceLocation
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@using WB.Core.SharedKernels.SurveyManagement.Web.Code
@using WB.UI.Headquarters.Code
@using Interviews = WB.UI.Headquarters.Resources.Interviews
@model WB.Core.SharedKernels.SurveyManagement.Web.Models.DocumentFilter
@{
    ViewBag.Title = Common.Interviews;
    Layout = "~/Views/Shared/_MainLayout.cshtml";

    var authorizedUser = ServiceLocator.Current.GetInstance<IAuthorizedUser>();
}

@section scripts
{
    @Scripts.Render("~/js/main-no-libs")
    @Scripts.Render("~/js/list")
    @Scripts.Render("~/js/interviews")
    @Scripts.Render("~/js/common")

    <script type="text/javascript">
        var $interviewsPageUrl = '@Url.Action("Interviews", "HQ")';
        var $detailsUrl = '@Url.Action("Review", "Interview")';
        var $surveysUrl = '@Url.Action("SurveysAndStatuses", "Reports")';
        var $profileUrl = '@Url.Action("Profile", "Interviewer")';
        var commandExecutionUrl =
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "CommandApi", action = "ExecuteCommands"})';
        var statistics =
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "InterviewApi", action = "AllInterviews"})';
        var responsiblesUrl =
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "Teams", action = "AssigneeSupervisorsAndDependentInterviewers"})';
        var usersToAssignUrl =
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "Teams", action = "Responsibles"})';
        $(function() {
            var notifier = new Notifier();
            var model = new Supervisor.VM.HQInterviews(statistics,
                $interviewsPageUrl,
                responsiblesUrl,
                commandExecutionUrl,
                usersToAssignUrl,
                notifier,
                $profileUrl);
            model.BuildMenuItem = function(selectedRow) {
                var items = {}

                items["open"] = {
                    name: "@Common.Open",
                    callback: function(t, e) {
                        var detailsUrl = $detailsUrl + '/' + selectedRow.InterviewId().replace(/-/g, '');
                        window.location = detailsUrl;
                    }
                };

                items["showStatusHistory"] = {
                    name: "@Common.ShowStatusHistory",
                    callback: function(t, e) {
                        model.ShowStatusHistory(
                            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "InterviewApi", action = "ChangeStateHistory"})',
                            selectedRow);
                    }
                };
                if (selectedRow.ResponsibleRole() === 4 /* Interviewer */) {
                    items["openInterviewerProfile"] = {
                        name: "@Html.Raw(Common.OpenResponsiblesProfile)",
                        callback: function(t, e) {
                            var profileUrl = $profileUrl + '/' + selectedRow.ResponsibleId();
                            window.location = profileUrl;
                        }
                    };
                }
                items["sep1"] = "---------";

                items["assign"] = {
                    name: "@Common.Assign",
                    className: "primary-text",
                    callback: function(t, e) {
                        model.AssignInterview();
                    }
                };

                items["approve"] = {
                    name: "@Common.Approve",
                    className: "success-text",
                    callback: function(t, e) {
                        model.ApproveInterview();
                    }
                };

                items["reject"] = {
                    name: "@Common.Reject",
                    className: "error-text",
                    callback: function(t, e) {
                        model.RejectInterview();
                    }
                };

                items["unapprove"] = {
                    name: "@Common.Unapprove",
                    callback: function(t, e) {
                        model.UnapproveInterview();
                    }
                };

                items["sep2"] = "---------";

                items["delete"] = {
                    name: "@Common.Delete",
                    className: "error-text",
                    callback: function(t, e) {
                        model.DeleteInterview();
                    }
                };

                return items;
            };
            ko.applyBindings(model);
            model.load();
        });
    </script>
}

<main class="hold-transition">
    <div class="container-fluid">
        <div class="row">
            <aside class="filters">
                <div class="foldback-button" id="hide-filters">
                    <span class="arrow"></span>
                    <span class="arrow"></span>
                    <span class="glyphicon glyphicon-tasks" aria-hidden="true"></span>
                </div>

                <div class="filters-container">
                    <h4>@Pages.FilterTitle</h4>

                    <div class="block-filter">
                        <h5 title="@Interviews.Tooltip_Filter_Questionnaire">@Common.Questionnaire</h5>
                        <select id="templateSelector" data-bind="value: SelectedTemplate" class="selectpicker">
                            @if (Model.Templates.Count() > 1)
                            {
                                <option value="">@Strings.AllQuestionnaires</option>
                            }
                            @foreach (var item in Model.Templates)
                            {
                                <option value='{"templateId": "@item.TemplateId","version": "@item.TemplateVersion"}'>(ver. @item.TemplateVersion) @item.TemplateName</option>
                            }
                        </select>
                    </div>

                    <div class="block-filter">
                        <h5 title="@Interviews.Tooltip_Filter_Status">@Common.Status</h5>
                        <select data-bind="value: SelectedStatus" class="selectpicker">
                            <option value="">@Common.AllStatuses</option>
                            @foreach (var item in Model.Statuses)
                            {
                                <option value="@item.Status">@item.StatusName</option>
                            }
                        </select>
                    </div>

                    <div class="block-filter">
                        <h5 title="@Interviews.Tooltip_Filter_Responsible">@Common.Responsible</h5>
                        <p class="list-group-item-text">
                            <div class="input-group">
                                <input class="form-control with-clear-btn" placeholder="@Common.AllResponsible" data-bind="typeahead: SelectedResponsible, typeaheadOptions: {source: Responsibles, displayText: function(item){return item.UserName}}, valueupdate:'afterkeydown'" type="text" />
                                <span data-bind="spinner: IsResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                                <div class="input-group-btn" data-bind="click: function(){ SelectedResponsible(undefined); }">
                                    <div class="btn btn-default"><span class=" glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                                </div>
                            </div>
                        </p>
                    </div>

                    <div class="block-filter">
                        <h5 title="@Interviews.Tooltip_Filter_Assignment">@Interviews.Assignment</h5>
                        <p class="list-group-item-text">
                            <div class="input-group">
                                <input class="form-control with-clear-btn" placeholder="@Assignments.AllAssignments" data-bind="numeric, textInput: AssignmentId" type="text" />
                                <div class="input-group-btn" data-bind="click: function(){AssignmentId(undefined); }">
                                    <div class="btn btn-default"><span class=" glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                                </div>
                            </div>
                        </p>
                    </div>

                </div>
            </aside>

            <div class="main-information">
                @Html.Partial("_alerts")
                <div class="page-header clearfix">
                    <h1>@Common.Interviews (<span data-bind='text: formatNumber(TotalCount())'></span>)</h1>
                </div>

                <div class="interviews-info">
                    <div class="table-wrapper interviews-large-screen">
                        <div class="dataTables_wrapper no-footer">
                            <div class="dataTables_filter">
                                <label>
                                    @Common.Search:
                                    <input class="" placeholder="@Common.Search" type="search" data-bind="value: SearchBy, valueUpdate:'afterkeydown', enterKey: filter">
                                </label>
                            </div>
                            <div class="table-with-scroll">
                                <table id="interviews" class="table table-striped table-ordered table-bordered table-hover table-with-checkboxes table-with-prefilled-column table-interviews">
                                    <thead>
                                        <tr>
                                            @if (!authorizedUser.IsObserver && !authorizedUser.IsObserving)
                                            {

                                                <th class="sorting_disabled checkbox-cell">
                                                    <input class="double-checkbox" id="check-all" type="checkbox" data-bind="click: $root.selectAll($element)">
                                                    <label for="check-all">
                                                        <span class="tick"></span>
                                                    </label>
                                                </th>
                                            }
                                            <th  title="@Interviews.Tooltip_Table_InterviewKey" class="sorting_disabled  interview-id  title-row">
                                                @Common.InterviewKey
                                                <a href="javascript:void(0);" class="show-prefield-btn"  title="@Interviews.Tooltip_Table_HideShowIdentifying"
                                                   data-bind="text : $root.IsVisiblePrefilledColumns() ? '@HttpUtility.JavaScriptStringEncode(Common.HideIdentifying)' : '@HttpUtility.JavaScriptStringEncode(Common.ShowIdentifying)', click: $root.ToggleVisiblePrefilledColumns()"></a>
                                            </th>
                                            <!-- ko if:SelectedTemplate() == '' -->
                                            <th title="@Interviews.Tooltip_Table_IdentifyingQuestions" class="prefield-column first-identifying last-identifying sorting_disabled" data-bind='css: { visible : $root.IsVisiblePrefilledColumns }'>@Common.PrefilledQuestions</th>
                                            <!-- /ko -->
                                            <!-- ko ifnot:SelectedTemplate() == '' -->
                                            <!-- ko if:Items().length > 0-->
                                            <!-- ko foreach:Items()[0].FeaturedQuestions -->
                                            <th class="prefield-column sorting_disabled" data-bind="css: { 'first-identifying' :  ($index() == 0), 'last-identifying' : ($parent.Items()[0].FeaturedQuestions().length - 1 == $index()), visible : $root.IsVisiblePrefilledColumns }, html: Question"></th>
                                            <!-- /ko -->
                                            <!-- /ko -->
                                            <!-- /ko -->
                                            <th title="@Interviews.Tooltip_Table_Responsible" data-bind='sortby: "ResponsibleName"'>@Common.Responsible</th>
                                            <th title="@Interviews.Tooltip_Table_LastUpdate" class="date last-update" data-bind='sortby: "UpdateDate"'>@Common.LastUpdate</th>
                                            <th title="@Interviews.Tooltip_Table_HasErrors" class="errors" data-bind='sortby: "HasErrors"'>@Common.НasErrors</th>
                                            <th title="@Interviews.Tooltip_Table_Status" class="status" data-bind='sortby: "Status"'>@Common.Status</th>
                                            <th title="@Interviews.Tooltip_Table_ReceivedByInterviewer" class="download-on-device" data-bind='sortby: "ReceivedByInterviewer"'>@Common.ReceivedByInterviewer</th>
                                            <th title="@Interviews.Tooltip_Table_Assignment" data-bind='sortby: "AssignmentId"'>@Common.Assignment</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr class="odd" data-bind="visible : Items().length == 0">
                                            <td colspan="9" class="dataTables_empty" valign="top">@DataTables.ZeroRecords</td>
                                        </tr>

                                        <!-- ko foreach:Items -->
                                        <tr data-bind="css: { 'selected' : IsSelected }">
                                            @if (!authorizedUser.IsObserver && !authorizedUser.IsObserving)
                                            {
                                                <td class="checkbox-cell">
                                                    <input type="checkbox" data-bind="value: InterviewId(), attr: { id: 'cbx_' + InterviewId() }, checked: IsSelected" class="checkbox-filter" />
                                                    <label data-bind="attr: { for: 'cbx_' + InterviewId() }"><span class="tick"></span></label>
                                                </td>
                                            }
                                            <td class="interview-id title-row">
                                                <a data-bind="attr: { href: $detailsUrl + '/' + InterviewId() }">
                                                    <!-- ko text:Key --><!--/ko-->
                                                    <span data-bind="if: ClientKey() && ClientKey() !== Key()" title="@Interviews.ClientKeyTitle">
                                                        (<!-- ko text:ClientKey --><!--/ko-->)
                                                    </span>
                                                </a>
                                            </td>
                                            <!-- ko if:$root.SelectedTemplate() == '' -->
                                            <td class="prefield-column first-identifying last-identifying" data-bind="css: { visible : $root.IsVisiblePrefilledColumns }, text: $root.getFormattedPrefilledQuestions(FeaturedQuestions()).joinArrayOfObjects('Question', 'Answer')"></td>
                                            <!-- /ko -->
                                            <!-- ko ifnot:$root.SelectedTemplate() == '' -->
                                            <!-- ko foreach:$root.getFormattedPrefilledQuestions(FeaturedQuestions()) -->
                                            <td class="prefield-column" data-bind="css: { 'first-identifying' :  ($index() == 0), 'last-identifying' : ($parent.FeaturedQuestions().length - 1 == $index()), visible : $root.IsVisiblePrefilledColumns }, text: Answer"></td>
                                            <!-- /ko -->
                                            <!-- /ko -->
                                            <td>
                                                <!-- ko if:ResponsibleRole() == 4 -->
                                                <a data-bind="attr: { href: $profileUrl + '/' + ResponsibleId() }, text: ResponsibleName"></a>
                                                <!-- /ko -->
                                                <!-- ko ifnot:ResponsibleRole() == 4 -->
                                                <span data-bind="text: ResponsibleName"></span>
                                                <!-- /ko -->
                                            </td>
                                            <td class="date last-update" data-bind="text: moment.utc(LastEntryDateUtc()).local().format(input.settings.clientDateTimeFormat)">
                                            </td>
                                            <td class="errors">
                                                <!-- ko if:HasErrors -->
                                                @Common.Yes
                                                <!-- /ko -->
                                                <!-- ko ifnot:HasErrors -->
                                                <span class="empty"></span>
                                                <!-- /ko -->
                                            </td>
                                            <td class="status" data-bind="text: Status"></td>
                                            <td class="download-on-device" data-bind="css: { 'error-text' : !ReceivedByInterviewer(), 'success-text': ReceivedByInterviewer() } ">
                                                <span data-bind="text: ReceivedByInterviewer() ? '@Common.Yes' : '@Common.No'"></span>
                                            </td>
                                            <td>
                                                <span data-bind="text: AssignmentId() ? AssignmentId() : ''"></span>
                                            </td>
                                        </tr>
                                        <!-- /ko -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- ko if:Pager().LastPage() > 1 -->
                            <div data-bind="template: { name: 'datatable-pager', data: Pager }"></div>
                            <!-- /ko -->
                        </div>
                    </div>

                    <div class="screen-small-resolution">
                        <!-- ko foreach:Items -->
                        <div class="row-unit" data-bind="css: { 'selected' : IsSelected }">
                            <div class="header-unit">
                                <input type="checkbox" data-bind="value: InterviewId(), attr: { id: 'cbx_' + InterviewId() }, checked: IsSelected" class="checkbox-filter" />
                                <label data-bind="attr: { for: 'cbx_' + InterviewId() }">
                                    <span class="tick"></span>
                                    <span class="title-row" data-bind="text: Key"></span>
                                    <span data-bind="text: Status"></span>
                                </label>
                            </div>
                            <ul class="list-unstyled">
                                <li>@Common.НasErrors:  <span data-bind="text: HasErrors() ? '@Common.Yes' : '@Common.No'"></span></li>
                                <li>@Common.LastUpdate: <span data-bind="text: moment.utc(LastEntryDateUtc()).local().format(input.settings.clientDateTimeFormat)"></span></li>
                                <li>@Common.ReceivedByInterviewer: <span data-bind="text: ReceivedByInterviewer() ? '@Common.Yes' : '@Common.No'"></span></li>
                                <li>@Common.Responsible: <a class="interviewer" data-bind="attr: { href: $surveysUrl + '?interviewerId=' + ResponsibleId() }, text: ResponsibleName"></a></li>
                            </ul>
                        </div>
                        <!-- /ko -->
                        <!-- ko if:Pager().LastPage() > 1 -->
                        <div class="row-unit">
                            <div data-bind="template: { name: 'datatable-pager', data: Pager }"></div>
                        </div>
                        <!-- /ko -->
                    </div>

                    <div class="panel panel-table" data-bind="visible: SelectedItems().length > 0">
                        <div class="panel-body">
                            <input class="double-checkbox-white" id="q1az" type="checkbox" checked disabled="disabled">
                            <label for="q1az">
                                <span class="tick"></span> <span data-bind="text: SelectedItems().length + ' @Pages.Interviews_Selected'"></span>
                            </label>
                            <button class="btn btn-lg btn-success" data-bind="disable: IsNothingSelected, click: $root.AssignInterview">@Common.Assign</button>
                            <button class="btn btn-lg btn-success" data-bind="disable: IsNothingSelected, click: $root.ApproveInterview">@Common.Approve</button>
                            <button class="btn btn-lg reject" data-bind="disable: IsNothingSelected, click: $root.RejectInterview">@Common.Reject</button>
                            <button class="btn btn-lg btn-primary" data-bind="disable: IsNothingSelected, click: $root.UnapproveInterview">@Common.Unapprove</button>
                            <button class="btn btn-link" data-bind="disable: IsNothingSelected, click: $root.DeleteInterview">@Common.Delete</button>
                        </div>
                    </div>
                </div>
                @Html.Partial("_ListDataTablePagingScript")
            </div>
        </div>
    </div>

    <script type="text/html" id="assign-interview-template">
        <div class="btn-group assign-interviewer">
            @Interviews.ChooseResponsible
            <div class="input-group">
                <input class="form-control with-clear-btn" placeholder="@Common.Any" data-bind="typeahead: Users.AssignTo, typeaheadOptions: {source: Users.LoadUsers, displayText: function(item){return item.UserName}, afterSelect: StoreInteviewer }, valueupdate:'afterkeydown'" type="text" />
                <span data-bind="spinner: Users.IsResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                <div class="input-group-btn" data-bind="click: ClearAssignTo">
                    <div class="btn btn-default"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                </div>
            </div>
            <br />
            @Html.Raw(string.Format(Interviews.AssignToOtherTeamConfirmMessage,
                "<span class='text-normal' data-bind='text: CountInterviewsToAssign'></span>",
                InterviewStatus.ApprovedBySupervisor.ToLocalizeString(),
                InterviewStatus.ApprovedByHeadquarters.ToLocalizeString()))
        </div>
        <br />
    </script>
    <script type="text/html" id="confirm-delete-template">
        @Html.Raw(Interviews.DeleteConfirmMessageHQ.FormatString(
            "<span data-bind='text: length'></span>",
            InterviewStatus.SupervisorAssigned.ToLocalizeString(),
            InterviewStatus.InterviewerAssigned.ToLocalizeString()))
    </script>
    <script type="text/html" id="confirm-approve-template">
        @Html.Raw(Interviews.ApproveConfirmMessageHQ.FormatString(
            "<span data-bind='text: length'></span>",
            InterviewStatus.Completed.ToLocalizeString(),
            InterviewStatus.ApprovedBySupervisor.ToLocalizeString()))
    </script>
    <script type="text/html" id="confirm-reject-template">
        @Html.Raw(Interviews.RejectConfirmMessageHQ.FormatString(
            "<span data-bind='text: length'></span>",
            InterviewStatus.ApprovedBySupervisor.ToLocalizeString()))
    </script>
    <script type="text/html" id="confirm-unapprove-template">
        @Html.Raw(Interviews.UnapproveConfirmMessageHQ.FormatString(
            "<span data-bind='text: length'></span>",
            InterviewStatus.ApprovedByHeadquarters.ToLocalizeString()))
    </script>
    <script type="text/html" id="confirm-continue-message-template">
        <br />@Interviews.ContinueConfirmMessage
    </script>
    @Html.Partial("~/Views/Shared/Interviews/_InterviewStatusHistoryModal.cshtml")
</main>
