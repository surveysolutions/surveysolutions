@model WB.UI.Headquarters.Models.PreloadedDataConfirmationModel
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = BatchUpload.VerifySampleData;
}

@section scripts
{
    @Scripts.Render("~/js/responsibles-selector")
    <script type="text/javascript">
        var StartInterviewCreationModel = function (ajax) {

            var $responsiblesUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "Teams", action = "Supervisors"})';

            var self = this;

            self.isResponsiblesLoading = ko.observable(false);
            self.responsibles = function (query, sync, pageSize) {
                self.isResponsiblesLoading(true);
                ajax.sendRequest($responsiblesUrl, 'get', { query: query, pageSize: pageSize }, true,
                    //onSuccess
                    function (response) {
                        sync(response.Users, response.TotalCountByQuery);
                    },
                    //onError
                    function () {
                        self.isResponsiblesLoading(false);
                    });
            }
            self.selectedResponsible = ko.observable(undefined).extend({ required: { shouldValidateOnStart: false } });

            self.selectedSupervisorId = ko.computed(function () {
                return _.isUndefined(self.selectedResponsible()) ? "" : self.selectedResponsible().UserId;
            });

            self.IsSupervisorSelected = ko.computed(function () {
                return !_.isUndefined(self.selectedResponsible());
            });
        };

        $(function () {
            var model = new StartInterviewCreationModel(new Ajax(new Notifier()));
            ko.applyBindings(model);
        });
    </script>
}
<main>
    <div class="container-fluid">
        <div class="row">
            @Html.Partial("_alerts")
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-sm-8 page-header">
                <ol class="breadcrumb">
                    <li>@Html.ActionLink(MainMenu.Questionnaires, "Index", "SurveySetup")</li>
                    <li>@Html.ActionLink("creating multiple interviews", "BatchUpload", "HQ", new { id = Model.QuestionnaireId, version = Model.Version }, new { })</li>
                </ol>
                <div class="page-title">
                    Creating multiple interviews with batch upload
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7">
                <h3>Importing information from @Model.FileName for @Model.QuestionnaireTitle&nbsp;(ver.&nbsp;@Model.Version)</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7 col-xs-12 action-block">
                <h4>
                    <span class="success-text">Verification complete</span>Information for @Model.InterviewsCount interviews found
                    @if (Model.WasSupervsorProvided)
                    {
                        <span>Assigned to @Model.SupervisorsCount supervisors and @Model.EnumeratorsCount enumerators</span>
                    }
                </h4>
                @using (Html.BeginForm("SampleBatchUploadAndVerify", "HQ", new { InterviewImportProcessId = Model.Id, questionnaireId = Model.QuestionnaireId, version = Model.Version }, FormMethod.Post))
                {
                    <input id="supervisorId" name="supervisorId" type="hidden" data-bind="value: selectedSupervisorId">
                    if (!Model.WasSupervsorProvided)
                    {
                        <label>Select supervisor to assign this interview to</label>
                        <div class="input-group">
                            <input class="form-control" data-bind="typeahead: selectedResponsible, typeaheadOptions: {source: responsibles, displayText: function(item){return item.UserName}}, valueupdate:'afterkeydown'" type="text" />
                            <span data-bind="spinner: isResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                            <div class="input-group-btn" data-bind="click: function(){ selectedResponsible(undefined); }">
                                <div class="btn btn-default"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                            </div>
                        </div>
                    }
                    <div>
                        <button type="button" class="btn btn-success" data-bind="@(Model.WasSupervsorProvided ? "" : "enable: IsSupervisorSelected")">create interviews</button>
                        <a href="@Url.Action("BatchUpload", "HQ", new {id = Model.QuestionnaireId, version = Model.Version})" class="back-link">Back to import</a>
                    </div>
                }
            </div>
        </div>
    </div>
</main>