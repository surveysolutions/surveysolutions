@using System.Web.Optimization
@using WB.Core.BoundedContexts.Headquarters.UserPreloading.Dto
@using WB.Core.SharedKernels.SurveyManagement.Views.PreloadedData
@using WB.Core.SharedKernels.SurveyManagement.Views.SampleImport
@using WB.Core.SharedKernels.SurveyManagement.Views.User
@model string
@{
    Layout = "~/Views/Shared/_LayoutWithoutSidebar.cshtml";
    ViewBag.Title = "Index";
}
<h3 data-bind="text: fileName"></h3>
<div class="row-fluid">
    <h3 data-bind="visible: state()!=@((int) UserPrelodingState.Validated)">
        @BatchUpload.PleaseWait '<b data-bind="text: fileName"></b>' @BatchUpload.InVerificationProcess
    </h3>
    <div style="height: 500px; overflow-y: scroll;" data-bind="visible: verificationErrors().length>0">
        <table class="table table-striped table-bordered table-condensed table-break-words">
            <thead>
                <tr>
                    <th>@BatchUpload.Code</th>
                    <th>@BatchUpload.Message</th>
                    <th>@BatchUpload.Details</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: verificationErrors()">
                <tr>
                    <th data-bind="text: Code"></th>
                    <th data-bind="text: convertErrorCodeToMessage(Code)"></th>
                    <th>
                        <span>column : '<b data-bind="text: ColumnName"></b>'</span>
                        <br />

                        <span>row: '<b data-bind="text: RowNumber"></b>'</span>
                        <br />

                        <span>value : '<b data-bind="text: CellValue"></b>'</span>
                        <br />
                    </th>
                </tr>

            </tbody>
        </table>
        <div data-bind="visible: state()==@((int)UserPrelodingState.Validated)">
            @Html.ActionLink(BatchUpload.UploadNewFile, "NewUserBatchUpload", null, new { @class = "btn btn-default btn-primary pull-right" })
        </div>
    </div>
    <div data-bind="visible: (state()==@((int)UserPrelodingState.Validated) && verificationErrors().length===0)">
        <h3>@BatchUpload.DataIsValid</h3>
        @using (Html.BeginForm("CreateUsers", "BatchUserUpload"))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("Id", Model)
            <input type="submit" class="btn btn-default btn-primary pull-right" name="Submit" value="@BatchUpload.CreateUsers" />
        }
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/Scripts/components/bindings.js", "~/Scripts/pages/userpreloading.js")
    <script type="text/javascript">
        var updateVerificationStatusApiUrl = '@(Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "PreloadingApi", action = "UserPreloadingDetails"})+"/"+Model)';

        var viewModel = new Supervisor.VM.Preloading.UserPreloading(updateVerificationStatusApiUrl, [@((int)UserPrelodingState.Validating), @((int)UserPrelodingState.ReadyForValidation)]);
        viewModel.load();

        ko.applyBindings(viewModel);

        var errorMessages = new Array();
        errorMessages["PLU0001"] = '@BatchUpload.PLU0001';
        errorMessages["PLU0002"] = '@BatchUpload.PLU0002';
        errorMessages["PLU0003"] = '@BatchUpload.PLU0003';
        errorMessages["PLU0004"] = '@BatchUpload.PLU0004';
        errorMessages["PLU0005"] = '@BatchUpload.PLU0005';
        errorMessages["PLU0006"] = '@BatchUpload.PLU0006';
        errorMessages["PLU0007"] = '@BatchUpload.PLU0007';
        errorMessages["PLU0008"] = '@BatchUpload.PLU0008';
        errorMessages["PLU0009"] = '@BatchUpload.PLU0009';
        errorMessages["PLU0010"] = '@BatchUpload.PLU0010';
        function convertErrorCodeToMessage(code) {
            return errorMessages[code];
        }
    </script>
}
