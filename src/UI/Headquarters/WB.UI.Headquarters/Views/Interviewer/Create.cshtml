@model InterviewerModel
@{
    ViewBag.Title = Pages.Profile_InterviewerCreate;
    ViewBag.PageTitle = Pages.Profile_InterviewerCreate;
    Layout = "~/Views/Shared/Profile/_UserCreateLayout.cshtml";
}
@section scripts
{
    @Scripts.Render("~/js/interviewer")
    <script type="text/javascript">
        var $supervisorsUrl = '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "Teams", action = "Supervisors"})';
        $(document).ready(function () {
            var model = new Supervisor.VM.CreateInterviewer($supervisorsUrl);
            ko.applyBindings(model);
            model.load();
        });
    </script>
}
@section Breadcrumbs
{
    <li>
        @Html.ActionLink(@Pages.Profile_InterviewersList, "Back")
    </li>
}
@section PreDetailsSection
{
    @if (Model.IsShowSupervisorSelector)
    {
        <div class="block-filter">
            <h5>@Html.LabelFor(x => x.SupervisorId)</h5>
            <div class="form-group @(ViewData.ModelState.IsValidField(@"SupervisorId") ? string.Empty : @"has-error")">
                <div class="combo-box field">
                    <div class="btn-group btn-input clearfix">
                        @Html.TextBoxFor(x => x.SupervisorName, new
                        {
                            @class = @"form-control",
                            placeholder = @"Any",
                            data_bind = @"typeahead: SelectedSupervisor, 
                                          typeaheadOptions: {
                                             source: Supervisors, 
                                             displayText: function(item) { return item.UserName; }
                                          }, 
                                          valueupdate:'afterkeydown'"
                        })
                        <span data-bind="spinner: IsSupervisorsLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                        @Html.HiddenFor(x => x.SupervisorId, new {data_bind = @"value: SelectedSupervisor() == null ? '': SelectedSupervisor().UserId"})
                    </div>
                    <button type="button" class="btn btn-link btn-clear" data-bind="click: function(){ SelectedSupervisor(undefined); }">
                        <span></span>
                    </button>
                </div>
                
                @Html.ValidationMessageFor(x => x.SupervisorName, null, new { @class = @"help-block" })
            </div>
        </div>
        @Html.HiddenFor(x => x.IsShowSupervisorSelector)
    }
}
@section PostDetailsSection
{
    @Html.EditorFor(x => x.IsLockedBySupervisor, "CheckboxFormField")
}