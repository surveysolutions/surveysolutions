@using Humanizer
@using Main.Core.Entities.SubEntities
@using WB.Core.BoundedContexts.Headquarters.IntreviewerProfiles
@using WB.Core.BoundedContexts.Headquarters.Services
@using WB.Core.BoundedContexts.Headquarters.Views.Device
@using WB.Core.GenericSubdomains.Portable
@using WB.Core.GenericSubdomains.Portable.ServiceLocation
@model WB.Core.BoundedContexts.Headquarters.IntreviewerProfiles.InterviewerProfileModel

@{
    ViewBag.ActivePage = MenuItem.Interviewers;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.Title = string.Format(Pages.InterviewerProfile_TitleFormat, Model.InterviewerName);
    var authorizedUser = ServiceLocator.Current.GetInstance<IAuthorizedUser>();
}
@helper ConnectionType(InterviewerProfileSyncStatistics syncInfo)
{
    if (syncInfo.NetworkType == @"WIFI")
    {
        <text>(@string.Format(Pages.InterviewerProfile_ConnectionWifiFormat, syncInfo.NetworkType))</text>
    }
    else
    {
        <text>(@string.Format(Pages.InterviewerProfile_ConnectionMobileFormat, syncInfo.NetworkType, syncInfo.NetworkSubType, syncInfo.MobileOperator))</text>
    }
}
@helper ConnectionStats(string prefix, InterviewerProfileSyncStatistics syncInfo)
{
     if (syncInfo.SyncDate.HasValue)
     {
         <ul class="list-unstyled">
             <li>@prefix: @syncInfo.SyncDate.Value.ToString(@"MMM dd, hh:mm") (@syncInfo.SyncDate.Value.Humanize(dateToCompareAgainst: DateTime.UtcNow))</li>

             @if (syncInfo.HasStatistics)
             {
                 <li>@Pages.InterviewerProfile_TotalSyncTime: @syncInfo.TotalSyncDuration.Humanize()</li>
                 <li>
                     @Pages.InterviewerProfile_ConnectionSpeed: @syncInfo.TotalConnectionSpeed.Bytes().Per(TimeSpan.FromSeconds(1)).Humanize(@"0.00")
                     @ConnectionType(syncInfo)
                 </li>
                 <li>
                     @string.Format(Pages.InterviewerProfile_DataStatsFormat,
                         syncInfo.TotalUploadedBytes.Bytes().Humanize(@"0.00"),
                         syncInfo.TotalDownloadedBytes.Bytes().Humanize(@"0.00"))
                 </li>
             }
         </ul>
     }
}
@section scripts
{
    <script type="text/javascript">$('#umbrella').hide();</script>
    @if (Model.DeviceLocationOrLastKnownLocationLat.HasValue && Model.DeviceLocationOrLastKnownLocationLon.HasValue)
    {
        <script>
            function getAddress() {
                var geocoder = new google.maps.Geocoder;
                geocoder.geocode(
                    { 'location': { lat: @Model.DeviceLocationOrLastKnownLocationLat.Value, lng: @Model.DeviceLocationOrLastKnownLocationLon.Value } },
                    function(results, status) {
                        if (status === 'OK') {
                            if (results[0]) {
                                $("#device-address").text(results[0].formatted_address);
                            }
                        }
                    });
            }
        </script>
        <script async defer
                src="@string.Format("https://maps.googleapis.com/maps/api/js?key={0}&callback=getAddress", ServiceLocator.Current.GetInstance<GoogleApiSettings>().ApiKey)">
        </script>
    }
}
<main class="enumerators">
<div class="container">
    <div class="row">
        @Html.Partial("_alerts")
        <div class="page-header">
            @if (!authorizedUser.IsInterviewer)
            {
                <ol class="breadcrumb">
                    <li><a href="@Url.Action("Index", "Interviewers")">@Pages.InterviewerProfile_Interviewers</a></li>
                </ol>
            }
            <h1>
                @if (Model.IsArchived)
                {
                    <span class="badge">@Common.Archived</span>
                }
                @string.Format(Pages.InterviewerProfile_AssignedToFormat, Model.InterviewerName, Model.SupervisorName)
            </h1>

            <ul class="list-unstyled">
                @if (!string.IsNullOrEmpty(Model.Email) || !string.IsNullOrEmpty(Model.FullName) || !string.IsNullOrEmpty(Model.Phone))
                {
                    <li>@string.Format(Pages.InterviewerProfile_EmailFormat, Model.Email)</li>
                    <li>@string.Format(Pages.InterviewerProfile_FullNameFormat, Model.FullName)</li>
                    <li>@string.Format(Pages.InterviewerProfile_PhoneFormat, Model.Phone)</li>
                }

                <li>
                    @if (!User.IsInRole(UserRoles.Interviewer.ToString()))
                    {
                        if (!Model.IsArchived)
                        {
                            <a href="@Url.Action("Edit", new {Id = Model.InterviewerId})">@Pages.InterviewerProfile_Info</a>
                        }
                        else
                        {
                            if (authorizedUser.IsAdministrator)
                            {
                                <form action="@Url.Action("UnArchive", new {Id = Model.InterviewerId})" method="post">
                                    <input class="btn btn-success" type="submit" value="@Pages.Unarchive"/>
                                </form>
                            }
                        }
                    }
                </li>
            </ul>
        </div>
    </div>
</div>
<div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="interviews-information clearfix">
                    <div class="number-information">
                        <div class="amount-of-questionnaires">@Model.NewInterviewsOnDevice</div>
                        <div class="description">@Pages.InterviewerProfile_NewOnDevice</div>
                    </div>
                    <div class="number-information">
                        <div class="amount-of-questionnaires">@Model.RejectedInterviewsOnDevice</div>
                        <div class="description">@Pages.InterviewerProfile_Rejected</div>
                    </div>
                    <div class="number-information">
                        <div class="amount-of-questionnaires">@Model.WaitingInterviewsForApprovalCount</div>
                        <div class="description">@Pages.InterviewerProfile_WaitingForApproval</div>
                    </div>
                    <div class="number-information">
                        <div class="amount-of-questionnaires">@Model.ApprovedInterviewsByHqCount</div>
                        <div class="description">@Pages.InterviewerProfile_Approved</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (Model.HasDeviceInfo)
    {
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12 clearfix">
                    <h3>@Pages.InterviewerProfile_Sync_Activity_Title</h3>
                    <div class="graphic-wrapper clearfix">
                        <div class="graphic">
                            @foreach (var syncDay in Model.SynchronizationActivity.Days)
                            {
                                <div class="day-unit">
                                    <div class="day">
                                        @syncDay.Day
                                    </div>
                                    @foreach (var syncDayQuarter in syncDay.Quarters)
                                    {
                                        <div class="quarter-of-day">
                                            <div class="recent-activity">
                                                @if (!syncDayQuarter.HasAnyActivity)
                                                {
                                                    if (syncDayQuarter.FailedSynchronizationsCount > 0)
                                                    {
                                                        <div class="failed-connection"></div>
                                                    }
                                                    else if(syncDayQuarter.SynchronizationsWithoutChangesCount > 0)
                                                    {
                                                        <div class="successful-connection"></div>
                                                    }
                                                }
                                                else
                                                {
                                                    for (int i = 0; i < syncDayQuarter.DownloadedAssignmentsInProportionCount; i++)
                                                    {
                                                        <div class="downloaded"></div>
                                                    }

                                                    for (int i = 0; i < syncDayQuarter.UploadedInterviewsInProportionCount; i++)
                                                    {
                                                        <div class="uploaded"></div>
                                                    }
                                                    if (syncDayQuarter.HasMoreThanMaxActionsCount)
                                                    {
                                                        <div class="over-limit">
                                                            <span></span>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                            <div class="unfinished-assignments">
                                                <div class="half-of-quarter">
                                                    @for (int i = 0; i < syncDayQuarter.AllAssignmentsOnDeviceCount; i++)
                                                    {
                                                        <div class="unfinished-unit"></div>
                                                    }
                                                </div>
                                                <div class="half-of-quarter">
                                                    @for (int i = 0; i < syncDayQuarter.AllAssignmentsOnDeviceCount; i++)
                                                    {
                                                        <div class="unfinished-unit"></div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                
                            }
                            <div class="day-unit">
                                <div class="quarter-of-day">
                                    <div class="recent-activity">

                                    </div>
                                    <div class="unfinished-assignments">
                                        <div class="half-of-quarter"></div>
                                        <div class="half-of-quarter"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="graphic-explanation">
                            <div class="recent-activity">
                                <ul class="list-unstyled">
                                    <li><span class="downloaded"></span>@Pages.InterviewerProfile_Sync_Activity_Downloaded_Assignments_Desc</li>
                                    <li><span class="uploaded"></span>@Pages.InterviewerProfile_Sync_Activity_Uploaded_Interview_Desc</li>
                                    <li><span class="successful-connection"></span>@Pages.InterviewerProfile_Sync_Activity_Nothing_To_Sync</li>
                                    <li><span class="failed-connection"></span>@Pages.InterviewerProfile_Sync_Activity_Failed_Sync</li>
                                </ul>
                            </div>
                            <div class="unfinished-assignments">
                                <p class="primary-text">@Pages.InterviewerProfile_Sync_Activity_All_Assignments_Desc</p>
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-sm-6 connection-statistics">
                    <h3>@Pages.InterviewerProfile_DeviceAndConnectionStatistics</h3>
                    <ul class="list-unstyled">
                        <li><b>@Pages.InterviewerProfile_DeviceModel: @Model.DeviceType @Model.DeviceManufacturer @Model.DeviceModel (@Model.DeviceBuildNumber)</b></li>
                        <li>
                            <b>
                                @Pages.InterviewerProfile_InterviewerAppVersion: @Model.InterviewerAppVersion —
                                @if (!Model.HasUpdateForInterviewerApp)
                                {
                                    <span class="success-text">@Pages.InterviewerProfile_InterviewerUpToDate</span>
                                }
                                else
                                {
                                    <span class="error-text">@Pages.InterviewerProfile_InterviewerCanBeUpdated</span>
                                }
                            </b>
                        </li>
                        @if (Model.DeviceAssignmentDate.HasValue)
                        {
                            <li><b>@Pages.InterviewerProfile_DeviceAssignmentDate: @Model.DeviceAssignmentDate.Value.ToString(@"dd MMM yyyy, hh:mm:ss") (UTC)
                                    @if (Model.RegistredDevicesCount > 1)
                                    {
                                        <span style="color: red;">(Relinked)</span>
                                    }</b>
                                </li>
                        }
                    </ul>
                    <ul class="list-unstyled">
                        <li>@Pages.InterviewerProfile_NumberOfSuccessSynchronizations: @Model.TotalNumberOfSuccessSynchronizations</li>
                        <li>@Pages.InterviewerProfile_NumberOfFailedSynchronizations: @Model.TotalNumberOfFailedSynchronizations</li>
                        <li>
                            @Pages.InterviewerProfile_AverageSyncSpeed: @(!Model.AverageSyncSpeedBytesPerSecond.HasValue
                                                                              ? "n/a"
                                                                              : Model.AverageSyncSpeedBytesPerSecond.Value.Bytes().Per(TimeSpan.FromSeconds(1)).Humanize(@"0.00"))
                        </li>
                    </ul>
                    @ConnectionStats(Pages.InterviewerProfile_LastSuccessSync, Model.LastSuccessfulSync)

                    @if (Model.LastFailedSync != null)
                    {
                        @ConnectionStats(Pages.InterviewerProfile_LastFailedSync, Model.LastFailedSync)
                    }
                    
                    @if (Model.LastCommunicationDate.HasValue)
                    {
                        <ul class="list-unstyled">
                            <li>@Pages.InterviewerProfile_LastSyncronizationDate: @Model.LastCommunicationDate.Value.ToString(@"MMM dd, hh:mm") (@Model.LastCommunicationDate.Value.Humanize(dateToCompareAgainst: DateTime.UtcNow))</li>
                        </ul>
                    }
                </div>
            </div>

            <div class="row">
                <div class="col-sm-8 detailed-statistics-block">
                    <h3>@Pages.InterviewerProfile_DeviceInfo</h3>
                    <table class="table table-striped table-bordered">
                        <tbody>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceId</td>
                            <td>@Model.DeviceId</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceSerial</td>
                            <td>@Model.DeviceSerialNumber</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceModel</td>
                            <td>@Model.DeviceType @Model.DeviceManufacturer @Model.DeviceModel (@Model.DeviceBuildNumber)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceLanguage</td>
                            <td>@Model.DeviceLanguage</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_AndroidVersion</td>
                            <td>@Model.AndroidVersion</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_InterviewerVersion</td>
                            <td>@Model.SurveySolutionsVersion</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_InterviewerUpdatedDate</td>
                            <td>@Model.LastSurveySolutionsUpdatedDate.Value.ToString(@"dd MMM yyyy, hh:mm:ss") (UTC)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceLocation</td>
                            <td id="device-address">@Model.DeviceLocationOrLastKnownLocationLat @Model.DeviceLocationOrLastKnownLocationLon</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceOrientation</td>
                            <td>@Model.DeviceOrientation</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_BatteryStatus</td>
                            <td>@string.Format(Pages.InterviewerProfile_BatteryStatusFormat, Model.BatteryStatus, Model.BatteryPowerSource, Model.IsPowerSaveMode == true ? Pages.InterviewerProfile_BatteryStatus_SaverIsOn : Pages.InterviewerProfile_BatteryStatus_SaverIsOff)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_StorageInfo</td>
                            <td>@FileSizeUtils.SizeSuffix(Model.StorageFreeInBytes ?? 0)/@FileSizeUtils.SizeSuffix(Model.StorageTotalInBytes ?? 0)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_MemoryInfo</td>
                            <td>@FileSizeUtils.SizeSuffix(Model.RamFreeInBytes ?? 0)/@FileSizeUtils.SizeSuffix(Model.RamTotalInBytes ?? 0)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DatabaseInfo</td>
                            <td>@FileSizeUtils.SizeSuffix(Model.DatabaseSizeInBytes ?? 0)</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8 detailed-statistics-block">
                    <h3>@Pages.InterviewerProfile_LastConnectionStatistics</h3>
                    <table class="table table-striped table-bordered">
                        <tbody>
                        <tr>
                            <td>@Pages.InterviewerProfile_ServerDate</td>
                            <td>@Model.ServerTimeAtTheBeginningOfSync.Value.ToString(@"dd MMM yyyy, hh:mm:ss") (UTC)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DeviceDate</td>
                            <td>@Model.TabletTimeAtTeBeginningOfSync.Value.ToString(@"dd MMM yyyy, hh:mm:ss") (UTC)</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_ConnectionType</td>
                            <td>@Model.ConnectionType @Model.ConnectionSubType</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DownloadedQuestionnairesCount</td>
                            <td>@Model.QuestionnairesReceived</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_DownloadedInterviewsCount</td>
                            <td>@Model.InterviewsReceived</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_UploadedInterviewsCount</td>
                            <td>@Model.CompletedInterviewsReceivedFromInterviewer</td>
                        </tr>
                        <tr>
                            <td>@Pages.InterviewerProfile_StartedAssignments</td>
                            <td>@Model.AssignmentsThatHaveBeenStarted</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</main>
