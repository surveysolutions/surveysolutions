@using System.Web.Optimization
@using WB.Core.GenericSubdomains.Portable
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@using WB.Core.SharedKernels.SurveyManagement.Web.Code
@using WB.UI.Headquarters.Resources

@model WB.Core.SharedKernels.SurveyManagement.Web.Models.DocumentFilter

@{
    ViewBag.Title = Pages.Survey_Header;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section scripts
{
    @Scripts.Render("~/js/main-no-libs")
    @Scripts.Render("~/js/list")
    @Scripts.Render("~/js/interviews-sv")
    @Scripts.Render("~/js/common")

    <script type="text/javascript">
        var $interviewsPageUrl = '@Html.Raw(@Url.Action("Interviews", "Survey", new { }, Request.Url.Scheme))';
        var $detailsUrl = '@Url.Action("Details", "Interview")';
        var $surveysUrl = '@Url.Action("Index", "Survey")';
        var $commandExecutionUrl = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "CommandApi", action = "ExecuteCommands" })';
        var $statistics = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "InterviewApi", action = "TeamInterviews" })';
        $(function () {
            var notifier = new Notifier();
            var usersToAssignUrl = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "Teams", action = "Interviewers" })';
            var responsiblesUrl = '@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "Teams", action = "AsigneeInterviewersBySupervisor" })';
            var model = new Supervisor.VM.SVInterviews($statistics, $interviewsPageUrl, responsiblesUrl, usersToAssignUrl, $commandExecutionUrl, notifier);
            model.IsNothingSelected.subscribe(function (value) {
                if (value) {
                    model.Users.AssignTo(undefined);
                }
            });
            ko.applyBindings(model);
            model.load();
        });
    </script>
}


<main class="hold-transition">
    <div class="container-fluid">
        <div class="row">
            <aside class="filters">
                <div class="foldback-button" id="hide-filters">
                    <span class="arrow"></span>
                    <span class="arrow"></span>
                    <span class="glyphicon glyphicon-tasks" aria-hidden="true"></span>
                </div>

                <div class="filters-container">
                    <h4>@Pages.FilterTitle:</h4>

                    <div class="block-filter">
                        <h5>@Common.Search</h5>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Text" data-bind="value: SearchBy, valueUpdate:'afterkeydown', enterKey: filter">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button" data-bind="click: filter">Filter</button>
                            </span>
                        </div>
                    </div>

                    <div class="block-filter">
                        <h5>@Pages.Template</h5>
                        <select id="templateSelector" data-bind="value: SelectedTemplate" class="selectpicker">
                            @if (Model.Templates.Count() > 1)
                            {
                                <option value="">@Common.Any</option>
                            }
                            @foreach (var item in Model.Templates)
                            {
                                <option value='{"templateId": "@item.TemplateId","version": "@item.TemplateVersion"}'>(ver. @item.TemplateVersion) @item.TemplateName</option>
                            }
                        </select>
                    </div>

                    <div class="block-filter">
                        <h5>@Pages.Survey_ResponsibleTitle</h5>
                        <p class="list-group-item-text">
                            <div class="input-group">
                                <input class="form-control" placeholder="@Common.Any" data-bind="typeahead: SelectedResponsible, typeaheadOptions: {source: Responsibles, displayText: function(item){return item.UserName}}, valueupdate:'afterkeydown'" type="text" />
                                <span data-bind="spinner: IsResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                                <div class="input-group-btn" data-bind="click: function(){ SelectedResponsible(undefined); }">
                                    <div class="btn btn-default"><span class=" glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                                </div>
                            </div>
                        </p>
                    </div>

                    <div class="block-filter">
                        <h5>@Common.Status</h5>
                        <select data-bind="value: SelectedStatus" class="selectpicker">
                            <option value="">@Common.Any</option>
                            @foreach (var item in Model.Statuses)
                            {
                                <option value="@item.Status">@item.StatusName</option>
                            }
                        </select>
                    </div>

                </div>
            </aside>

            <div class="main-information">
                @Html.Partial("_notice")
                @Html.Partial("_alerts")
                <div class="row">
                    <div class="page-header clearfix">
                        <div>
                            <h1>@Common.Interviews</h1>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xs-10 prefilled-data-info info-block">
                    </div>
                </div>

                <table id="interviews" class="table table-striped table-ordered table-bordered table-hover table-with-checkboxes">
                    <thead>
                        <tr>
                            <th class="sorting_disabled checkbox-cell">
                                <input class="double-checkbox" id="check-all" type="checkbox" data-bind="click: $root.selectAll($element)">
                                <label for="check-all">
                                    <span class="tick"></span>
                                </label>
                            </th>
                            <th class="sorting_disabled">
                                @Common.InterviewKey
                            </th>
                            <!-- ko if:SelectedTemplate() == '' -->
                            <th class="sorting_disabled">@Common.PrefilledQuestions</th>
                            <!-- /ko -->
                            <!-- ko ifnot:SelectedTemplate() == '' -->
                            <!-- ko if:Items().length > 0-->
                            <!-- ko foreach:Items()[0].FeaturedQuestions -->
                            <th class="sorting_disabled" data-bind='html: Question'></th>
                            <!-- /ko -->
                            <!-- /ko -->
                            <!-- /ko -->
                            <th data-bind='sortby: "ResponsibleName"'>@Pages.Survey_ResponsibleTitle</th>
                            <th class="date last-update" data-bind='sortby: "UpdateDate"'>@Pages.Survey_LastUpdateTitle</th>
                            <th class="errors" data-bind='sortby: "HasErrors"'>@Pages.Survey_HasErrorsTitle</th>
                            <th data-bind='sortby: "Status"'>@Pages.Survey_StatusTitle</th>
                            <th data-bind='sortby: "ReceivedByInterviewer"'>@Pages.Survey_ReceivedByInterviewerTitle</th>
                            <th class="sorting_disabled">@Pages.Survey_CreatedOnClientTitle</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- ko foreach:Items -->
                        <tr>
                            <td class="checkbox-cell">
                                <input type="checkbox" data-bind="value: InterviewId(), attr: { id: 'cbx_' + InterviewId() }, checked: IsSelected" class="checkbox-filter" />
                                <label data-bind="attr: { for: 'cbx_' + InterviewId() }"><span class="tick"></span></label>
                            </td>
                            <td class="interview-id title-row">
                                <a data-bind="attr: { href: $detailsUrl + '/' + InterviewId() }, text: Key"></a>
                            </td>
                            <!-- ko if:$root.SelectedTemplate() == '' -->
                            <td data-bind="text: $root.getFormattedPrefilledQuestions(FeaturedQuestions()).joinArrayOfObjects('Question', 'Answer')"></td>
                            <!-- /ko -->
                            <!-- ko ifnot:$root.SelectedTemplate() == '' -->
                            <!-- ko foreach:$root.getFormattedPrefilledQuestions(FeaturedQuestions()) -->
                            <td data-bind="text: Answer"></td>
                            <!-- /ko -->
                            <!-- /ko -->
                            <td>
                                <a data-bind="attr: { href: $surveysUrl + '?interviewerId=' + ResponsibleId() }, text: ResponsibleName"></a>
                            </td>
                            <td class="date last-update" data-bind="text: LastEntryDate"></td>
                            <td class="errors">
                                <!-- ko if:HasErrors -->
                                Yes
                                <!-- /ko -->
                                <!-- ko ifnot:HasErrors -->
                                <span class="empty"></span>
                                <!-- /ko -->
                            </td>
                            <td data-bind="text: Status"></td>
                            <td data-bind="css: { 'error-text' : !ReceivedByInterviewer(), 'success-text': ReceivedByInterviewer() } ">
                                <span data-bind="text: ReceivedByInterviewer() ? 'Yes' : 'No'"></span>
                            </td>
                            <td data-bind="css: { 'success-text': CreatedOnClient }">
                                <span data-bind="text: CreatedOnClient ? 'Yes' : 'No'"></span>
                            </td>
                        </tr>
                        <!-- /ko -->
                    </tbody>
                </table>

                <div class="panel panel-table" data-bind="visible: SelectedItems().length > 0">
                    <div class="panel-body">
                        <input class="double-checkbox-white" id="q1az" type="checkbox" checked disabled="disabled">
                        <label for="q1az">
                            <span class="tick"></span> <span data-bind="text: SelectedItems().length + ' @Pages.Interviews_Selected'"></span>
                        </label>
                        <button class="btn btn-lg btn-success" data-bind="disable: IsNothingSelected, click: $root.AssignInterview">@Common.Assign</button>
                        <button type="button" class="btn btn-lg btn-success" data-bind="disable: IsNothingSelected, click: $root.ApproveInterview">Approve</button>
                        <button type="button" class="btn btn-lg reject" data-bind="disable: IsNothingSelected, click: $root.RejectInterview">Reject</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
    <script type="text/html" id="confirm-assign-template">
        <div class="assign-interviewer">
            <div>
                @Html.Raw(string.Format(Interviews.AssignConfirmMessage,
                "<span data-bind='text: CountInterviewsToAssign'></span>",
                InterviewStatus.SupervisorAssigned.ToLocalizeString(),
                InterviewStatus.InterviewerAssigned.ToLocalizeString(),
                InterviewStatus.RejectedBySupervisor.ToLocalizeString()))
            </div>
            <div data-bind="if: IsExistsItemsToAssign">
                <br />
                @Interviews.ChooseResponsibleInterviewer
                <div class="input-group">
                    <input class="form-control" placeholder="@Common.Any" data-bind="typeahead: Users.AssignTo, typeaheadOptions: {source: Users.LoadUsers, displayText: function(item){return item.UserName}, afterSelect: StoreInteviewer }, valueupdate:'afterkeydown'" type="text" />
                    <span data-bind="spinner: Users.IsResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                    <div class="input-group-btn" data-bind="click: ClearAssignTo">
                        <div class="btn btn-default"><span class=" glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                    </div>
                </div>
            </div>
            <div data-bind="if: CountReceivedByInterviewerItems > 0">
                <br />
                <input type="checkbox" id="reassignReceivedByInterviewer" data-bind="checked: IsReassignReceivedByInterviewer" class="checkbox-filter" />
                <label for="reassignReceivedByInterviewer" style="font-weight: normal">
                    <span class="tick"></span>
                    @Html.Raw(string.Format(Interviews.AssignReceivedConfirm, "<span data-bind='text: CountReceivedByInterviewerItems'></span>"))
                </label>
            </div>
        </div>
        <br />
    </script>
    <script type="text/html" id="confirm-approve-template">
        @Html.Raw(string.Format(Interviews.ApproveConfirmMessage,
            "<span class='text-normal' data-bind='text: length'></span>",
            InterviewStatus.Completed.ToLocalizeString(),
            InterviewStatus.RejectedByHeadquarters.ToLocalizeString()))
    </script>
    <script type="text/html" id="confirm-reject-template">
        <div class='reject-interviewer'>
            @Html.Raw(string.Format(Interviews.RejectConfirmMessage,
                "<span class='text-normal' data-bind='text: CountInterviewsToReject'></span>",
                InterviewStatus.Completed.ToLocalizeString(),
                InterviewStatus.RejectedByHeadquarters.ToLocalizeString()))
            <div data-bind="visible: IsNeedShowAssignInterviewers">
                @Interviews.ChooseResponsibleInterviewer
                <div class="btn-group">
                    <div class="input-group">
                        <input class="form-control" placeholder="@Common.Any" data-bind="typeahead: Users.AssignTo, typeaheadOptions: {source: Users.LoadUsers, displayText: function(item){return item.UserName}, afterSelect: StoreInteviewer }, valueupdate:'afterkeydown'" type="text" />
                        <span data-bind="spinner: Users.IsResponsiblesLoading, spinnerOptions: { 'left': 1, 'right': '50px' }"></span>
                        <div class="input-group-btn" data-bind="click: ClearAssignTo">
                            <div class="btn btn-default"><span class=" glyphicon glyphicon-remove" aria-hidden="true"></span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </script>
    <script type="text/html" id="confirm-continue-message-template">
        <br />@Interviews.ContinueConfirmMessage
    </script>

</main>
