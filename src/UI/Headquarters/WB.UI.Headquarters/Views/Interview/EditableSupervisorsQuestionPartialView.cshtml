@using Main.Core.Entities.SubEntities
@using WB.Core.BoundedContexts.Headquarters.Views.Interview
@model InterviewQuestionView

@switch (Model.QuestionType)
{
    case QuestionType.Text:
        var textQuestionSettings = Model.Settings as TextQuestionSettings;
        <div class="input-group">
            <input id="@Model.Id" class="form-control mask" type="text" value="@Model.Answer" mask="@(textQuestionSettings.Mask)"/>
            <span class="input-group-btn">
                <button class="btn btn-success" type="button" data-bind="click: saveTextAnswer.bind($data, '@Model.Id.Id', '@Model.Id.RosterVector')">@Pages.EditQuestion_Save</button>
            </span>
        </div>
        break;
    case QuestionType.Numeric:
        var numericQuestionSetting = Model.Settings as NumericQuestionSettings;
        <div class="input-group">
            <input id="@Model.Id.Id" class="form-control numeric" type="text" useFormatting="@numericQuestionSetting.UseFormating.ToString().ToLower()" value="@Model.AnswerString" />
            <span class="input-group-btn">
                @if (numericQuestionSetting.IsInteger)
                {
                    <button class="btn btn-success" type="button" data-bind="click: saveNumericIntegerAnswer.bind($data, '@Model.Id.Id', '@Model.Id.RosterVector')">@Pages.EditQuestion_Save</button>
                }
                else
                {
                    <button class="btn btn-success" type="button" data-bind="click: saveNumericRealAnswer.bind($data, '@Model.Id.Id', '@Model.Id.RosterVector', @(numericQuestionSetting.CountOfDecimalPlaces ?? 0))">@Pages.EditQuestion_Save</button>
                }
            </span>
        </div>
        break;
    case QuestionType.SingleOption:
        var singleOptionSettings = Model.Settings as SingleQuestionSettings;
        if (singleOptionSettings.IsFilteredCombobox)
        {
            <div class="input-group">
                <input id="@Model.Id" class="form-control" type="text" value="@Model.Answer"/>
                <span class="input-group-btn">
                    <button class="btn btn-success" type="button" data-bind="click: saveFilteredComboboxAnswer.bind($data, '@Model.Id.Id', '@Model.Id.RosterVector')">@Pages.EditQuestion_Save</button>
                </span>
            </div>
        }
        else
        {
            foreach (var option in Model.Options)
            {
                var optionValue = option.Value.ToString();
                var isChecked = Model.Answer != null && Convert.ToDecimal(Model.Answer) == Convert.ToDecimal(option.Value);

                <label class="radio" for="@Html.InterviewItemIdWithPostfix(Model.Id.Id, Model.Id.RosterVector, string.Format("option{0}", optionValue))">
                    <input type="radio" name="@Model.Id" id="@Html.InterviewItemIdWithPostfix(Model.Id.Id, Model.Id.RosterVector, string.Format("option{0}", optionValue))" value="@optionValue" @(isChecked ? "checked" : "")
                           data-bind="click: saveCategoricalOneAnswer.bind($data, '@Model.Id.Id', '@Model.Id.RosterVector')">
                    <span>@option.Label</span>
                </label>
            }
        }
        break;
    case QuestionType.MultyOption:
        var multiQuestionSettings = Model.Settings as MultiQuestionSettings;
        if (multiQuestionSettings.YesNoQuestion)
        {
            @Html.Partial("EditableYesNoQuestionPartialView", Model)
        }
        else
        {
            @Html.Partial("EditableMultiOptionsQuestionPartialView", Model)
        }
        break;
}