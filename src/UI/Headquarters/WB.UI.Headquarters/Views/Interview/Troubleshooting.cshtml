@model WB.Core.BoundedContexts.Headquarters.Views.Revalidate.InterviewTroubleshootView

@{
    ViewBag.Title = "Troubleshoot";
}
<div class="col-sm-12">
    <div class="page-header">
        <h3>
            @Html.ActionLink(Model.Title, "Details", "Interview", new { id = Model.InterviewId }, new { }) <small>(ver. @Model.QuestionnaireVersion)</small>
        </h3>
        <h4>Responsible: @Model.Responsible.Name, Status: @Model.Status</h4>
    </div>

    <div class="row">
        <div class="col-sm-6">

            <div class="panel panel-default">
                <div class="panel-heading">Pre-filled questions</div>
                <table class="table table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Answer</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var question in Model.FeaturedQuestions)
                        {
                            <tr class="@(question.IsValid ? "" : "error")">
                                <td>
                                    @question.Title
                                </td>
                                <td>
                                    @question.Answer
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
    <div class="jumbotron">
        <h1>Warning</h1>

        <p>Before taking any actions, make sure you have selected the right interview and this interview has one or more of the problems listed below</p>
        <h3>Re-evaluate if</h3>
        <ul>
            <li>You found a group or question that was disabled\enabled by mistake</li>
            <li>You found a group or question that was invalid\valid by mistake</li>
        </ul>

        <h3>Re-export if</h3>
        <ul>
            <li>You re-evaluated the interview</li>
        </ul>

        <h3>Re-apply the most recent interview status if</h3>
        <ul>
            <li>Status of interview on details page differs from the status displayed on Interviews page</li>
        </ul>
        <p>or <a class="btn btn-success btn-lg" href="@Url.Action("Troubleshoot","Interview")">Fix another interview</a></p>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <h3>Re-evaluate if</h3>
            <ul>
                <li>You found a group or question that was disabled\enabled by mistake</li>
                <li>You found a group or question that was invalid\valid by mistake</li>
            </ul>
        </div>
        <div class="col-sm-4">
            <h3>Re-export if</h3>
            <ul>
                <li>You re-evaluated the interview</li>
            </ul>
        </div>
        <div class="col-sm-4">
            <h3>Re-apply the most recent interview status if</h3>
            <ul>
                <li>Status of interview on details page differs from the status displayed on Interviews page</li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-4">
            @using (Html.BeginForm("Revalidate", "Interview", FormMethod.Post))
            {
                @Html.HiddenFor(x => x.InterviewId)
                @Html.HiddenFor(x => x.QuestionnairePublicKey)
                <button class="btn btn-primary btn-lg btn-block" type="submit">Re-evaluate</button>
            }
            @if (this.TempData.ContainsKey("Revalidation.Error"))
            {
                <div class="alert alert-danger" role="alert">
                    <strong>@TempData["Revalidation.Error"]</strong><br />@TempData["Revalidation.ErrorDetails"]
                </div>
            }
        </div>
        <div class="col-sm-4">
            @using (Html.BeginForm("Reexport", "Interview", FormMethod.Post))
            {
                @Html.HiddenFor(x => x.InterviewId)
                @Html.HiddenFor(x => x.QuestionnairePublicKey)
                <button class="btn btn-primary  btn-lg btn-block" type="submit">Re-export</button>
            }
            @if (this.TempData.ContainsKey("Reexport.Error"))
            {
                <div class="alert alert-danger" role="alert">
                    <strong>@TempData["Reexport.Error"]</strong><br />@TempData["Reexport.ErrorDetails"]
                </div>
            }
        </div>
        <div class="col-sm-4">
            @using (Html.BeginForm("RepeatLastStatus", "Interview", FormMethod.Post))
            {
                @Html.HiddenFor(x => x.InterviewId)
                @Html.HiddenFor(x => x.QuestionnairePublicKey)
                <button class="btn btn-primary  btn-lg btn-block" type="submit">Re-apply recent status change</button>
            }

            @if (this.TempData.ContainsKey("RepeatLastStatus.Error"))
            {
                <div class="alert alert-danger" role="alert">
                    <strong>@TempData["RepeatLastStatus.Error"]</strong><br />@TempData["RepeatLastStatus.ErrorDetails"]
                </div>
            }
        </div>
    </div>
</div>