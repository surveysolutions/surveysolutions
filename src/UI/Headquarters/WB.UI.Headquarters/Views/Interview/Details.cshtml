@using System.Web.Optimization
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@using WB.Core.SharedKernels.SurveyManagement.Web.Code
@using WB.Core.SharedKernels.SurveyManagement.Web.Models
@using WB.Core.SharedKernels.SurveyManagement.Web.Utils.Membership
@model WB.Core.SharedKernels.SurveyManagement.Web.Models.DetailsViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles
{
    @Styles.Render("~/css/list")
    @Styles.Render("~/css/interview")
}

<div>
    <div id="menu" class="col-sm-3 col-md-2 sidebar">
        <div class="panel panel-default">
            <div class="panel-heading with-btn">
                Groups
                <div class="btn-group btn-group-sm pull-right">
                    <button data-bind="click: ToggleFilter" class="btn btn-default"><span class="glyphicon glyphicon-arrow-left"></span> Hide groups</button>
                </div>
            </div>
            <ul id="groups-menu" class="list-group">
                @foreach (var group in Model.Groups.Skip(1))
                {
                    <li class="list-group-item">
                        <a href="#group-@(group.Id)">@group.Title</a>
                    </li>
                }
            </ul>
        </div>

    </div>
    <div id="content" class="col-sm-6 col-sm-offset-3 col-md-8 col-md-offset-2 main">
        <div class="row-fluid" data-bind="with: questionnaire">
            <h3 class="span10 text-overflow-ellipsis">
                <span>@Model.FilteredInterviewDetails.Title</span>
                <span class="small">Status:</span><a class="btn-link" data-toggle="modal" data-target="#statusHistoryModal">@Model.FilteredInterviewDetails.Status.ToLocalizeString()</a>
                <span class="small">Responsible:</span><span>@Model.FilteredInterviewDetails.Responsible.Name</span>
            </h3>
        </div>
        <div class="panel panel-default">
            <div class="panel-body">
                <span data-bind="visible: !IsFilterOpen()"><button data-bind="click: ToggleFilter" class="btn btn-default  btn-xs"><span class="glyphicon glyphicon-arrow-right"></span> Show groups</button></span>
                @if (((Model.FilteredInterviewDetails.Status == InterviewStatus.Completed || Model.FilteredInterviewDetails.Status == InterviewStatus.RejectedByHeadquarters) && GlobalInfo.IsSupervisor)
                        || (Model.FilteredInterviewDetails.Status == InterviewStatus.ApprovedBySupervisor && GlobalInfo.IsHeadquarter))
                {
                    <button class="btn btn-success " data-bind="click: showApproveModal">Approve</button>
                    <button class="btn btn-danger" data-bind="click: showRejectModal">Reject</button>
                }
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.All })" class="btn btn-default btn-xs @SetFilterActiveClass(InterviewDetailsFilter.All)">all</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Flagged })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Flagged)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Flagged)"></i> flagged (<span>@Model.Statistic.FlaggedCount</span>)</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Commented })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Commented)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Commented)"></i> commented (<span>@Model.Statistic.CommentedCount</span>)</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Answered })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Answered)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Answered)"></i> answered (<span>@Model.Statistic.AnsweredCount</span>)</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Invalid })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Invalid)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Invalid)"></i> invalid (<span>@Model.Statistic.InvalidCount</span>)</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Supervisors })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Supervisors)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Supervisors)"></i> supervisor's (<span>@Model.Statistic.SupervisorsCount</span>)</a>
                <a href="@Url.Action("Details", "Interview", new { id = Model.FilteredInterviewDetails.PublicKey, filter = InterviewDetailsFilter.Enabled })" class="btn btn-default  btn-xs @SetFilterActiveClass(InterviewDetailsFilter.Enabled)"><i class="glyphicon glyphicon-flag @SetFilterIconActiveClass(InterviewDetailsFilter.Enabled)"></i> enabled (<span>@Model.Statistic.EnabledCount</span>)</a>
            </div>
        </div>
        <div id="list">
            <!-- ko foreach: groups -->
            <div data-bind="visible: visibleEntitiesCount() > 0 && isVisible()">
                <h2 data-bind="html: title" class="heading"></h2>
                <div class="questions">
                    <table class="table table-bordered table-hover">
                        <tbody data-bind="foreach: entities">
                            <!-- ko if: $root.isStaticText($data) -->
                            <tr data-bind="visible : isVisible">
                                <td colspan="3" class="static-text">
                                    <div class="cell-content">
                                        <span data-bind="html: staticText"></span>
                                    </div>
                                </td>
                            </tr>
                            <!-- /ko -->
                            <!-- ko ifnot: $root.isStaticText($data) -->
                            <tr data-bind="visible : isVisible,css: {success: isSelected, danger : isInvalid && isEnabled, mandatory : isMandatory, 'text-muted' : isEnabled == false}">
                                <td style="width: 60%" class="question-text" data-bind="click: $root.showDetails">
                                    <div class="cell-content" data-bind="css: {featured : isFeatured}">
                                        <span class="icon-star"></span>
                                        <span data-bind="html: title"></span>
                                    </div>
                                </td>
                                <td class="question-answer" data-bind="click: $root.showDetails">
                                    <div class="cell-content" data-bind="visible: isEnabled || isAnswered">
                                        <div class="question-clickable">
                                            <span data-bind="css: markerStyle()" class="question-marker"></span>
                                            <span data-bind="template: { name: questionType }"></span>
                                            <small class="text-error" data-bind="html:validationExpression, visible: isInvalid"></small>
                                            <small class="text-error" data-bind="html:validationMessage, visible: isInvalid"></small>
                                        </div>
                                    </div>
                                </td>
                                <td class="col-sm-3">
                                    <div class="actions pull-right">
                                        <div class="btn-group btn-group-xs" data-bind="css : {hidden : !((comments().length == 0) || isFlagged() == false || isReadonly == false)}">
                                            <a class="btn btn-default dropdown-toggle" data-toggle="dropdown" href="#"><i class="icon-cog"></i><span class="caret"></span></a>
                                            <ul class="dropdown-menu pull-right">
                                                <li data-bind="visible: isReadonly == false && isEnabled"><a href="#" data-bind="click: $root.showDetails">Answer</a></li>
                                                <li><a href="#" data-bind="click: $root.showDetails">Comment</a></li>
                                                <li data-bind="visible: isFlagged() == false"><a data-bind="    click: $root.flagAnswer">Flag</a></li>
                                            </ul>
                                        </div>
                                        <a class="btn  btn-xs btn-success" data-bind="click: $root.showDetails, visible: comments().length > 0">
                                            <span data-bind="text: comments().length + ' '"></span><i class="glyphicon glyphicon-comment"></i>
                                        </a>
                                        <a class="btn  btn-xs btn-info" data-bind="click: $root.flagAnswer, visible: isFlagged()">
                                            <i class="glyphicon glyphicon-flag"></i>
                                        </a>
                                        <a class="btn  btn-xs btn-primary" href="#" data-bind="click: $root.showDetails, visible: isReadonly == false && isEnabled">answer</a>
                                    </div>
                                </td>
                            </tr>
                            <!-- /ko -->
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /ko -->
        </div>
    </div>
</div>
<div class="modal fade" id="statusHistoryModal" tabindex="-1" role="dialog" aria-labelledby="statusHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="statusHistoryModalLabel">Interview change status history</h4>
            </div>
            <div class="modal-body">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th style="width: 125px">State</th>
                            <th>with comment</th>
                            <th style="width: 90px">on</th>
                            <th>by</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var historyItem in Model.History.StatusHistory)
                        {
                            <tr>
                                <td>@historyItem.Status.ToLocalizeString()</td>
                                <td>@historyItem.Comment</td>
                                <td>@historyItem.Date.ToShortDateString()</td>
                                <td>@historyItem.Responsible</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@if (((Model.FilteredInterviewDetails.Status == InterviewStatus.Completed || Model.FilteredInterviewDetails.Status == InterviewStatus.RejectedByHeadquarters) && GlobalInfo.IsSupervisor)
        || (Model.FilteredInterviewDetails.Status == InterviewStatus.ApprovedBySupervisor && GlobalInfo.IsHeadquarter))
{
    <div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="approveModalLabel">Approve interview</h4>
                </div>
                <div class="modal-body">
                    <label>Comment:</label>
                    <textarea data-bind="value: changeStateComment" class="form-control" rows="10"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button class="btn btn-success" data-bind="click: @(GlobalInfo.IsSupervisor ? "approveInterview" : "hQApproveInterview")">Approve</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="rejectModalLabel">Reject interview</h4>
                </div>
                <div class="modal-body">
                    <label>Comment:</label>
                    <textarea data-bind="value: changeStateComment" class="form-control" rows="10"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button class="btn btn-danger" data-bind="click: @(GlobalInfo.IsSupervisor ? "rejectInterview" : "hQRejectInterview")">Reject</button>
                </div>
            </div>
        </div>
    </div>
}

@helper SetFilterActiveClass(InterviewDetailsFilter filter)
{
    if (filter == Model.Filter)
    {
        <text>btn-primary</text>
    }
}

@helper SetFilterIconActiveClass(InterviewDetailsFilter filter)
{
    if (filter == Model.Filter)
    {
        <text>icon-white</text>
    }
}