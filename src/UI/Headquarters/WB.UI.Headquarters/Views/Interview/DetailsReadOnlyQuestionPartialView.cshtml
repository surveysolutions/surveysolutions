@using WB.Core.BoundedContexts.Headquarters.Resources
@model WB.Core.BoundedContexts.Headquarters.Views.Interview.InterviewQuestionView

<tr class="@css("danger", !Model.IsValid && Model.IsEnabled) @css("text-muted", !Model.IsEnabled)">
    <td class="answer-status">
        <div class="@css("hidden", !Model.IsFlagged)">
            <i class="glyphicon glyphicon-flag"></i>
        </div>
    </td>
    <td class="question-title-section">
        <div class="@css("featured", Model.IsFeatured)">
            <span class="icon-star"></span>
            <span class="question-title">@Html.Raw(Model.Title)</span>
        </div>
    </td>
    <td class="question-answer">
        @Html.Partial("ReadOnlyQuestionPartialView", Model)
        @if (!Model.IsValid)
        {
            <dl>
                @foreach (var validationCondition in Model.FailedValidationMessages)
                {
                    <dt>
                        <small class="text-error">@validationCondition.Expression</small>
                    </dt>
                    <dd>
                        <small class="text-error">@(string.IsNullOrEmpty(validationCondition.Message) ? Strings.Error : validationCondition.Message)</small>
                    </dd>
                }
            </dl>
        }
    </td>
    <td class="comments col-sm-3">
        <dl class="@css("hidden", Model.Comments == null || Model.Comments.Count == 0)">
            @if (Model.Comments != null && Model.Comments.Count > 0)
            {
                foreach (var comment in Model.Comments)
                {
                    <dt>@comment.CommenterName <span class="text-normal">@comment.Text</span></dt>
                    <dd>
                        <small class="comment-date" date="@comment.Date.ToString("u")"></small>
                    </dd>
                }
            }
        </dl>
    </td>
</tr>


@helper css(string style, bool shouldBeAdded = true)
{
    @(shouldBeAdded ? style : string.Empty)
}
