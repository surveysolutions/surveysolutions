@using System.Globalization
@using WB.Core.BoundedContexts.Headquarters.Views.Interview
@using WB.Core.SharedKernels.DataCollection.Events.Interview.Dtos
@using WB.UI.Headquarters.Resources
@model WB.Core.BoundedContexts.Headquarters.Views.Interview.InterviewQuestionView

@{
    var answersTyped = (AnsweredYesNoOption[])Model.Answer;
    var answers = (answersTyped ?? new AnsweredYesNoOption[0]).ToList();
    var orderedYesAnswers = answers.Where(answer => answer.Yes).ToList();
    var multiQuestionSettings = Model.Settings as MultiQuestionSettings;
    var jsMaxAllowedAnswersValueAsString = "null";
    if (multiQuestionSettings.MaxAllowedAnswers.HasValue)
    {
        jsMaxAllowedAnswersValueAsString = multiQuestionSettings.MaxAllowedAnswers.Value.ToString();
    }


    var questionId = @Model.Id;
    var questionRosterVectorAsString = Stringify(Model.RosterVector);
}

@if (Model.Options.Any())
{
    <table>
        <tr>
            <td  style="white-space: nowrap;"><span style="color: #36AEE5">@Pages.YesNoQuestion_Yes</span><span style="color: #E6E8E9"> / </span><span style="color: #36AEE5">@Pages.YesNoQuestion_No</span></td>
            <td></td>
        </tr>
        @foreach (var option in Model.Options)
        {
            var selectedAnswer = answers.FirstOrDefault(answer => answer.OptionValue == (decimal)option.Value);

            <tr>
                <td>
                    &nbsp;
                    <input type="radio" name="@getInterviewItemIdWithPostfix(Model.Id, Model.RosterVector, string.Format("option{0}", option.Value))"
                           @if (selectedAnswer != null && selectedAnswer.Yes){<text> checked</text>}
                           data-bind="click: saveYesNoMultiAnswer.bind($data, '@questionId', '@questionRosterVectorAsString', true, @option.Value, @jsMaxAllowedAnswersValueAsString)" />
                    <span style="color: #E6E8E9"> / </span>
                    <input type="radio" name="@getInterviewItemIdWithPostfix(Model.Id, Model.RosterVector, string.Format("option{0}", option.Value))" 
                           @if (selectedAnswer != null && !selectedAnswer.Yes){<text> checked</text>}
                           data-bind="click: saveYesNoMultiAnswer.bind($data, '@questionId', '@questionRosterVectorAsString', false, @option.Value, @jsMaxAllowedAnswersValueAsString)" />
                </td>
                <td>
                    @option.Label
                    @if (multiQuestionSettings.AreAnswersOrdered && selectedAnswer != null && selectedAnswer.Yes)
                    {
                        <span class="badge">@(orderedYesAnswers.IndexOf(selectedAnswer) + 1)</span>
                    }
                </td>
            </tr>

        }
    </table>

}

@functions
{

    public string getInterviewItemIdWithPostfix(Guid questionId, decimal[] rosterVector, string postfix = "")
    {
        return string.Format("{0}_{1}_{2}", questionId, Stringify(rosterVector), postfix);
    }

    public string Stringify(decimal[] array)
    {
        return string.Join("_", array.Select(x => x.ToString(CultureInfo.InvariantCulture)));
    }

}
