@using WB.Core.SharedKernels.Questionnaire.Documents
@using WB.UI.Shared.Web.Extensions
@model Area
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Area</title>
    @this.GenerateFavicon(Url.Content("~/Dependencies/img/identity/favicon-hq"))

    <style>
        html, body, #viewDiv {
            padding: 0;
            margin: 0;
            height: 100%;
            width: 100%;
        }
    </style>
    @if (Model != null)
    {
    <link rel="stylesheet" href="https://js.arcgis.com/4.3/esri/css/main.css">
    <script src="https://js.arcgis.com/4.3/"></script>
    <script>
        require([
            "esri/Map",
            "esri/views/MapView",
            "esri/Graphic",
            "esri/geometry/Polygon",
            "esri/symbols/SimpleLineSymbol",
            "esri/symbols/SimpleFillSymbol",
            "dojo/domReady!"
        ],
            function (Map, MapView, Graphic, Polygon, SimpleLineSymbol, SimpleFillSymbol) {
                var map = new Map({
                    basemap: "hybrid"
                });

                var geometryJson = @Html.Raw(Model.Geometry);
                var polygon = Polygon.fromJSON(geometryJson);

                var fillSymbol = new SimpleFillSymbol({
                    outline: {
                        color: [255, 255, 255],
                        width: 1
                    }
                });

                var polygonGraphic = new Graphic({
                    geometry: polygon,
                    symbol: fillSymbol
                });

                var view = new MapView({
                    container: "viewDiv",
                    map: map,
                    spatialReference: polygon.spatialReference
                });

                view.graphics.addMany([polygonGraphic]);

                var taxLotExtent = view.graphics.items[0].geometry.extent;
                view.extent = taxLotExtent;

            });
    </script>
    }
</head>
<body>
    <div id="viewDiv"></div>
</body>
</html>
