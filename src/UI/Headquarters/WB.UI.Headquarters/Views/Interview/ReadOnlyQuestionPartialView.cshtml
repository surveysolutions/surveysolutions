@using Main.Core.Entities.SubEntities
@using WB.Core.BoundedContexts.Headquarters.Views.Interview
@using WB.Core.SharedKernels.DataCollection
@model InterviewQuestionView


@switch (Model.QuestionType)
{
    case QuestionType.SingleOption:
        var singleOptionSetting = Model.Settings as SingleQuestionSettings;
        if (singleOptionSetting.IsCascade || singleOptionSetting.IsFilteredCombobox)
        {
            @Model.AnswerString
        }
        else
        {
            foreach (var option in Model.Options)
            {
                <label class="radio" for="@getInterviewItemIdWithPostfix(Model.Id, string.Format("option{0}", option.Value))">
                    <input type="radio" name="@Model.Id" id="@getInterviewItemIdWithPostfix(Model.Id, string.Format("option{0}", option.Value))" @(option.IsChecked ? "checked" : "") disabled="disabled">
                    <span>@option.Label</span>
                </label>
            }
        }
        break;

    case QuestionType.MultyOption:
        var multiQuestionSettings = Model.Settings as MultiQuestionSettings;

        if (multiQuestionSettings.YesNoQuestion)
        {
            @Html.Partial("ReadOnlyYesNoQuestionPartialView", Model)
        } 
        else
        {
            foreach (var option in Model.Options)
            {
                <label class="checkbox" for="@getInterviewItemIdWithPostfix(Model.Id, string.Format("option{0}", option.Value))">
                <input type="checkbox" name="@Model.Id" id="@getInterviewItemIdWithPostfix(Model.Id, string.Format("option{0}", option.Value))" @(option.IsChecked ? "checked" : "") disabled="disabled">
                <span>@option.Label</span>
                    @if (multiQuestionSettings.AreAnswersOrdered && option.IsChecked)
                    {
                        <span class="badge">@option.Index</span>
                    }
                </label>
            }
        }
        break;

    case QuestionType.DateTime:
    case QuestionType.Numeric:
    case QuestionType.Text:
    case QuestionType.QRBarcode:
        @Model.AnswerString
        break;
    case QuestionType.Area:
        {
            <div>
                <iframe width="100%" height="250px" src='@Url.RouteUrl("Default", new {httproute = "", controller = "Interview", action = "InterviewAreaFrame", id = ViewData["InterviewId"], questionId = Model.Id})'></iframe>
            
                <p>
                    <a  data-toggle="collapse" href="#collapseExample@(Model.Id)" aria-expanded="false" aria-controls="collapseExample">
                        @Pages.InterviewDetails_MoreDetails
                    </a>
                </p>
                <div class="collapse" id="collapseExample@(Model.Id)">
                    @Model.AnswerString
                </div>
            </div>
        }
        break;
    case QuestionType.GpsCoordinates:
        if (Model.Answer != null)
        {
            var geoLocationAnswer = Model.Answer as GeoPosition;

            <a class="geo-nav" title="show on map" target="_blank" href="@string.Format("https://www.google.com/maps?q={0},{1}", geoLocationAnswer.Latitude, geoLocationAnswer.Longitude)">
                <span class="icon-maps"></span>
            </a>
                        
            <div style="display: inline-block">
                <div>@Pages.GPS_latitude : <span>@Math.Round(geoLocationAnswer.Latitude, 5)</span></div>
                <div>@Pages.GPS_longitude : <span>@Math.Round(geoLocationAnswer.Longitude, 5)</span></div>
                <div>@Pages.GPS_accuracy : <span>@Math.Round(geoLocationAnswer.Accuracy, 2)</span></div>
                <div>@Pages.GPS_altitude : <span>@Math.Round(geoLocationAnswer.Altitude, 5)</span></div>
            </div>
        }
        break;
    case QuestionType.TextList:
        foreach (var option in Model.Options)
        {
            <div><span>@option.Label</span></div>
        }
        break;
    case QuestionType.Multimedia:
        <img src="@Url.RouteUrl("Default", new {httproute = "", controller = "Resource", action = "InterviewFile", interviewid = ViewData["InterviewId"], filename = Model.AnswerString})" width="100%" height="auto" />
        break;  
}

@functions
    {

    public string getInterviewItemIdWithPostfix(Identity identity, string postfix = "")
    {
        return string.Format("{0}_{1}", identity, postfix);
    }
}