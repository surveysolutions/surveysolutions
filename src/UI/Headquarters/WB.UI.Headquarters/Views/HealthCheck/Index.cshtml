@{
    this.ViewBag.Title = Pages.HealthCheck_IndexTitle;
    Layout = "~/Views/Shared/_NoAuthenticationLayout.cshtml";
}
@Styles.Render("~/Content/main")

<div class="row health-check">
    <div class="col-md-8 col-md-offset-2">

        <h1 class="page-header">@Pages.HealthCheck_Header</h1>

        <div>
            <div class="panel-body">
                <div class="well well-sm">Current health check state: &nbsp;<b class="is-good" data-bind="text: status, css: {'has-error': hasErrors, 'has-warning': hasWarnings}"></b></div>
                <div class="row">
                    <div class="col-md-12">
                        <ul class="list-group">
                            <li class="list-group-item" data-bind="css: {'has-error': eventstoreConnectionError }">
                                <span class="badge" data-bind="text:eventstoreConnectionStatus"></span>
                                Eventstore connection status
                                <p data-bind="text:eventstoreConnectionError"></p>
                            </li>
                            <li class="list-group-item" data-bind="css: {'has-warning': numberOfUnhandledPackages() > 0, 'has-error': numberOfUnhandledPackages() == 'Error' }">
                                <span class="badge" data-bind="text:numberOfUnhandledPackages"></span>
                                Number of unhandled packages
                                <p data-bind="html:numberOfUnhandledPackagesError"></p>
                            </li>
                            <li class="list-group-item" data-bind="css: {'has-error': deniedFolders().length > 0 }">
                                <span class="badge" data-bind="text:deniedFoldersStatus"></span>
                                Permissions on write in App_Data folder
                                <table class="table table-condensed margin-0" data-bind="foreach: deniedFolders"><tr><td data-bind="text: $data"></td></tr></table>
                            </li>
                            <li class="list-group-item" data-bind="css: {'has-error': readSideError }">
                                <span class="badge" data-bind="text:readSideStatus"></span>
                                ReadSide connection status
                                <p data-bind="text:readSideError"></p>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@section scripts {

    @Html.Partial("GlobalSettings")

    @Scripts.Render("~/Scripts/viewmodels/pages/healthcheck.js")
    <script type="text/javascript">
        var viewModel = new Supervisor.VM.HealthCheck(
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "HealthCheckApi", action = "GetVerboseStatus"})');
        viewModel.load();

        setInterval(viewModel.load, 5000);

        ko.applyBindings(viewModel);
    </script>
}
