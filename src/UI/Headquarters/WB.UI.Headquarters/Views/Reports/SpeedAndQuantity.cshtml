@using System.Web.Optimization
@using WB.UI.Headquarters.Resources
@model WB.Core.BoundedContexts.Headquarters.Views.Reposts.PeriodicStatusReportModel
@{
    ViewBag.Title = Model.ReportName;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var isSpeedReport = ViewBag.ActivePage == MenuItem.SpeedOfCompletingInterviews;
}

@section scripts
{
    @Scripts.Render("~/js/periodicstatusreport")
    <script type="text/javascript">
        function GetInterviewersUrl(supervisorId) {
            var url = new Url(window.location.href);
            return '@Url.Action(Model.ReportName + "ByInterviewers", "Reports")'
                + '?questionnaireId=' + url.query['questionnaireId']
                + '&questionnaireVersion=' + url.query['questionnaireVersion']
                + '&from=' + url.query['from']
                + '&period=' + url.query['period']
                + '&columnCount=' + url.query['columnCount']
                + '&reportType=' + url.query['reportType']
                + '&supervisorId=' + supervisorId;
        }
        function GetSupervisorsUrl() {
            var url = new Url(window.location.href);
            return '@Url.Action(Model.ReportName + "BySupervisors", "Reports")'
                + '?questionnaireId=' + url.query['questionnaireId']
                + '&questionnaireVersion=' + url.query['questionnaireVersion']
                + '&from=' + url.query['from']
                + '&period=' + url.query['period']
                + '&reportType=' + url.query['reportType']
                + '&columnCount=' + url.query['columnCount'];
        }
        $(function () {
            var model = new Supervisor.VM.PeriodicStatusReport('@Url.RouteUrl("DefaultApiWithAction", new { httproute = "", controller = "ReportDataApi", action = Model.ReportName + Model.WebApiActionName.ToString() })');
            ko.applyBindings(model);
            model.load();
        });
    </script>
}

<main class="hold-transition">
    <div class="container-fluid">
        <div class="row">
            <aside class="filters">
                <div class="foldback-button" id="hide-filters">
                    <span class="arrow"></span>
                    <span class="arrow"></span>
                    <span class="glyphicon glyphicon-tasks" aria-hidden="true"></span>
                </div>
                <div class="filters-container">
                    <h4>@Pages.FilterTitle</h4>
                    @if (Model.ReportTypes.Length > 1)
                    {
                        <div class="block-filter">
                            <h5>@PeriodicStatusReport.InterviewActions</h5>
                            <select id="reportTypeSelector" data-bind="value: SelectedType, selectPicker: {}">
                                @foreach (var item in Model.ReportTypes)
                                {
                                    <option value='@((int) item)'>@PeriodicStatusReport.ResourceManager.GetString(@item.ToString())</option>
                                }
                            </select>
                        </div>
                    }
                    <div class="block-filter">
                        <h5>@PeriodicStatusReport.Questionnaire</h5>
                        <select id="questionnaireSelector" data-bind="value: SelectedQuestionnaire, selectPicker: {}">
                            <option value="" selected="selected">@Common.AllQuestionnaires</option>
                            @foreach (var item in Model.Questionnaires)
                            {
                                <option value='{"questionnaireId": "@item.TemplateId","questionnaireVersion": "@item.TemplateVersion"}'>(@PeriodicStatusReport.Version @item.TemplateVersion) @item.TemplateName</option>
                            }
                        </select>
                    </div>
                    <div class="block-filter">
                        <h5>@PeriodicStatusReport.OverTheLast</h5>
                        <select data-bind="value: ColumnCount, selectPicker: {}" data-size="5">
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                    <div class="block-filter">
                        <h5>@PeriodicStatusReport.PeriodUnit</h5>
                        <select id="periodSelector" data-bind="value: Period, selectPicker: {}">
                            <option value='d'>@PeriodicStatusReport.Day</option>
                            <option value='w'>@PeriodicStatusReport.Week</option>
                            <option value='m'>@PeriodicStatusReport.Month</option>
                        </select>

                    </div>
                    <div class="block-filter">
                        <h5>@PeriodicStatusReport.LastDateToShowLabel</h5>
                        <div class="form-date input-group" id="dates-range">
                            <input type="text" data-bind="flatpickr: FromDate, flatpickrOptions: { minDate: '@Model.MinAllowedDate.ToString("s")', maxDate: 'today', wrap: true, enableTime: false, dateFormat: 'Y-m-d'}" placeholder="Select start date" class="form-control flatpickr-input" readonly="readonly" data-input>
                            <button type="submit" class="btn btn-link btn-clear">
                                <span></span>
                            </button>
                            <span class="input-group-addon" data-toggle>
                                <span class="calendar"></span>
                            </span>
                        </div>
                    </div>

                </div>
            </aside>
            <div class="main-information">
                <div class="page-header">
                    <h1>
                        <span data-bind="text: ReportTypeName"></span>
                        @(Model.SupervisorId.HasValue ? string.Format(PeriodicStatusReport.InTheSupervisorTeamFormat, @Model.SupervisorName) : "")
                    </h1>
                </div>
                <div class="clearfix">
                    <div class="col-sm-8">
                        <h2 data-bind="text: QuestionnaireName"></h2>
                        <h3>@Model.ReportNameDescription</h3>
                        @if (Model.CanNavigateToQuantityBySupervisors)
                        {
                            <a data-bind="attr: { href: GetSupervisorsUrl() }" class="btn btn-default"><span class="glyphicon glyphicon-arrow-left"></span>@PeriodicStatusReport.BackToSupervisors</a>
                        }

                        <p data-bind="visible: Pager().TotalItemCount() == 0">
                            @Pages.NoResults
                        </p>
                    </div>
                </div>
                <div class="dataTables_wrapper no-footer">
                    <div class="table-with-scroll" data-bind="visible: Pager().TotalItemCount() > 0">
                        <table class="table table-striped table-bordered table-condensed table-hover">
                            <thead>
                            <tr>
                                <th>@Model.ResponsibleColumnName</th>
                                <!-- ko foreach:DateTimeRanges -->
                                <th>
                                    <span data-bind="text: $root.GetPeriodName($data)"></span>
                                </th>
                                <!-- /ko -->
                                <th>@PeriodicStatusReport.Average</th>
                                <th>@PeriodicStatusReport.Total</th>
                            </tr>
                            </thead>
                            <tbody>
                            @if (Model.TotalRowPresent)
                            {
                                <tr class="total-row">
                                    <td><span><b>@(isSpeedReport? PeriodicStatusReport.Average: PeriodicStatusReport.Total)</b></span></td>
                                    <!-- ko foreach: ((TotalRow() || {}).@(Model.ReportName)ByPeriod || []) -->
                                    <td class="type-numeric"><span data-bind='text: $root.Format@(Model.ReportName)Period($data)'></span></td>
                                    <!-- /ko -->
                                    <td class="type-numeric">
                                        <span data-bind="text:Format@(Model.ReportName)Period(getTotalAverage())"></span>
                                    </td>
                                    <td class="type-numeric">
                                        <span data-bind="text:Format@(Model.ReportName)Period(getTotalCount())"></span>
                                    </td>
                                </tr>
                            }
                            <!-- ko foreach:Items -->
                            <tr>
                                <td>@if (Model.CanNavigateToQuantityByTeamMember)
                                    {
                                        <a data-bind="attr: { href: GetInterviewersUrl(ResponsibleId()) }, text: ResponsibleName"> </a>
                                    }
                                    else
                                    {
                                        <span data-bind="text: ResponsibleName"></span>
                                    }
                                </td>
                                <!-- ko foreach:@(Model.ReportName + "ByPeriod") -->
                                <td class="type-numeric"><span data-bind='text: $root.Format@(Model.ReportName)Period($data)'></span></td>
                                <!-- /ko -->
                                <td class="type-numeric"><span data-bind="text: $root.Format@(Model.ReportName)Period(Average())"></span></td>
                                <td class="type-numeric"><span data-bind="text: $root.Format@(Model.ReportName)Period(Total())"></span></td>
                            </tr>
                            <!-- /ko -->
                            </tbody>
                        
                        </table>
                    </div>
                    <!-- ko if:Pager().LastPage() > 1 -->
                    <div data-bind="template: { name: 'datatable-pager', data: Pager }"></div>
                    <!-- /ko -->
                </div>
                <!-- ko if:Pager().TotalItemCount() > 0 -->
                @Html.Partial("_export-buttons")
                <!-- /ko -->
            </div>
        </div>
    </div>
    @Html.Partial("_ListDataTablePagingScript")
</main>