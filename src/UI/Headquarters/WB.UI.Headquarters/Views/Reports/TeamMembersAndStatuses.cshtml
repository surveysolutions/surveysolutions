@using Microsoft.Security.Application
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@model IEnumerable<WB.Core.BoundedContexts.Headquarters.Views.Reposts.Views.TemplateViewItem>
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section scripts
{
    @Scripts.Render("~/js/main-no-libs")
    @Scripts.Render("~/js/list")
    @Scripts.Render("~/js/teamsandstatuses")
    @Scripts.Render("~/js/common")


    <script type="text/javascript">
        
        var $interviewsUrl = '@Url.Action("Interviews", "Survey")';
        var $totalTitle = '@HttpUtility.JavaScriptStringEncode(Common.Total)';
        $(function () {
            var model = new Supervisor.VM.TeamsAndStatuses('@Url.RouteUrl("DefaultApiWithAction",
                                                           new { httproute = "", controller = "ReportDataApi", action = "SupervisorTeamMembersAndStatusesReport" })',
                $interviewsUrl);
            model.getDataTableColumns = function () {
                return [
                    {
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row);
                        }
                    },
                    {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row, '@InterviewStatus.SupervisorAssigned', model.Url.query['templateId'], model.Url.query['templateVersion']);
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row, '@InterviewStatus.InterviewerAssigned', model.Url.query['templateId'], model.Url.query['templateVersion']);
                        }
                    },  {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row, '@InterviewStatus.Completed', model.Url.query['templateId'], model.Url.query['templateVersion']);
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row, '@InterviewStatus.RejectedBySupervisor', model.Url.query['templateId'], model.Url.query['templateVersion']);
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return data;
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row, '@InterviewStatus.RejectedByHeadquarters','', model.Url.query['templateId'], model.Url.query['templateVersion']);
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return data;
                        }
                    }, {
                        className: "type-numeric",
                        render: function (data, type, row) {
                            return model.getLinkToInterviews(data, row);
                        }
                    }
                ];
            };

            ko.applyBindings(model);
            model.load();
        });
    </script>
}

<main class="main">
    <div class="container-fluid">
        <div class="row">
            <aside class="filters">
                <div class="foldback-button" id="hide-filters">
                    <span class="arrow"></span>
                    <span class="arrow"></span>
                    <span class="glyphicon glyphicon-tasks" aria-hidden="true"></span>
                </div>
                <div class="filters-container">
                    <h4>@Pages.FilterTitle:</h4>
                    <div class="block-filter">
                        <h5>@Common.Template</h5>
                        <select id="questionnaireSelector" data-bind="value: SelectedTemplate, selectPicker: {}" class="form-control">
                            @if (Model.Count() > 1)
                            {
                                <option value="">@Common.Any</option>
                            }
                            @foreach (var item in Model)
                            {
                                <option value='{"templateId": "@item.TemplateId","version": "@item.TemplateVersion"}'>(ver. @item.TemplateVersion) @item.TemplateName</option>
                            }
                        </select>
                    </div>
                </div>
            </aside>
            <div class="main-information reports">
                @Html.Partial("_alerts")
                <div class="page-header clearfix">
                    <h1>@Pages.TeamMembersAndStatuses</h1>
                    <p data-bind="text: QuestionnaireName"></p>
                </div>

                <div class="table-with-scroll">
                    <div class="dataTables_wrapper">
                        <table id="data_holder" class="table table-striped table-ordered table-bordered table-hover table-mobile-devices dataTable"
                               data-order="[[ 1, &quot;asc&quot;]]" data-searching="false" data-s-Dom="f<&quot;table-with-scroll&quot;t>ip">
                            <thead>
                            <tr>
                                <th data-name="Responsible" data-data="responsible">@Pages.TeamMember</th>
                                <th data-name="SupervisorAssignedCount" data-data="supervisorAssignedCount">@Reports.SupervisorAssigned</th>
                                <th data-name="InterviewerAssignedCount" data-data="interviewerAssignedCount">@Reports.InterviewerAssigned</th>
                                <th data-name="CompletedCount" data-data="completedCount">@Reports.Completed</th>
                                <th data-name="RejectedBySupervisorCount" data-data="rejectedBySupervisorCount">@Reports.RejectedBySupervisor</th>
                                <th data-name="ApprovedBySupervisorCount" data-data="approvedBySupervisorCount">@Reports.ApprovedBySupervisor</th>
                                <th data-name="RejectedByHeadquartersCount" data-data="rejectedByHeadquartersCount">@Reports.RejectedByHQ</th>
                                <th data-name="ApprovedByHeadquartersCount" data-data="approvedByHeadquartersCount">@Reports.ApprovedByHQ</th>
                                <th data-name="TotalCount" data-data="totalCount">@Common.Total</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>