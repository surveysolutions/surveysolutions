@using WB.Core.SharedKernels.SurveyManagement.Web.Properties
@using WB.UI.Shared.Web.Filters

@functions{
    public string TokenHeaderValue()
    {
        string cookieToken, formToken;
        AntiForgery.GetTokens(null, out cookieToken, out formToken);
        return cookieToken + ":" + formToken;
    }
}

<script type="text/javascript">
    var input = window.input || (function () {
        'use strict';
        return {
            settings: {
                messages: {
                    forbiddenMessage: '@Pages.GlobalSettings_ForbiddenMessage',
                    unhandledExceptionMessage: '@Pages.GlobalSettings_UnhandledExceptionMessage',
                    notifyDialogTitle: '@Pages.GlobalSettings_NotifyDialogTitle',
                    notifyDialogText: '@Pages.GlobalSettings_NotifyDialogText',
                    notifyNoMarkersTitle: '@Pages.GlobalSettings_NotifyNoMarkersDialogTitle',
                    notifyNoMarkersText: '@Pages.GlobalSettings_NotifyNoMarkersDialogText',
                    deleteQuestionnaireConfirmationMessage: '@Pages.GlobalSettings_DeleteQuestionnareConfirmation',
                    notifyMarkersLimitReachedTitle: '@Pages.GlobalSettings_NotifyMarkersLimitReachedTitle',
                    notifyNoMarkersLimitReachedText: '@Pages.GlobalSettings_NotifyMarkersLimitReachedText'
                },
                acsrf: {
                    tokenName : '@TokenValidationAuthorizationFilter.Apikey',
                    token : '@TokenHeaderValue()'
                    }
            }
        };
    }(document));
    window.input = input;
</script>