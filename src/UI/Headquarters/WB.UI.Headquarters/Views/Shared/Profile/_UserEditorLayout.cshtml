@model UserEditModel
@{
    Layout = "_EditorLayout.cshtml";
    var isOwnAccoutEditing = this.ViewBag.IsOwnAccoutEditing ?? false;
}
@section scripts {
    @RenderSection(@"scripts", false)
}
@section Breadcrumbs
{
    @RenderSection(@"Breadcrumbs", false)
}
<div class="row extra-margin-bottom">
    @using (Html.BeginForm(Model.EditAction ?? "Edit", null, FormMethod.Post, new {@class = @"profile"}))
    {
        @Html.AntiForgeryToken()
        @RenderSection(@"PreFormSection", false)
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.UserName)
        @Html.HiddenFor(x => x.HideDetails)
        @Html.HiddenFor(x => x.IsLockedDisabled)
        <div class="col-sm-12">
            @RenderSection(@"PreDetailsSection", false)
            @if (!Model.HideDetails)
            {
                @Html.EditorFor(x => x.PersonName, "TextBoxFormField", new {disableClientValidation = true})
                @Html.EditorFor(x => x.Email, "TextBoxFormField")
                @Html.EditorFor(x => x.PhoneNumber, "TextBoxFormField")
            }
            @RenderSection(@"LockWarningSection", false)
            @if (!isOwnAccoutEditing)
            {
                if (Model.IsLockedDisabled && Model.IsLocked) {
                    <p class="text-danger">
                        @FieldsAndValidations.UserIsLockedByHq
                    </p>
                }
                else if(!Model.IsLockedDisabled)
                {
                    @Html.EditorFor(x => x.IsLocked, "CheckboxFormField", Model.IsLockedDisabled ? new {} : (object) new {@disabled = @"disabled"})
                }
            }
            @RenderSection(@"PostDetailsSection", false)
            @Html.Partial("Profile/ValidationSummary")
        </div>

        @Html.EditorForModel("UpdateButtonsRow")
    }

    @Html.Partial(@"Profile/" + Model.UpdatePasswordAction ?? @"UpdatePassword")
</div>
@RenderBody()