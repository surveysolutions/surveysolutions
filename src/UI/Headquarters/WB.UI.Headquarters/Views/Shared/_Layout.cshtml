@using System.Web.Optimization
@using WB.Core.BoundedContexts.Headquarters.Authentication
<!DOCTYPE html>

@helper MenuItem(string text, string action, string controller)
{
    var currentController = (string)@Html.ViewContext.RouteData.Values["controller"];

    <li class="@(string.Equals(controller, currentController, StringComparison.InvariantCultureIgnoreCase) ? "active" : "")">
        @Html.ActionLink(text, action, controller)
    </li>
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    @Styles.Render("~/content/bootstrap")

    @Styles.Render("~/content/app")

    @RenderSection("styles", false)

    <style>
        body {
            padding-top: 50px;
        }
    </style>

    <title>@ViewBag.Title</title>
</head>

<body>

    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                @Html.ActionLink("Headquarters", "Index", "Home", null, new { @class = "navbar-brand" })


            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    @if (User.IsInRole(ApplicationRoles.Headquarter))
                    {
                        @MenuItem(CommonResources.Interviews, "Index", "Interviews")
                        @MenuItem(CommonResources.Team, "Index", "Team")
                        @MenuItem(CommonResources.Questionnaires, "Index", "Questionnaires")
                        @MenuItem(CommonResources.Surveys, "Index", "Surveys")
                    }

                    @if (User.IsInRole(ApplicationRoles.Administrator))
                    {
                        @MenuItem(CommonResources.Users, "Index", "Users")
                    }
                </ul>

                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <p class="navbar-text">Signed in as @User.Identity.Name</p>
                    </li>
                    <li>
                        @using (Html.BeginForm("Signout", "Account", FormMethod.Post, new { @class = "navbar-form " }))
                        {
                            if (User.Identity.IsAuthenticated)
                            {
                                <button class="btn btn-primary" type="submit">Sign Out</button>
                            }
                            @Html.AntiForgeryToken()
                        }
                    </li>
                </ul>

            </div>
        </div>
    </div>

    <div class="container">

        <div>
            <div id="umbrella">
                <div id="umbrella-message">
                    Loading, please wait
                </div>
            </div>
            @RenderBody()


            <div id="output">
                <div class="inner">
                    <div class="title">
                        <button type="button" class="close" data-bind="click: HideOutput">&times;</button>
                        <span>Errors log</span>
                    </div>
                    <div class="body">
                        <div class="container-fluid">
                            <div class="form-horizontal">
                                <ul data-bind="foreach: Errors" class="error-list">
                                    <li class="error">
                                        <pre data-bind="html: error"></pre>
                                    </li>
                                </ul>
                                @RenderSection("output", false)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    @Scripts.Render("~/bundles/jquery", "~/bundles/bootstrap", "~/bundles/jqueryval", "~/bundles/main")

    <script type="text/javascript">
        var input = window.input || (function () {
            'use strict';
            return {
                settings: {
                    messages: {
                        unhandledExceptionMessage: 'An unexpected error occurred. We are sorry for inconvenience. Please try to refresh this page and if this error will occure again, contact support via following email: <a href="mailto:wbcapi@worldbank.org">wbcapi@worldbank.org</a>',
                        notifyDialogTitle: 'Please wait',
                        notifyDialogText: '"Your previous request is not complete. Please wait for it to be finished and repeat your operation."',
                        notifyNoMarkersTitle: 'No markers were added',
                        notifyNoMarkersText: 'There is no any information about geolocation points'
                    }
                }
            };
        }(document));

        window.input = input;

        var setMinHeight = function () {
            var windowHeight = $(window).height();
            var navigationHeight = $('.navbar.navbar-fixed-top').height();
            $('#content').css('min-height', (windowHeight - navigationHeight) + 'px');
            $('#wrapper').css('margin-top', navigationHeight + 'px');
            $('#umbrella').css('top', navigationHeight + 'px');

        };

        $(document).ready(function () {
            setMinHeight();
            $(window).resize(function () {
                setMinHeight();
            });
            $('#umbrella').hide();
        });
    </script>

    @RenderSection("scripts", false)
</body>
</html>
