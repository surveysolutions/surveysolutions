<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Archived" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="AssignmentsHeader" xml:space="preserve">
    <value>Assignments</value>
  </data>
  <data name="AssignmentsSelected" xml:space="preserve">
    <value>{{count}} Assignment selected</value>
  </data>
  <data name="AssignmentsSelected_plural" xml:space="preserve">
    <value>{{count}} Assignments selected</value>
  </data>
  <data name="SizeExplanation" xml:space="preserve">
    <value>Specify maximum number of interviews to be generated for that assignment. Permitted values: -1 is for Unlimited assignment, 0 is for Empty assignment, numbers for assignment size</value>
  </data>
  <data name="ChangeSizeModalTitle" xml:space="preserve">
    <value>Edit size for assignment {{assignmentId}}</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="IdentifyingQuestions" xml:space="preserve">
    <value>Identifying Questions</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="NumberOfAssignmentsAffected" xml:space="preserve">
    <value>{{count}} Assignment is going to be changed</value>
  </data>
  <data name="NumberOfAssignmentsAffected_plural" xml:space="preserve">
    <value>{{count}} Assignments are going to be changed</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="SelectResponsible" xml:space="preserve">
    <value>Select responsible</value>
  </data>
  <data name="ShowArchived" xml:space="preserve">
    <value>Archived status</value>
  </data>
  <data name="Unarchive" xml:space="preserve">
    <value>Unarchive</value>
  </data>
  <data name="Unlimited" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="InterviewsNeeded" xml:space="preserve">
    <value>Interviews needed</value>
  </data>
  <data name="CreateInterview" xml:space="preserve">
    <value>Start new interview</value>
  </data>
  <data name="UpdatedAt" xml:space="preserve">
    <value>Updated on</value>
  </data>
  <data name="CreateAssignment_AnswersInstruction" xml:space="preserve">
    <value>Fill all or some of the identifying fields</value>
  </data>
  <data name="CreateAssignment_ResponsibleInstruction" xml:space="preserve">
    <value>Select responsible (Supervisor or Interviewer) for this assignment</value>
  </data>
  <data name="Questionnaire" xml:space="preserve">
    <value>Questionnaire</value>
  </data>
  <data name="AllAssignments" xml:space="preserve">
    <value>All assignments</value>
  </data>
  <data name="Tooltip_Filter_ArchivedStatus" xml:space="preserve">
    <value>Indicator of whether the assignment is active or has been archived.</value>
  </data>
  <data name="Tooltip_Filter_Questionnaire" xml:space="preserve">
    <value>Select a questionnaire to see its associated assignments. Select “All questionnaires” to see assignments associated with any questionnaire.</value>
  </data>
  <data name="Tooltip_Filter_Responsible" xml:space="preserve">
    <value>User responsible. Click in the field to choose a user name either by selecting it directly or typing to filter the list of user names further.</value>
  </data>
  <data name="Tooltip_Table_Count" xml:space="preserve">
    <value>Number of interviews currently submitted for this assignment. More interviews may have been created but not synced. Click on any cell to view the associated interviews. Click on the sort icon to sort by count.</value>
  </data>
  <data name="Tooltip_Table_CreatedAt" xml:space="preserve">
    <value>When the assignment was initially created. Click on the sort icon to sort by time.</value>
  </data>
  <data name="Tooltip_Table_IdentifyingQuestions" xml:space="preserve">
    <value>Information that identifies each assignment. These are the answers to questions marked as identifying in Designer.</value>
  </data>
  <data name="Tooltip_Table_InterviewsNeeded" xml:space="preserve">
    <value>Number of interviews needed to complete this assignment.</value>
  </data>
  <data name="Tooltip_Table_Responsible" xml:space="preserve">
    <value>User currently responsible for the assignment. Click sort icon to sort user name.</value>
  </data>
  <data name="Tooltip_Table_Size" xml:space="preserve">
    <value>Maximum number of interviews that may be conducted for this assignment. Click on any cell to change this number. Click on the sort icon to sort by size.</value>
  </data>
  <data name="Tooltip_Table_UpdatedAt" xml:space="preserve">
    <value>When the assignment was last updated. Click on the sort icon to sort by time.</value>
  </data>
  <data name="InvalidSize" xml:space="preserve">
    <value>The Size field must be -1 or more.</value>
  </data>
  <data name="SelectQuestionnaire" xml:space="preserve">
    <value>Select existing questionnaire to upgrade assignments from</value>
  </data>
  <data name="UpgradeDescription" xml:space="preserve">
    <value>Existing not completed assignments are going to be upgraded from selected questionnaire and archived. </value>
  </data>
  <data name="SelectQuestionnaireToUpgradeFrom" xml:space="preserve">
    <value>Select questionnaire to upgrade from</value>
  </data>
  <data name="UpgradeBtn" xml:space="preserve">
    <value>Upgrade</value>
  </data>
  <data name="UpgradeProgressTitle" xml:space="preserve">
    <value>Upgrading assignments from {{from}} to {{to}}</value>
  </data>
  <data name="UpgradeProgressNumbers" xml:space="preserve">
    <value>Upgrading {{processed}} of {{totalCount}}</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="UpgradePreparation" xml:space="preserve">
    <value>Waiting for other upgrades to finish </value>
  </data>
  <data name="UpgradeCancelled" xml:space="preserve">
    <value>Upgrade stopped</value>
  </data>
  <data name="UpgradeProgressDone" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="UpgradeProgressDoneCount" xml:space="preserve">
    <value>Upgraded successfully: {{processed}}</value>
  </data>
  <data name="UpgradeProgressErrorCount" xml:space="preserve">
    <value>Not upgraded: {{count}}</value>
  </data>
  <data name="UpgradeDownloadFailed" xml:space="preserve">
    <value>Download list</value>
  </data>
  <data name="UpgradeProgressDoneTitle" xml:space="preserve">
    <value>Upgrade from {{from}} to {{to}} is finished</value>
  </data>
  <data name="ReceivedByTablet_All" xml:space="preserve">
    <value>Show all</value>
  </data>
  <data name="ReceivedByTablet_Received" xml:space="preserve">
    <value>Received by tablet</value>
  </data>
  <data name="ReceivedByTablet_NotReceived" xml:space="preserve">
    <value>Not received by tablet</value>
  </data>
  <data name="Tooltip_Filter_Received" xml:space="preserve">
    <value>Show only assignments that were or were not received by tablets.</value>
  </data>
  <data name="ReceivedByTablet" xml:space="preserve">
    <value>Received by tablet</value>
  </data>
  <data name="CreatingNewAssignment" xml:space="preserve">
    <value>Create new assignment for questionnaire {{questionnaire}}</value>
  </data>
  <data name="AssignTo" xml:space="preserve">
    <value>Assign to</value>
  </data>
  <data name="Tooltip_Filter_QuestionnaireVersion" xml:space="preserve">
    <value>Select a questionnaire version to see its associated assignments. Select “All versions” to see assignments associated with any version of selected questionnaire.</value>
  </data>
  <data name="ErrorToCreateAssignment" xml:space="preserve">
    <value>Assignment can not be created. </value>
  </data>
</root>
