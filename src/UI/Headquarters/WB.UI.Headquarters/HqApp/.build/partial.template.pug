-
    // this is block of pug functions, that run during template creation
    // html webpack plugin provide several global vars - htmlWebpackPlugin is one of them
    // options - is the same object as passed to plugin in webpack config
    var options = htmlWebpackPlugin.options;

    // for hot reload application should point to hot reload devserver public path, i.e. http://localhost:8080/dist/
    var devPublicPath = options.isHot ? webpackConfig.devServer.publicPath : "";

    // js don't have own trim function
    function join(a, b) {
        if(a.endsWith("/") && b.startsWith("/")) {
            b = b.substr(1)
        }

        return a + b;
    }

    /*
        For hot reload we should not use @Url.Content for proper path generation.

    */
    function urlContent(path, dontUseAssets) {
        var result = dontUseAssets ? path : join(options.assetsPath, path);

        if(options.isHot) {
            return result;
        } else {
            return '@Url.Content("' + result + '")';
        }
    }

    // return C# dictionnay initialization for available locales
    // { { "en", "hq/en.23fabcca.js" }, ... }
    function getLocalesInit() {
        
        var result = Object.keys(options.locales)
            .map(locKey => `{ "${locKey}", "${options.locales[locKey]}" }`)
        return result.join(",")
    }

//- block below with . is a code block that will be rendered as is
//- in this block we init locales list and creating proper `localePath` to current UI language with fallback to EN
.
    @{ 
        var locales = new System.Collections.Generic.Dictionary<string, string> { 
            !{getLocalesInit()}
        };
       
        var current = System.Globalization.CultureInfo.CurrentUICulture.Name.Split('-')[0];
        if (!locales.ContainsKey(current))
        {
            current = "en";
        }
        var localePath = Url.Content("!{options.assetsPath}" + locales[current]);
    }
|
|
script.
    window.CONFIG.basePath = '@Url.Content("~/")';
    window.CONFIG.assetsPath = '!{urlContent(devPublicPath)}';
    window.CONFIG.locale = {
        locale: '@System.Globalization.CultureInfo.CurrentUICulture.Name',
        locales: !{JSON.stringify(options.locales)}
    }
    // JSONP callback to load localization from '@localePath'
    window.__setLocaleData__ = function(data) { window.CONFIG.locale.data = data; }
|
|
//- Tell browswer to preload all script with high priority
//- Chrome/Firefox/Edge will load this script before it's needed, but not execute
link(href!='@Url.Content("~/signalr/hubs")' rel="preload" as="script")
|
|
link(href!='@localePath' rel="preload" as="script")
|
|
link(href!=urlContent(options.manifest) rel="preload" as="script")
|
|
each js in htmlWebpackPlugin.files.js
    link(href!=urlContent(devPublicPath + js) rel="preload" as="script")
|
|
//- localization
script(src='@localePath' type="text/javascript")
|
|
//- manifest - is a path to vendor dll lib
script(src!=urlContent(options.manifest) type="text/javascript")
|
|
each file in htmlWebpackPlugin.files.css
    link(href!=urlContent(devPublicPath + file) rel="stylesheet")
|
|
each js in htmlWebpackPlugin.files.js
    script(src!=urlContent(devPublicPath + js) type="text/javascript")
    |
    |
