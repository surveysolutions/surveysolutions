<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanSynchronize" xml:space="preserve">
    <value>Démarrer la synchronisation</value>
  </data>
  <data name="CensusQuestionnaire" xml:space="preserve">
    <value>&lt;li&gt;&lt;b&gt;{0}&lt;/b&gt; [{1}]&lt;/li&gt;</value>
  </data>
  <data name="DeleteInterviewPackage" xml:space="preserve">
    <value>&lt;li&gt;Supprimer l’entrevue : &lt;a href="{3}"&gt;{0}&lt;/a&gt;, paquet : {1}, index de tri : {2}&lt;/li&gt;</value>
  </data>
  <data name="DeviceCanBeAssignedToInterviewer" xml:space="preserve">
    <value>Appareil pouvant être assignée à l’intervieweur</value>
  </data>
  <data name="DeviceRelinkRequired" xml:space="preserve">
    <value>&lt;font color="orange"&gt;Liez à nouveau requis&lt;/font&gt;</value>
  </data>
  <data name="DeviceUpdateRequired" xml:space="preserve">
    <value>&lt;font color="red"&gt;Mise à jour nécessaire. Version du moteur intervieweur - &lt;b&gt;{0}&lt;/b&gt;&lt;/font&gt;</value>
  </data>
  <data name="EmptyDevice" xml:space="preserve">
    <value>&lt;b&gt;[VIDE PÉRIPHÉRIQUE]&lt;/b&gt;</value>
  </data>
  <data name="GetAttachmentContent" xml:space="preserve">
    <value>Télécharger le contenu des pièces jointes : {0}</value>
  </data>
  <data name="GetCensusQuestionnaires" xml:space="preserve">
    <value>Téléchargez la liste des questionnaires du recensement :&lt;br&gt;&lt;ul&gt;{0}&lt;/ul&gt;</value>
  </data>
  <data name="GetInterview" xml:space="preserve">
    <value>Télécharger interview : &lt;b&gt;{0}&lt;/b&gt;</value>
  </data>
  <data name="GetInterviewer" xml:space="preserve">
    <value>Télécharger de l’information de l’intervieweur.&lt;br&gt;Superviseur : &lt;b&gt;{0}&lt;/b&gt; [{1}]</value>
  </data>
  <data name="GetInterviewPackage" xml:space="preserve">
    <value>Télécharger le paquet entrevue : &lt;b&gt;{0}&lt;/b&gt;</value>
  </data>
  <data name="GetInterviewPackages" xml:space="preserve">
    <value>Télécharger la liste des paquets de l’entrevue.&lt;br&gt;&lt;ul&gt; {1} &lt;/ul&gt; Dernier package de synchronisation : &lt;b&gt;{0}&lt;/b&gt;</value>
  </data>
  <data name="GetInterviews" xml:space="preserve">
    <value>Télécharger la liste des entrevues.&lt;br&gt;&lt;ul&gt; {0} &lt;/ul&gt;</value>
  </data>
  <data name="GetQuestionnaire" xml:space="preserve">
    <value>Télécharger le questionnaire : &lt;b&gt;{0}&lt;/b&gt; [{1}]</value>
  </data>
  <data name="GetQuestionnaireAssembly" xml:space="preserve">
    <value>Télécharger questionnaire assembly : &lt;b&gt;{0}&lt;/b&gt; [{1}]</value>
  </data>
  <data name="GetQuestionnaireAttachments" xml:space="preserve">
    <value>Télécharger des pièces jointes questionnaire : &lt;b&gt;{0}&lt;/b&gt; [{1}]</value>
  </data>
  <data name="InterviewerHasDevice" xml:space="preserve">
    <value>L’intervieweur a dispositif déjà</value>
  </data>
  <data name="InterviewPackageProcessed" xml:space="preserve">
    <value>&lt;font color="green" '=""&gt;Interview de paquet &lt;b&gt;{0}&lt;/b&gt; traitées avec succès&lt;/font&gt;</value>
  </data>
  <data name="InterviewProcessed" xml:space="preserve">
    <value>&lt;font color="green" '=""&gt;Interview de &lt;b&gt;{0}&lt;/b&gt; traitées avec succès&lt;/font&gt;</value>
  </data>
  <data name="LinkToDevice" xml:space="preserve">
    <value>Intervieweur lien vers périphérique</value>
  </data>
  <data name="NoNewInterviewPackagesToDownload" xml:space="preserve">
    <value>Aucun nouveaux forfaits entretien pour télécharger</value>
  </data>
  <data name="PostPackage" xml:space="preserve">
    <value>Télécharger entrevue : &lt;b&gt; &lt;a href="{0}" target="_blank"&gt;{1}&lt;/a&gt;&lt;/b&gt;</value>
  </data>
  <data name="QuestionnaireAssemblyProcessed" xml:space="preserve">
    <value>&lt;font color="green" '=""&gt;Questionnaire Assemblée &lt;b&gt;{0}&lt;/b&gt; [{1}] traitées avec succès&lt;/font&gt;</value>
  </data>
  <data name="QuestionnaireProcessed" xml:space="preserve">
    <value>&lt;font color="green" '=""&gt;Questionnaire &lt;b&gt;{0}&lt;/b&gt; [{1}] traitées avec succès&lt;/font&gt;</value>
  </data>
  <data name="UpdateInterviewPackage" xml:space="preserve">
    <value>&lt;li&gt;Entrevue de mise à jour : &lt;a href="{3}"&gt;{0}&lt;/a&gt;, paquet : {1}, index de tri : {2}&lt;/li&gt;</value>
  </data>
</root>