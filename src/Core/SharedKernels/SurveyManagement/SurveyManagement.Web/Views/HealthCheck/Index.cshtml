@using System.Web.Optimization
@{
    this.ViewBag.Title = "Heath Check Page";
}

<h1 class="page-header">Health check page</h1>

<div>
    <div class="panel-body">
        <div class="well well-sm">Current health check state: &nbsp;<b data-bind="text: status"></b></div>
        <div class="row">
            <div class="col-md-8 col-md-offset-2">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span class="badge" data-bind="text:databaseConnectionStatus"></span>
                        Database connection status
                    </li>
                    <li class="list-group-item">
                        <span class="badge" data-bind="text:eventstoreConnectionStatus"></span>
                        Eventstore connection status
                    </li>
                    <li class="list-group-item">
                        <span class="badge" data-bind="text:numberOfUnhandledPackages"></span>
                        Number of unhandled packages
                    </li>
                    <li class="list-group-item">
                        <span class="badge" data-bind="text:numberOfSyncPackagesWithBigSize"></span>
                        Number of sync packages with size more then 2Mb
                    </li>
                    <li class="list-group-item">
                        <span class="badge" data-bind="text:denidedFoldersStatus"></span>
                        Permissions on write in App_Data folder
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>




@section scripts {

    @Scripts.Render("~/Scripts/viewmodels/pages/healthcheck.js")
    <script type="text/javascript">
        var viewModel = new Supervisor.VM.HealthCheck(
            '@Url.RouteUrl("DefaultApiWithAction", new {httproute = "", controller = "HealthCheckApi", action = "GetVerboseStatus"})');
        viewModel.load();

        setInterval(viewModel.load, 10000);

        ko.applyBindings(viewModel);
    </script>

}