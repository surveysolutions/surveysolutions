// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WB.Core.Infrastructure.Compilation.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class RosterTemplate : RosterTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\npublic class ");
            
            #line 7 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RosterTemplateModel.VariableName));
            
            #line default
            #line hidden
            this.Write("_type : AbstractRosterLevel<");
            
            #line 7 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RosterTemplateModel.VariableName));
            
            #line default
            #line hidden
            this.Write("_type>, IValidatable\r\n        {\r\n            public ");
            
            #line 9 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RosterTemplateModel.VariableName));
            
            #line default
            #line hidden
            this.Write(@"_type(decimal[] rosterVector, Identity[] rosterKey, QuestionnaireLevel parent, Func<Identity[], IEnumerable<IValidatable>> getInstances, Dictionary<Guid, Guid[]> conditionalDependencies)
                : this(rosterVector, rosterKey, getInstances, conditionalDependencies)
            {
                this.@__parent = parent;
            }

            public ");
            
            #line 15 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RosterTemplateModel.VariableName));
            
            #line default
            #line hidden
            this.Write(@"_type(decimal[] rosterVector, Identity[] rosterKey, Func<Identity[], IEnumerable<IValidatable>> getInstances, Dictionary<Guid, Guid[]> conditionalDependencies)
                : base(rosterVector, rosterKey, getInstances, conditionalDependencies)
            {
                
                ");
            
            #line 19 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
foreach (var q in RosterTemplateModel.Questions) 
                    {
            
            #line default
            #line hidden
            this.Write("\r\n                    //EnablementStates.Add(age_state.ItemId, age_state);\r\n     " +
                    "               EnablementStates.Add(");
            
            #line 23 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(".ItemId, ");
            
            #line 23 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_state);        \r\n\r\n                    ");
            
            #line 25 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
if(!string.IsNullOrWhiteSpace(q.Validations))
                    {
            
            #line default
            #line hidden
            this.Write(@"        
                        //generate mandatory
                        //validationExpressions.Add(new Identity(IdOf.name, this.RosterVector), new Func<bool>[] { name_IsMandatory });
                    
                        validationExpressions.Add(new Identity(");
            
            #line 30 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Id));
            
            #line default
            #line hidden
            this.Write(", this.RosterVector), new Func<bool>[] { ");
            
            #line 30 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_IsEnabledIf });              \r\n        \r\n                    ");
            
            #line 32 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 34 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            }\r\n\r\n            //TODO: dynamicly generate reference to the parent a" +
                    "nd it\'s questions\r\n            private QuestionnaireLevel @__parent;\r\n\r\n        " +
                    "    public IValidatable CopyMembers()\r\n            {\r\n                var level " +
                    "= new ");
            
            #line 42 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RosterTemplateModel.VariableName));
            
            #line default
            #line hidden
            this.Write(@"_type(this.RosterVector, this.RosterKey, this.GetInstances, ConditionalDependencies)
                {
                    ValidAnsweredQuestions = new HashSet<Guid>(this.ValidAnsweredQuestions),
                    InvalidAnsweredQuestions = new HashSet<Guid>(this.InvalidAnsweredQuestions),

                ");
            
            #line 47 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
foreach (var q in RosterTemplateModel.Questions) 
                    {
            
            #line default
            #line hidden
            this.Write("        \r\n                        ");
            
            #line 50 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(" = this.@__");
            
            #line 50 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(",\r\n        \r\n                ");
            
            #line 52 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(@"        
                };

                ConditionalDependencies = new Dictionary<Guid, Guid[]>(this.ConditionalDependencies);

                foreach (var state in level.EnablementStates)
                {
                    var originalState = this.EnablementStates[state.Key];
                    state.Value.PreviousState = originalState.PreviousState;
                    state.Value.State = originalState.State;
                }

                return level;
            }

        ");
            
            #line 68 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
foreach (var q in RosterTemplateModel.Questions) 
        {
            
            #line default
            #line hidden
            this.Write("\r\n            //generate according question type\r\n            private long? @__");
            
            #line 72 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n            public long? ");
            
            #line 74 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("\r\n                {\r\n                    get { return ");
            
            #line 76 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_state.State == State.Enabled ? this.@__");
            
            #line 76 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(" : null; }\r\n                    set { this.@__");
            
            #line 77 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(" = value; }\r\n                }\r\n\r\n            private ConditionalState ");
            
            #line 80 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_state = new ConditionalState(");
            
            #line 80 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Id));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n            ");
            
            #line 82 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
if(!string.IsNullOrWhiteSpace(q.Conditions))
            {
            
            #line default
            #line hidden
            this.Write("        \r\n                private bool ");
            
            #line 84 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_IsEnabledIf()\r\n                {\r\n                    return ");
            
            #line 86 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Conditions));
            
            #line default
            #line hidden
            this.Write(";\r\n                }       \r\n        \r\n            ");
            
            #line 89 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n            ");
            
            #line 91 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
if(!string.IsNullOrWhiteSpace(q.Validations))
            {
            
            #line default
            #line hidden
            this.Write("        \r\n                private bool ");
            
            #line 93 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_IsValidIf()\r\n                {\r\n                    return ");
            
            #line 95 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Validations));
            
            #line default
            #line hidden
            this.Write(";\r\n                }       \r\n        \r\n            ");
            
            #line 98 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n\r\n        ");
            
            #line 101 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n                \r\n        //reference to self roster\r\n        public ");
            
            #line 105 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_type[] ");
            
            #line 105 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get\r\n                {\r\n                    var rosters " +
                    "= this.GetInstances(this.RosterKey);\r\n                    return rosters == null" +
                    " ? new ");
            
            #line 110 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_type[0] : rosters.Select(x => x as ");
            
            #line 110 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write(@"_type).ToArray();
                }
            }


            protected override IEnumerable<Action> ConditionExpressions
            {
                get
                {
                    return new[]
                {

                        ");
            
            #line 122 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
foreach (var q in RosterTemplateModel.Questions) 
                    {
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 125 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
if(!string.IsNullOrWhiteSpace(q.Conditions))
                    {
            
            #line default
            #line hidden
            this.Write("        \r\n                        Verifier(");
            
            #line 127 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_IsEnabledIf, ");
            
            #line 127 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_state.ItemId, ");
            
            #line 127 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.VariableName));
            
            #line default
            #line hidden
            this.Write("_state),\r\n                        \r\n                    ");
            
            #line 129 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 131 "C:\Work\WB\Dev\src\Core\Infrastructure\WB.Core.Infrastructure.Compilation\Templates\RosterTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                    //Verifier(age_IsEnabledIf, age_state.ItemId, age_state),\r\n  " +
                    "                  \r\n                };\r\n                }\r\n            }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class RosterTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
