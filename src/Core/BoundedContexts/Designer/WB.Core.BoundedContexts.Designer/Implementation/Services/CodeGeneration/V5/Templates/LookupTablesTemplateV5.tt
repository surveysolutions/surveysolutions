<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #> 
<#@ import namespace="WB.Core.SharedKernels.DataCollection" #> 
using System.Collections.Generic;

namespace WB.Core.SharedKernels.DataCollection.Generated
{
	public static class LookupTables
	{
<#
	foreach (var table in LookupTables) 
    {
#>
		private static readonly Dictionary<decimal, <#= table.TypeName#>> <#= table.TableNameField #>  = new Dictionary<decimal, <#= table.TypeName#>>()
		{
<#
			foreach (var row in table.Rows) 
			{
#>
			{<#= row.RowCode #>m, new <#= table.TypeName#>(<#= row.RowCode #>m, <#= string.Join(",",  row.Variables) #>)  },
<# 
			}
#>
		};

		public static Dictionary<decimal, <#= table.TypeName#>> <#= table.TableName #> 
		{
			get { return <#= table.TableNameField #>; }
		}
<# 
	}
#>
	}

<#
	foreach (var table in LookupTables) 
    {
#>
	public class <#= table.TypeName#>
	{
		public <#= table.TypeName#>(decimal rowcode, <#= string.Join(",",  table.VariableNames.Select(variableName =>"double " + variableName)) #>)
		{
			this.rowcode = rowcode;
<#
		foreach (var variableName in table.VariableNames) 
		{
#>
			this.<#= variableName #> = <#= variableName #>;
<# 
		}
#>
		}
		public decimal rowcode { get; private set;}
<#
		foreach (var variableName in table.VariableNames) 
		{
#>
		public double <#= variableName #> { get; private set;}	
<# 
		}
#>
	}
<# 
	}
#>
}