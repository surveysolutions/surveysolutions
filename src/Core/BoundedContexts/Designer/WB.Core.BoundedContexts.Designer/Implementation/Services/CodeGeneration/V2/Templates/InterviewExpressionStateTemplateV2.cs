// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WB.Core.BoundedContexts.Designer.Implementation.Services.CodeGeneration.V2.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Main.Core.Entities.SubEntities;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class InterviewExpressionStateTemplateV2 : InterviewExpressionStateTemplateV2Base
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Syste" +
                    "m.Text.RegularExpressions;\r\n\r\n ");
            
            #line 13 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var namespaceToInclude in QuestionnaireStructure.Namespaces){
            
            #line default
            #line hidden
            this.Write("\tusing ");
            
            #line 14 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(namespaceToInclude));
            
            #line default
            #line hidden
            this.Write(";\r\n ");
            
            #line 15 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\nnamespace WB.Core.SharedKernels.DataCollection.Generated\r\n{\r\n    public class ");
            
            #line 19 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write(" : AbstractInterviewExpressionStateV2\r\n    ");
            
            #line 20 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var additionInterface in QuestionnaireStructure.AdditionalInterfaces){
            
            #line default
            #line hidden
            this.Write("\t , ");
            
            #line 21 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 22 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t    public ");
            
            #line 25 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("() : base()\r\n        {\r\n            var questionnaireLevelScope = new[] { IdOf.@_" +
                    "_questionnaire };\r\n            var questionnaireIdentityKey = Util.GetRosterKey(" +
                    "questionnaireLevelScope, Util.EmptyRosterVector);\r\n            var questionnaire" +
                    "Level = new ");
            
            #line 29 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.QuestionnaireLevelModel.TypeName));
            
            #line default
            #line hidden
            this.Write(@"(Util.EmptyRosterVector, questionnaireIdentityKey, this.GetRosterInstances, IdOf.conditionalDependencies, IdOf.structuralDependencies, this.InterviewProperties);
            this.InterviewScopes.Add(Util.GetRosterStringKey(questionnaireIdentityKey), questionnaireLevel);				
        }
		

		public ");
            
            #line 34 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("(Dictionary<string, IExpressionExecutableV2> interviewScopes, Dictionary<string, " +
                    "List<string>> siblingRosters, IInterviewProperties interviewProperties)\r\n\t\t :bas" +
                    "e(interviewScopes, siblingRosters, interviewProperties){}\r\n\r\n        public over" +
                    "ride void AddRoster(Guid rosterId, decimal[] outerRosterVector, decimal rosterIn" +
                    "stanceId, int? sortIndex)\r\n        {\r\n            if (!IdOf.parentScopeMap.Conta" +
                    "insKey(rosterId))\r\n            {\r\n                return;\r\n            }\r\n\t\t\t \r\n" +
                    "            decimal[] rosterVector = Util.GetRosterVector(outerRosterVector, ros" +
                    "terInstanceId);\r\n            Guid[] rosterScopeIds = IdOf.parentScopeMap[rosterI" +
                    "d];\r\n            var rosterIdentityKey = Util.GetRosterKey(rosterScopeIds, roste" +
                    "rVector);\r\n            string rosterStringKey = Util.GetRosterStringKey(rosterId" +
                    "entityKey);\r\n\r\n            if (this.InterviewScopes.ContainsKey(rosterStringKey)" +
                    ")\r\n            {\r\n                return;\r\n            }\r\n                      " +
                    "  \r\n            var rosterParentIdentityKey = outerRosterVector.Length == 0\r\n   " +
                    "             ? Util.GetRosterKey(new[] { IdOf.@__questionnaire }, new decimal[0]" +
                    ")\r\n                : Util.GetRosterKey(rosterScopeIds.Shrink(), outerRosterVecto" +
                    "r);\r\n\r\n            var parent = this.InterviewScopes[Util.GetRosterStringKey(ros" +
                    "terParentIdentityKey)];\r\n\r\n            var rosterLevel = parent.CreateChildRoste" +
                    "rInstance(rosterId, rosterVector, rosterIdentityKey);\r\n\t\t\trosterLevel.SetIntervi" +
                    "ewProperties(this.InterviewProperties);\r\n\r\n            this.InterviewScopes.Add(" +
                    "rosterStringKey, rosterLevel);\r\n            this.SetSiblings(rosterIdentityKey, " +
                    "rosterStringKey, sortIndex);\r\n        }\r\n\t\t \r\n\t\t public void UpdateRosterTitle(G" +
                    "uid rosterId, decimal[] outerRosterVector, decimal rosterInstanceId,\r\n          " +
                    "  string rosterTitle)\r\n         {\r\n        }\r\n\t\t \r\n\r\n        public override voi" +
                    "d RemoveRoster(Guid rosterId, decimal[] outerRosterVector, decimal rosterInstanc" +
                    "eId)\r\n        {\r\n            if (!IdOf.parentScopeMap.ContainsKey(rosterId))\r\n  " +
                    "          {\r\n                return;\r\n            }\r\n\r\n            decimal[] ros" +
                    "terVector = Util.GetRosterVector(outerRosterVector, rosterInstanceId);\r\n        " +
                    "    var rosterIdentityKey = Util.GetRosterKey(IdOf.parentScopeMap[rosterId], ros" +
                    "terVector);\r\n            var rosterStringKey = Util.GetRosterStringKey(rosterIde" +
                    "ntityKey);\r\n\r\n            var dependentRosters = this.InterviewScopes.Keys.Where" +
                    "(x => x.StartsWith(rosterStringKey, StringComparison.Ordinal)).ToArray();\r\n\r\n   " +
                    "         foreach (var rosterKey in dependentRosters)\r\n            {\r\n           " +
                    "     this.InterviewScopes.Remove(rosterKey);\r\n                foreach (var sibli" +
                    "ngs in this.SiblingRosters.Values)\r\n                {\r\n                    sibli" +
                    "ngs.Remove(rosterKey);\r\n                }\r\n            }\r\n        }\r\n\r\n\t\tpublic " +
                    "void SetInterviewProperties(IInterviewProperties properties)\r\n        {\r\n       " +
                    "     this.InterviewProperties = properties;\r\n            foreach (var item in th" +
                    "is.InterviewScopes.Values)\r\n            {\r\n                item.SetInterviewProp" +
                    "erties(properties);\r\n            }\r\n        }\r\n\r\n        public override IInterv" +
                    "iewExpressionState Clone()\r\n\t\t{\r\n\t\t\treturn new ");
            
            #line 107 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("(this.InterviewScopes, this.SiblingRosters, this.InterviewProperties);\r\n\t\t}\r\n    " +
                    "    \r\n\t\t");
            
            #line 110 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var additionInterface in QuestionnaireStructure.AdditionalInterfaces){
            
            #line default
            #line hidden
            this.Write("\t    ");
            
            #line 111 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 111 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(".Clone()\r\n        {\r\n            return Clone () as ");
            
            #line 113 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\t\t");
            
            #line 115 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n        public override Dictionary<Guid, Guid[]> GetParentsMap()\r\n        {\r\n  " +
                    "          return IdOf.parentScopeMap;\r\n        }\r\n\r\n\t}\r\n        //generate Quest" +
                    "ionnaireLevel\r\n        ");
            
            #line 124 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
    
            QuestionnaireLevelTemplateV2 questionnairetemplate = CreateQuestionnaireLevelTemplate();
            this.Write(questionnairetemplate.TransformText());                           
         
            
            #line default
            #line hidden
            this.Write("\r\n        //generating rosters\r\n        ");
            
            #line 130 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var rosterGroup in QuestionnaireStructure.RostersGroupedByScope) 
           {
                RosterScopeTemplateV2 template = CreateRosterScopeTemplate(rosterGroup.Value);
                this.Write(template.TransformText());
           }
        
            
            #line default
            #line hidden
            this.Write("\r\n        public static class IdOf\r\n        {\r\n            public static readonly" +
                    " Guid @__questionnaire = Guid.Parse(\"");
            
            #line 139 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.Id));
            
            #line default
            #line hidden
            this.Write("\"); \r\n            //questions\r\n            ");
            
            #line 141 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var q in QuestionnaireStructure.AllQuestions) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 143 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 143 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 144 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            //groups\r\n            ");
            
            #line 146 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var g in QuestionnaireStructure.AllGroups) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 148 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 148 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 149 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            //rosters\r\n            ");
            
            #line 151 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var r in QuestionnaireStructure.AllRosters) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 153 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 153 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 154 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            \r\n            public static readonly Guid[] ");
            
            #line 156 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.QuestionnaireLevelModel.RosterScopeName));
            
            #line default
            #line hidden
            this.Write(" = new[] {@__questionnaire};\r\n\r\n            ");
            
            #line 158 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var r in QuestionnaireStructure.AllRosters)
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid[] ");
            
            #line 160 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.RosterScopeName));
            
            #line default
            #line hidden
            this.Write(" = new[] {");
            
            #line 160 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Join(" ,", r.RosterScope.Select(g => string.Format("Guid.Parse(\"{0}\")", g)).ToArray())));
            
            #line default
            #line hidden
            this.Write("};\r\n            ");
            
            #line 161 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            \r\n            public static Dictionary<Guid, Guid[]> conditionalDepen" +
                    "dencies = new Dictionary<Guid, Guid[]>()\r\n            {            \r\n           " +
                    "     ");
            
            #line 165 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var dependency in QuestionnaireStructure.ConditionalDependencies)
                {
            
            #line default
            #line hidden
            this.Write("                {Guid.Parse(\"");
            
            #line 167 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependency.Key));
            
            #line default
            #line hidden
            this.Write("\"), new Guid[]{\r\n                ");
            
            #line 168 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var dependencyValue in dependency.Value)
                {
            
            #line default
            #line hidden
            this.Write("                    Guid.Parse(\"");
            
            #line 170 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependencyValue));
            
            #line default
            #line hidden
            this.Write("\"),\r\n                ");
            
            #line 171 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("                }},\r\n                ");
            
            #line 173 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            };\r\n\r\n            public static Dictionary<Guid, Guid[]> structuralDe" +
                    "pendencies = new Dictionary<Guid, Guid[]>()\r\n            {\r\n                ");
            
            #line 178 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var dependency in QuestionnaireStructure.StructuralDependencies) 
                {
            
            #line default
            #line hidden
            this.Write("                { Guid.Parse(\"");
            
            #line 180 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependency.Key));
            
            #line default
            #line hidden
            this.Write("\"), new Guid[]{\r\n                ");
            
            #line 181 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var d in dependency.Value)
                {
            
            #line default
            #line hidden
            this.Write("                    Guid.Parse(\"");
            
            #line 183 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d));
            
            #line default
            #line hidden
            this.Write("\"),\r\n                ");
            
            #line 184 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("                }},\r\n                ");
            
            #line 186 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("            };\r\n\r\n            public static Dictionary<Guid, Guid[]> parentScopeM" +
                    "ap = new Dictionary<Guid, Guid[]>\r\n            {\r\n                //questions\r\n " +
                    "               ");
            
            #line 192 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var q in QuestionnaireStructure.AllQuestions) 
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 194 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 194 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 195 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("                //groups\r\n                ");
            
            #line 197 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var g in QuestionnaireStructure.AllGroups) 
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 199 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 199 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 200 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("                //rosters\r\n                ");
            
            #line 202 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
foreach (var r in QuestionnaireStructure.AllRosters)
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 204 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 204 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 205 "C:\Work\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\V2\Templates\InterviewExpressionStateTemplateV2.tt"
 }
            
            #line default
            #line hidden
            this.Write("                                        \r\n            };\r\n        }\r\n    \r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class InterviewExpressionStateTemplateV2Base
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
