// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WB.Core.BoundedContexts.Designer.Implementation.Services.CodeGeneration.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Main.Core.Entities.SubEntities;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class InterviewExpressionStateTemplate : InterviewExpressionStateTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Syste" +
                    "m.Text.RegularExpressions;\r\n\r\n ");
            
            #line 13 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var namespaceToInclude in QuestionnaireStructure.Namespaces){
            
            #line default
            #line hidden
            this.Write("\tusing ");
            
            #line 14 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(namespaceToInclude));
            
            #line default
            #line hidden
            this.Write(";\r\n ");
            
            #line 15 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\nnamespace WB.Core.SharedKernels.DataCollection.Generated\r\n{\r\n    public class ");
            
            #line 19 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write(" : AbstractInterviewExpressionState\r\n\t ");
            
            #line 20 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var additionInterface in QuestionnaireStructure.AdditionalInterfaces){
            
            #line default
            #line hidden
            this.Write("\t , ");
            
            #line 21 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 22 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\r\n    {\r\n        public ");
            
            #line 25 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("() \r\n        {\r\n            var questionnaireLevelScope = new[] { IdOf.@__questio" +
                    "nnaire };\r\n            var questionnaireIdentityKey = Util.GetRosterKey(question" +
                    "naireLevelScope, Util.EmptyRosterVector);\r\n            var questionnaireLevel = " +
                    "new ");
            
            #line 29 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.QuestionnaireLevelModel.TypeName));
            
            #line default
            #line hidden
            this.Write(@"(Util.EmptyRosterVector, questionnaireIdentityKey, this.GetRosterInstances, IdOf.conditionalDependencies, IdOf.structuralDependencies);
            this.InterviewScopes.Add(Util.GetRosterStringKey(questionnaireIdentityKey), questionnaireLevel);
        }

        private ");
            
            #line 33 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("(Dictionary<string, IExpressionExecutable> interviewScopes, Dictionary<string, Li" +
                    "st<string>> siblingRosters)\r\n        {\r\n            var newScopes = interviewSco" +
                    "pes.ToDictionary(interviewScope => interviewScope.Key, interviewScope => intervi" +
                    "ewScope.Value.CopyMembers(this.GetRosterInstances));\r\n\r\n            var newSibli" +
                    "ngRosters = siblingRosters\r\n                .ToDictionary(\r\n                    " +
                    "interviewScope => interviewScope.Key,\r\n                    interviewScope => new" +
                    " List<string>(interviewScope.Value)); \r\n\r\n            //set parents\r\n           " +
                    " foreach (var interviewScope in interviewScopes)\r\n            {\r\n               " +
                    " var parent = interviewScope.Value.GetParent();\r\n                if (parent != n" +
                    "ull)\r\n                    newScopes[interviewScope.Key].SetParent(newScopes[Util" +
                    ".GetRosterStringKey(parent.GetRosterKey())]);\r\n            }\r\n\r\n            this" +
                    ".InterviewScopes = newScopes;\r\n            this.SiblingRosters = newSiblingRoste" +
                    "rs;\r\n        }\r\n\r\n        public override void AddRoster(Guid rosterId, decimal[" +
                    "] outerRosterVector, decimal rosterInstanceId, int? sortIndex)\r\n        {\r\n     " +
                    "       if (!IdOf.parentScopeMap.ContainsKey(rosterId))\r\n            {\r\n         " +
                    "       return;\r\n            }\r\n\t\t\t \r\n            decimal[] rosterVector = Util.G" +
                    "etRosterVector(outerRosterVector, rosterInstanceId);\r\n            Guid[] rosterS" +
                    "copeIds = IdOf.parentScopeMap[rosterId];\r\n            var rosterIdentityKey = Ut" +
                    "il.GetRosterKey(rosterScopeIds, rosterVector);\r\n            string rosterStringK" +
                    "ey = Util.GetRosterStringKey(rosterIdentityKey);\r\n\r\n            if (this.Intervi" +
                    "ewScopes.ContainsKey(rosterStringKey))\r\n            {\r\n                return;\r\n" +
                    "            }\r\n                        \r\n            var rosterParentIdentityKey" +
                    " = outerRosterVector.Length == 0\r\n                ? Util.GetRosterKey(new[] { Id" +
                    "Of.@__questionnaire }, new decimal[0])\r\n                : Util.GetRosterKey(rost" +
                    "erScopeIds.Shrink(), outerRosterVector);\r\n\r\n            var parent = this.Interv" +
                    "iewScopes[Util.GetRosterStringKey(rosterParentIdentityKey)];\r\n\r\n            var " +
                    "rosterLevel = parent.CreateChildRosterInstance(rosterId, rosterVector, rosterIde" +
                    "ntityKey);\r\n\r\n            this.InterviewScopes.Add(rosterStringKey, rosterLevel)" +
                    ";\r\n            this.SetSiblings(rosterIdentityKey, rosterStringKey);\r\n        }\r" +
                    "\n\r\n\t\tpublic void UpdateRosterTitle(Guid rosterId, decimal[] outerRosterVector, d" +
                    "ecimal rosterInstanceId, string rosterTitle)\r\n        {\r\n        }\r\n\r\n        pu" +
                    "blic override void RemoveRoster(Guid rosterId, decimal[] outerRosterVector, deci" +
                    "mal rosterInstanceId)\r\n        {\r\n            if (!IdOf.parentScopeMap.ContainsK" +
                    "ey(rosterId))\r\n            {\r\n                return;\r\n            }\r\n\r\n        " +
                    "    decimal[] rosterVector = Util.GetRosterVector(outerRosterVector, rosterInsta" +
                    "nceId);\r\n            var rosterIdentityKey = Util.GetRosterKey(IdOf.parentScopeM" +
                    "ap[rosterId], rosterVector);\r\n            \r\n            var dependentRosters = t" +
                    "his.InterviewScopes.Keys.Where(x => x.StartsWith(Util.GetRosterStringKey((roster" +
                    "IdentityKey)))).ToArray();\r\n            \r\n            foreach (var rosterKey in " +
                    "dependentRosters)\r\n            {\r\n                this.InterviewScopes.Remove(ro" +
                    "sterKey);\r\n                foreach (var siblings in this.SiblingRosters.Values)\r" +
                    "\n                {\r\n                    siblings.Remove(rosterKey);\r\n           " +
                    "     }\r\n            }\r\n        }\r\n\r\n        public override void UpdateNumericIn" +
                    "tegerAnswer(Guid questionId, decimal[] rosterVector, long? answer)\r\n        {\r\n " +
                    "           var targetLevel = this.GetRosterByIdAndVector(questionId, rosterVecto" +
                    "r);\r\n            if (targetLevel == null) return;\r\n\r\n            targetLevel.Upd" +
                    "ateNumericIntegerAnswer(questionId, answer);\r\n        }\r\n\r\n        public overri" +
                    "de void UpdateNumericRealAnswer(Guid questionId, decimal[] rosterVector, double?" +
                    " answer)\r\n        {\r\n            var targetLevel = this.GetRosterByIdAndVector(q" +
                    "uestionId, rosterVector);\r\n            if (targetLevel == null) return;\r\n\r\n     " +
                    "       targetLevel.UpdateNumericRealAnswer(questionId, answer);\r\n        }\r\n\r\n  " +
                    "      public override void UpdateDateAnswer(Guid questionId, decimal[] rosterVec" +
                    "tor, DateTime? answer)\r\n        {\r\n            var targetLevel = this.GetRosterB" +
                    "yIdAndVector(questionId, rosterVector);\r\n            if (targetLevel == null) re" +
                    "turn;\r\n\r\n            targetLevel.UpdateDateTimeAnswer(questionId, answer);\r\n    " +
                    "    }\r\n\r\n        public override void UpdateMediaAnswer(Guid questionId, decimal" +
                    "[] rosterVector, string answer)\r\n        {\r\n            var targetLevel = this.G" +
                    "etRosterByIdAndVector(questionId, rosterVector);\r\n            if (targetLevel ==" +
                    " null) return;\r\n\r\n            targetLevel.UpdateMediaAnswer(questionId, answer);" +
                    "\r\n        }\r\n\r\n        public override void UpdateTextAnswer(Guid questionId, de" +
                    "cimal[] rosterVector, string answer)\r\n        {\r\n            var targetLevel = t" +
                    "his.GetRosterByIdAndVector(questionId, rosterVector);\r\n            if (targetLev" +
                    "el == null) return;\r\n\r\n            targetLevel.UpdateTextAnswer(questionId, answ" +
                    "er);\r\n        }\r\n        \r\n        public override void UpdateQrBarcodeAnswer(Gu" +
                    "id questionId, decimal[] rosterVector, string answer)\r\n        {\r\n            va" +
                    "r targetLevel = this.GetRosterByIdAndVector(questionId, rosterVector);\r\n        " +
                    "    if (targetLevel == null) return;\r\n\r\n            targetLevel.UpdateQrBarcodeA" +
                    "nswer(questionId, answer);\r\n        }\r\n\r\n        public override void UpdateSing" +
                    "leOptionAnswer(Guid questionId, decimal[] rosterVector, decimal? answer)\r\n      " +
                    "  {\r\n            var targetLevel = this.GetRosterByIdAndVector(questionId, roste" +
                    "rVector);\r\n            if (targetLevel == null) return;\r\n\r\n            targetLev" +
                    "el.UpdateSingleOptionAnswer(questionId, answer);\r\n        }\r\n\r\n        public ov" +
                    "erride void UpdateMultiOptionAnswer(Guid questionId, decimal[] rosterVector, dec" +
                    "imal[] answer)\r\n        {\r\n            var targetLevel = this.GetRosterByIdAndVe" +
                    "ctor(questionId, rosterVector);\r\n            if (targetLevel == null) return;\r\n\r" +
                    "\n            targetLevel.UpdateMultiOptionAnswer(questionId, answer);\r\n        }" +
                    "\r\n\r\n        public override void UpdateGeoLocationAnswer(Guid questionId, decima" +
                    "l[] rosterVector, double latitude, double longitude, double accuracy, double alt" +
                    "itude)\r\n        {\r\n            var targetLevel = this.GetRosterByIdAndVector(que" +
                    "stionId, rosterVector);\r\n            if (targetLevel == null) return;\r\n\r\n       " +
                    "     targetLevel.UpdateGeoLocationAnswer(questionId, latitude,  longitude,  accu" +
                    "racy, altitude);\r\n        }\r\n\r\n        public override void UpdateTextListAnswer" +
                    "(Guid questionId, decimal[] rosterVector, Tuple<decimal, string>[] answers)\r\n   " +
                    "     {\r\n            var targetLevel = this.GetRosterByIdAndVector(questionId, ro" +
                    "sterVector);\r\n            if (targetLevel == null) return;\r\n\r\n            target" +
                    "Level.UpdateTextListAnswer(questionId, answers);\r\n        }\r\n\r\n        public ov" +
                    "erride void UpdateLinkedSingleOptionAnswer(Guid questionId, decimal[] rosterVect" +
                    "or, decimal[] selectedPropagationVector)\r\n        {\r\n            var targetLevel" +
                    " = this.GetRosterByIdAndVector(questionId, rosterVector);\r\n            if (targe" +
                    "tLevel == null) return;\r\n            \r\n            targetLevel.UpdateLinkedSingl" +
                    "eOptionAnswer(questionId, selectedPropagationVector);\r\n        }\r\n\r\n        publ" +
                    "ic override void UpdateLinkedMultiOptionAnswer(Guid questionId, decimal[] roster" +
                    "Vector, decimal[][] answer)\r\n        {\r\n            var targetLevel = this.GetRo" +
                    "sterByIdAndVector(questionId, rosterVector);\r\n            if (targetLevel == nul" +
                    "l) return;\r\n\r\n            targetLevel.UpdateLinkedMultiOptionAnswer(questionId, " +
                    "answer);\r\n        }\r\n        \r\n        public override Dictionary<Guid, Guid[]> " +
                    "GetParentsMap()\r\n        {\r\n            return IdOf.parentScopeMap;\r\n        }\r\n" +
                    "\r\n\t\tpublic override IInterviewExpressionState Clone ()\r\n        {\r\n            r" +
                    "eturn new ");
            
            #line 212 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.ClassName));
            
            #line default
            #line hidden
            this.Write("(this.InterviewScopes, this.SiblingRosters);\r\n        }\r\n\r\n\t    ");
            
            #line 215 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var additionInterface in QuestionnaireStructure.AdditionalInterfaces){
            
            #line default
            #line hidden
            this.Write("\t    ");
            
            #line 216 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 216 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(".Clone()\r\n        {\r\n            return Clone () as ");
            
            #line 218 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(additionInterface));
            
            #line default
            #line hidden
            this.Write(";\r\n        }\r\n\t\t");
            
            #line 220 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("    }\r\n        //generate QuestionnaireLevel\r\n        ");
            
            #line 223 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
    
            QuestionnaireLevelTemplate questionnairetemplate = CreateQuestionnaireLevelTemplate();
            this.Write(questionnairetemplate.TransformText());                           
         
            
            #line default
            #line hidden
            this.Write("\r\n        //generating rosters\r\n        ");
            
            #line 229 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var rosterGroup in QuestionnaireStructure.RostersGroupedByScope) 
           {
                RosterScopeTemplate template = CreateRosterScopeTemplate(rosterGroup.Value);
                this.Write(template.TransformText());
           }
        
            
            #line default
            #line hidden
            this.Write("\r\n        public static class IdOf\r\n        {\r\n            public static readonly" +
                    " Guid @__questionnaire = Guid.Parse(\"");
            
            #line 238 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.Id));
            
            #line default
            #line hidden
            this.Write("\"); \r\n            //questions\r\n            ");
            
            #line 240 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var q in QuestionnaireStructure.AllQuestions) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 242 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 242 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 243 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            //groups\r\n            ");
            
            #line 245 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var g in QuestionnaireStructure.AllGroups) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 247 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 247 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 248 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            //rosters\r\n            ");
            
            #line 250 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var r in QuestionnaireStructure.AllRosters) 
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid ");
            
            #line 252 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.IdName));
            
            #line default
            #line hidden
            this.Write(" = Guid.Parse(\"");
            
            #line 252 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.Id));
            
            #line default
            #line hidden
            this.Write("\");\r\n            ");
            
            #line 253 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            \r\n            public static readonly Guid[] ");
            
            #line 255 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QuestionnaireStructure.QuestionnaireLevelModel.RosterScopeName));
            
            #line default
            #line hidden
            this.Write(" = new[] {@__questionnaire};\r\n\r\n            ");
            
            #line 257 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var r in QuestionnaireStructure.AllRosters)
            {
            
            #line default
            #line hidden
            this.Write("            public static readonly Guid[] ");
            
            #line 259 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.RosterScopeName));
            
            #line default
            #line hidden
            this.Write(" = new[] {");
            
            #line 259 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(String.Join(" ,", r.RosterScope.Select(g => string.Format("Guid.Parse(\"{0}\")", g)).ToArray())));
            
            #line default
            #line hidden
            this.Write("};\r\n            ");
            
            #line 260 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            \r\n            public static Dictionary<Guid, Guid[]> conditionalDepen" +
                    "dencies = new Dictionary<Guid, Guid[]>()\r\n            {            \r\n           " +
                    "     ");
            
            #line 264 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var dependency in QuestionnaireStructure.ConditionalDependencies)
                {
            
            #line default
            #line hidden
            this.Write("                {Guid.Parse(\"");
            
            #line 266 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependency.Key));
            
            #line default
            #line hidden
            this.Write("\"), new Guid[]{\r\n                ");
            
            #line 267 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var dependencyValue in dependency.Value)
                {
            
            #line default
            #line hidden
            this.Write("                    Guid.Parse(\"");
            
            #line 269 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependencyValue));
            
            #line default
            #line hidden
            this.Write("\"),\r\n                ");
            
            #line 270 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                }},\r\n                ");
            
            #line 272 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            };\r\n\r\n            public static Dictionary<Guid, Guid[]> structuralDe" +
                    "pendencies = new Dictionary<Guid, Guid[]>()\r\n            {\r\n                ");
            
            #line 277 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var dependency in QuestionnaireStructure.StructuralDependencies) 
                {
            
            #line default
            #line hidden
            this.Write("                { Guid.Parse(\"");
            
            #line 279 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dependency.Key));
            
            #line default
            #line hidden
            this.Write("\"), new Guid[]{\r\n                ");
            
            #line 280 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var d in dependency.Value)
                {
            
            #line default
            #line hidden
            this.Write("                    Guid.Parse(\"");
            
            #line 282 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d));
            
            #line default
            #line hidden
            this.Write("\"),\r\n                ");
            
            #line 283 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                }},\r\n                ");
            
            #line 285 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("            };\r\n\r\n            public static Dictionary<Guid, Guid[]> parentScopeM" +
                    "ap = new Dictionary<Guid, Guid[]>\r\n            {\r\n                //questions\r\n " +
                    "               ");
            
            #line 291 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var q in QuestionnaireStructure.AllQuestions) 
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 293 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 293 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(q.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 294 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                //groups\r\n                ");
            
            #line 296 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var g in QuestionnaireStructure.AllGroups) 
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 298 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 298 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(g.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 299 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                //rosters\r\n                ");
            
            #line 301 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
foreach (var r in QuestionnaireStructure.AllRosters)
                {
            
            #line default
            #line hidden
            this.Write("                {");
            
            #line 303 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.IdName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 303 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(r.RosterScopeName));
            
            #line default
            #line hidden
            this.Write("},\r\n                ");
            
            #line 304 "D:\surveysolutions\src\Core\BoundedContexts\Designer\WB.Core.BoundedContexts.Designer\Implementation\Services\CodeGeneration\Templates\InterviewExpressionStateTemplate.tt"
 }
            
            #line default
            #line hidden
            this.Write("                                        \r\n            };\r\n        }\r\n    \r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class InterviewExpressionStateTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
