<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Appendix_Conditions" xml:space="preserve">
    <value>附录{0}{1}的启用条件</value>
  </data>
  <data name="Appendix_Instructions" xml:space="preserve">
    <value>附录{0}{1}的说明</value>
  </data>
  <data name="Appendix_OptionFilters" xml:space="preserve">
    <value>附录{0}{1}的选项筛选器</value>
  </data>
  <data name="Appendix_Options" xml:space="preserve">
    <value>附录{0}{1}的选项</value>
  </data>
  <data name="Appendix_Validations" xml:space="preserve">
    <value>附录{0}{1}的验证性条件和信息</value>
  </data>
  <data name="Appendix_Variables" xml:space="preserve">
    <value>附录{0}{1}的变量</value>
  </data>
  <data name="AppendixLink" xml:space="preserve">
    <value>还有{0}的其它符号{1}</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>问卷由{0}创建</value>
  </data>
  <data name="EnablementCondition" xml:space="preserve">
    <value>启用的条件：</value>
  </data>
  <data name="LastEdited" xml:space="preserve">
    <value>{0}最后编辑了{1}</value>
  </data>
  <data name="LastModifiedBy" xml:space="preserve">
    <value>由{0}最后修改</value>
  </data>
  <data name="Legend" xml:space="preserve">
    <value>图例</value>
  </data>
  <data name="NeverEdited" xml:space="preserve">
    <value>{0}（从未被编辑）</value>
  </data>
  <data name="NotShared" xml:space="preserve">
    <value>从未被分享</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>选项：</value>
  </data>
  <data name="PdfLegend" xml:space="preserve">
    <value>图例和结构信息在本文件中</value>
  </data>
  <data name="QuestionScope_Hidden" xml:space="preserve">
    <value>隐藏</value>
  </data>
  <data name="QuestionScope_Identifying" xml:space="preserve">
    <value>识别型</value>
  </data>
  <data name="QuestionScope_Supervisor" xml:space="preserve">
    <value>监督员</value>
  </data>
  <data name="QuestionType_Area" xml:space="preserve">
    <value>范围</value>
  </data>
  <data name="QuestionType_Audio" xml:space="preserve">
    <value>录音</value>
  </data>
  <data name="QuestionType_Barcode" xml:space="preserve">
    <value>条形码</value>
  </data>
  <data name="QuestionType_Cascading" xml:space="preserve">
    <value>级联中</value>
  </data>
  <data name="QuestionType_Combobox" xml:space="preserve">
    <value>复选框</value>
  </data>
  <data name="QuestionType_CurrentTime" xml:space="preserve">
    <value>时间：实时时间</value>
  </data>
  <data name="QuestionType_Date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="QuestionType_Decimal" xml:space="preserve">
    <value>十进制</value>
  </data>
  <data name="QuestionType_GPS" xml:space="preserve">
    <value>GPS</value>
  </data>
  <data name="QuestionType_Integer" xml:space="preserve">
    <value>整数</value>
  </data>
  <data name="QuestionType_Linked" xml:space="preserve">
    <value>逻辑连接</value>
  </data>
  <data name="QuestionType_List" xml:space="preserve">
    <value>列表型</value>
  </data>
  <data name="QuestionType_MultiSelect" xml:space="preserve">
    <value>多选型</value>
  </data>
  <data name="QuestionType_Numeric" xml:space="preserve">
    <value>数值型：</value>
  </data>
  <data name="QuestionType_Ordered" xml:space="preserve">
    <value>顺序型</value>
  </data>
  <data name="QuestionType_Picture" xml:space="preserve">
    <value>图片型</value>
  </data>
  <data name="QuestionType_SingleSelect" xml:space="preserve">
    <value>单选型</value>
  </data>
  <data name="QuestionType_Text" xml:space="preserve">
    <value>文本型</value>
  </data>
  <data name="QuestionType_YesNo" xml:space="preserve">
    <value>是/否型</value>
  </data>
  <data name="Roster" xml:space="preserve">
    <value>二维表：</value>
  </data>
  <data name="Roster_GeneretedByFixedList" xml:space="preserve">
    <value>由固定的列表生产</value>
  </data>
  <data name="Roster_GeneretedByQuestion" xml:space="preserve">
    <value>由{0}的问题{1}生成</value>
  </data>
  <data name="RosterType_List" xml:space="preserve">
    <value>列表型</value>
  </data>
  <data name="RosterType_Multi" xml:space="preserve">
    <value>多选型</value>
  </data>
  <data name="RosterType_Numeric" xml:space="preserve">
    <value>数值型</value>
  </data>
  <data name="Scope" xml:space="preserve">
    <value>范围：{0}</value>
  </data>
  <data name="SharedWith" xml:space="preserve">
    <value>分享给：</value>
  </data>
  <data name="Stat_NoQuestions" xml:space="preserve">
    <value>无问题</value>
  </data>
  <data name="Stat_NoRosters" xml:space="preserve">
    <value>无二维表</value>
  </data>
  <data name="Stat_NoSubsections" xml:space="preserve">
    <value>无子模块</value>
  </data>
  <data name="Stat_Questions" xml:space="preserve">
    <value>问题：{0}</value>
  </data>
  <data name="Stat_QuestionsWithConditions" xml:space="preserve">
    <value>问题带有启用条件：{0}</value>
  </data>
  <data name="Stat_QuestionsWithValidation" xml:space="preserve">
    <value>问题带有验证条件：{0}</value>
  </data>
  <data name="Stat_Rosters" xml:space="preserve">
    <value>二维表：{0}</value>
  </data>
  <data name="Stat_Sections" xml:space="preserve">
    <value>问卷模块：{0}</value>
  </data>
  <data name="Stat_StaticTexts" xml:space="preserve">
    <value>静态文本:{0}</value>
  </data>
  <data name="Stat_Subsections" xml:space="preserve">
    <value>问卷子模块：{0}</value>
  </data>
  <data name="Stat_Variables" xml:space="preserve">
    <value>变量：{0}</value>
  </data>
  <data name="StaticText" xml:space="preserve">
    <value>静态文本</value>
  </data>
  <data name="ValidationCondition" xml:space="preserve">
    <value>验证条件：</value>
  </data>
  <data name="ValidationMessage" xml:space="preserve">
    <value>验证信息：</value>
  </data>
  <data name="Variable" xml:space="preserve">
    <value>变量</value>
  </data>
</root>