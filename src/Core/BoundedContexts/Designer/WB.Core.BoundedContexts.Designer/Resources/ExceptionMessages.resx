<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CantBeLinkedAndCascadingAtSameTime" xml:space="preserve">
    <value>Question can't be linked and cascading at the same time.</value>
  </data>
  <data name="CantRemoveParentQuestionInCascading" xml:space="preserve">
    <value>Question that is used as parent in cascading dropdowns cant be removed before all child questions are removed.</value>
  </data>
  <data name="CantRemoveSectionParentQuestionInCascading" xml:space="preserve">
    <value>Sub-section or roster containing question that is used as parent for cascading combo box cannot be removed before all child questions are removed.</value>
  </data>
  <data name="CascadingCantHaveConditionExpression" xml:space="preserve">
    <value>Cascading questions can't have enabling condition.</value>
  </data>
  <data name="CascadingCantHaveValidationExpression" xml:space="preserve">
    <value>Cascading questions can't have validation condition.</value>
  </data>
  <data name="CategoricalCascadingOptionsCantContainsEmptyParentValueField" xml:space="preserve">
    <value>Options in cascading question can not have empty ParentValue column.</value>
  </data>
  <data name="CategoricalCascadingOptionsCantContainsNotDecimalParentValueField" xml:space="preserve">
    <value>Options in cascading question can not have not numeric value in ParentValue column.</value>
  </data>
  <data name="CategoricalCascadingOptionsContainsNotUniqueTitleAndParentValuePair" xml:space="preserve">
    <value>There is at least one duplicate of Title + Parent Value pairs. List of options should not contain any duplicates of such type.</value>
  </data>
  <data name="LookupTableAlreadyExist" xml:space="preserve">
    <value>Lookup table with such is is already exist.</value>
  </data>
  <data name="LookupTableIsAbsent" xml:space="preserve">
    <value>Lookup table with such is is absent.</value>
  </data>
  <data name="LookupTables_cant_has_empty_content" xml:space="preserve">
    <value>File with no data can not be loaded</value>
  </data>
  <data name="LookupTables_data_value_cannot_be_parsed" xml:space="preserve">
    <value>Value {0} can not be parsed as decimal number. Column {1}, row {2}.</value>
  </data>
  <data name="LookupTables_empty_or_invalid_header_are_not_allowed" xml:space="preserve">
    <value>Empty or invalid headers are not allowed</value>
  </data>
  <data name="LookupTables_rowcode_column_is_mandatory" xml:space="preserve">
    <value>Mandatory rowcode column is missing</value>
  </data>
  <data name="LookupTables_rowcode_values_must_be_unique" xml:space="preserve">
    <value>Rowcode values must be unique</value>
  </data>
  <data name="LookupTables_rowcode_value_cannot_be_parsed" xml:space="preserve">
    <value>Value {0} can not be parsed as long integer number. Column {1}, row {2}.</value>
  </data>
  <data name="LookupTables_too_many_columns" xml:space="preserve">
    <value>Too many columns in uploaded file. Max columns count is {0}</value>
  </data>
  <data name="LookupTables_too_many_rows" xml:space="preserve">
    <value>Max rows count limit ({0} rows) was exceeded.</value>
  </data>
  <data name="MacroAlreadyExist" xml:space="preserve">
    <value>Macro with such is is already exist.</value>
  </data>
  <data name="MacroContentIsEmpty" xml:space="preserve">
    <value>Macro can not have empty content.</value>
  </data>
  <data name="MacroIsAbsent" xml:space="preserve">
    <value>Macro with such is is absent.</value>
  </data>
  <data name="QuestionOrRosterIdentifierIsMissing" xml:space="preserve">
    <value>Identifier '{0}' from expression '{1}' is not valid question or roster identifier. Question or roster with such an identifier is missing.</value>
  </data>
  <data name="ShouldCascadeFromExistingQuestion" xml:space="preserve">
    <value>Question to cascade from should exist in questionnaire.</value>
  </data>
  <data name="LookupTables_duplicating_headers_are_not_allowed" xml:space="preserve">
    <value>Headers with the same name are not allowed</value>
  </data>
</root>