<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Extensions.NamedScope</name>
    </assembly>
    <members>
        <member name="T:Ninject.Extensions.NamedScope.DisposeNotifyingObject">
            <summary>
            An object that notifies when ti is disposed.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.DisposeNotifyingObject.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:Ninject.Extensions.NamedScope.DisposeNotifyingObject.Disposed">
            <summary>
            Occurs when the object is disposed.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeActivationStrategy">
            <summary>
            Activation strategy that creates a reference from the owner to the named scopes.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeActivationStrategy.Activate(Ninject.Activation.IContext,Ninject.Activation.InstanceReference)">
            <summary>
            Activates the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="reference">The reference.</param>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods">
            <summary>
            Extension methods for the named scope module.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.InNamedScope``1(Ninject.Syntax.IBindingInSyntax{``0},System.String)">
            <summary>
            Defines that a binding is in a named scope.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The In syntax.</param>
            <param name="scopeParameterName">Name of the scope parameter.</param>
            <returns>The Named syntax.</returns>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.InParentScope``1(Ninject.Syntax.IBindingInSyntax{``0})">
            <summary>
            Defines that a binding is in the scope of its target.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The In syntax.</param>
            <returns>The Named syntax.</returns>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.InCallScope``1(Ninject.Syntax.IBindingInSyntax{``0})">
            <summary>
            Defines that a binding is in the scope of its target.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The In syntax.</param>
            <returns>The Named syntax.</returns>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.DefinesNamedScope``1(Ninject.Syntax.IBindingOnSyntax{``0},System.String)">
            <summary>
            Defines the a binding defines a named scope.
            </summary>
            <typeparam name="T">The type of the binding.</typeparam>
            <param name="syntax">The syntax.</param>
            <param name="scopeName">The name of the scope.</param>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.GetScope(Ninject.Activation.IContext,System.String)">
            <summary>
            Gets a named scope from the request.
            </summary>
            <param name="context">The context.</param>
            <param name="scopeParameterName">Name of the scope parameter.</param>
            <returns>The scope.</returns>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeExtensionMethods.GetNamedScopeParameter(Ninject.Activation.IContext,System.String)">
            <summary>
            Gets a named scope parameter from a context.
            </summary>
            <param name="context">The context.</param>
            <param name="scopeParameterName">Name of the scope parameter.</param>
            <returns>The requested parameter of null if it is not found.</returns>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeModule">
            <summary>
            This module provides the definition of named scopes.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeModule.Load">
            <summary>
            Loads this instance.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeModule.GetNamedScope(Ninject.Activation.IContext)">
            <summary>
            Gets the named scope.
            </summary>
            <param name="context">The context.</param>
            <returns>The scope for a named scope reference.</returns>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeParameter">
            <summary>
            Parameter for defining that an object defines a named scope.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.NamedScope.NamedScopeParameter"/> class.
            </summary>
            <param name="name">The name of the scope.</param>
        </member>
        <member name="P:Ninject.Extensions.NamedScope.NamedScopeParameter.Scope">
            <summary>
            Gets the scope object.
            </summary>
            <value>The scope object.</value>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeReference">
            <summary>
            References a scope object. The reference its self has the owner of the scope as scope.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.NamedScope.NamedScopeReference.scope">
            <summary>
            The scope object.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeReference.#ctor(System.IDisposable)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.NamedScope.NamedScopeReference"/> class.
            </summary>
            <param name="scope">The scope object.</param>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeReference.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.NamedScopeReferenceScopeParameter">
            <summary>
            Parameter to pass the scope to <see cref="T:Ninject.Extensions.NamedScope.NamedScopeReference"/> when it is created.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.NamedScope.NamedScopeReferenceScopeParameter.scope">
            <summary>
            Weak reference to the scope
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.NamedScopeReferenceScopeParameter.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.NamedScope.NamedScopeReferenceScopeParameter"/> class.
            </summary>
            <param name="scope">The scope.</param>
        </member>
        <member name="P:Ninject.Extensions.NamedScope.NamedScopeReferenceScopeParameter.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.ScopeDisposedException">
            <summary>
            This exception is thrown when a binding tries to use a scope that already has been disposed.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.ScopeDisposedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.NamedScope.ScopeDisposedException"/> class.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.NamedScope.UnknownScopeException">
            <summary>
            This exception is thrown when a binding requests a scope that is not defined in the current scope.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.NamedScope.UnknownScopeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.NamedScope.UnknownScopeException"/> class.
            </summary>
            <param name="scopeName">Name of the scope.</param>
        </member>
    </members>
</doc>
