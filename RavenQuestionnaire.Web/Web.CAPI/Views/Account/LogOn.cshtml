@using Web.CAPI.Models
@model LogOnModel
@{
    ViewBag.Title = "Log On";
}
<div data-role="panel" data-id="main">
    <!-- Start of second page -->
    <div data-role="page" id="main">
        <div data-role="header" data-theme="b">
            <h1>Log in</h1>
        </div>
        <div data-role="content">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="ui-body ui-body-e">
                    <h4>
                        @Html.ValidationSummary("Login was unsuccessful. Please correct the errors and try again.")
                    </h4>
                </div>
            }
            @using (Html.BeginForm("LogOn", "Account", FormMethod.Post, new {data_ajax = "false"}))
            {
                <ul data-role="listview" data-inset="true">
                    <li data-role="fieldcontain">
                        @Html.LabelFor(m => m.UserName)
                        @Html.TextBoxFor(m => m.UserName, new {})
                        @Html.ValidationMessageFor(m => m.UserName)
                    </li>
                    <li data-role="fieldcontain">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new {})
                        @Html.ValidationMessageFor(m => m.Password)
                    </li>
                    <li>
                        <button type="submit" data-theme="b" name="submit" value="submit-value">Login</button>
                    </li>
                </ul>
            }
        </div>
    </div>
</div>


<script>
    $('#UserName').initTargetInput({ layout: 'qwertyNoEnter', min_width: '888px', css: { container: 'text'} });
    $('#Password').initTargetInput({ layout: 'qwertyNoEnter', min_width: '888px', css: { container: 'text'} }); 
</script>