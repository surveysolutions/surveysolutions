@using Questionnaire.Core.Web.Helpers
@using RavenQuestionnaire.Core.Views.CompleteQuestionnaire.Mobile
@using RavenQuestionnaire.Core.Views.Question
@model PropagatedGroupMobileView
@{ string groupKey = "propagatedGroup" + Model.PropogationKey; }
<ul data-role="listview" data-inset="true" id="@groupKey">
    @foreach (CompleteQuestionView pquestion in Model.Children.OfType<CompleteQuestionView>())
    {
        <li class="nav-link" data-role="fieldcontain">
                 @using (Ajax.BeginFormHtml5("SaveAnswer", "Survey", ViewBag.AjaxOptions as AjaxOptions, new {autocomplete = "off"}))
                 {
                     using (Html.BeginCollectionItem("questions", true, pquestion.PublicKey + "_" + Model.PropogationKey))
                     {
                         ViewBag.EnabledRadioBoxSettings = new Dictionary<string, object>();
                         if (!pquestion.Enabled)
                         {
                             ViewBag.EnabledRadioBoxSettings.Add("Disabled", true);
                         }
                         Html.RenderPartial("~/Views/Survey/Question/_Question.cshtml", pquestion);
                     }
                     using (Html.BeginCollectionItem("settings", true, groupKey + "_" + Model.PropogationKey))
                     {
                         @Html.Hidden("ParentGroupPublicKey", (Guid) ViewBag.CurrentGroupPublicKey)
                         @Html.Hidden("QuestionnaireId", ViewBag.QuestionnaireId as string)
                         @Html.Hidden("PropogationPublicKey", Model.PropogationKey)
                     }
                 }                 
                @using (Ajax.BeginFormHtml5("SaveComments", "Survey", new { }, ViewBag.AjaxOptions as AjaxOptions, new { style="float: right;margin-top: -50px;" }))
                {
                    using (Html.BeginCollectionItem("questions", true, pquestion.PublicKey))
                    {
                        @Html.IconInputComments("Comments", pquestion.Comments ?? string.Empty, string.Empty, new { draw_key_board = "true" }, new { @class = "comments" }, new { @class = "bold" })
                    }
                    using (Html.BeginCollectionItem("settings", true, pquestion.PublicKey))
                    {
                        @Html.Hidden("ParentGroupPublicKey", (Guid)ViewBag.CurrentGroupPublicKey)
                        @Html.Hidden("QuestionnaireId", ViewBag.QuestionnaireId as string)
                        @Html.Hidden("PropogationPublicKey", Model.PropogationKey)
                    }
                    @Html.Hidden("PublicKey", pquestion.PublicKey)
                } 
                <p class="question-comment">
                         @if (!string.IsNullOrEmpty(pquestion.Comments))
                         {
                             <span>Comments : </span>
                             @pquestion.Comments;
                         }
                 </p>           
        </li>
    }
</ul>