@using RavenQuestionnaire.Core.Views.Card
@using RavenQuestionnaire.Core.Views.CompleteQuestionnaire
@using RavenQuestionnaire.Core.Views.Question
@using RavenQuestionnaire.Core.Views.CompleteQuestionnaire.Mobile
@model CompleteQuestionnaireMobileView
@{
    var questionKey = (Guid)ViewBag.CurrentQuestion;
    ViewBag.CurrentQuestion = questionKey;
}
@{
    ViewBag.AjaxOptions = new AjaxOptions
                              {
                                  OnComplete = "JsonResults"
                              };
    ViewBag.CurrentGroupPublicKey = Model.CurrentScreen.PublicKey;
    ViewBag.QuestionnaireId = Model.Id;
}
<!-- Start of second page -->
<div data-role="page" id="ref-@(Model.CurrentScreen.PublicKey)" class="page">
    @RenderNavigation(Model.CurrentScreen.Navigation)
    <!-- /header -->
    <div data-role="content" class="@(Model.Status.Name == "Completed" ? "ui-disabled" : "") dummy-scroll">
        <div id="scroller">
            @Html.Partial("~/Views/Survey/Group/_CompleteGroup.cshtml", Model.CurrentScreen)
        </div>
        <div style="width: 100%; height: 50px;">
            &nbsp;</div>
    </div>
    @RenderFooter(Model.CurrentScreen.Navigation)
    <!-- /content -->
</div>
<!-- /page -->
<!-- other main panel pages here -->
@foreach (CompleteQuestionView question in Model.QuestionsWithCards)
{
    <div data-role="page" data-add-back-btn="true" id="gallery-@(question.PublicKey)" class="gallery-page">
        <div data-role="header">
            <h1>Question cards</h1>
        </div>
        <div data-role="content">
            <ul class="gallery">
                @foreach (CardView card in question.Cards)
                {
                    <li><a href="@Url.Action("Images", "Resource", new { id = card.Original })" rel="external">
                        <img src="@Url.Action("Images", "Resource", new { id = card.Thumb })" alt="@card.Title" /></a></li>
                }
            </ul>
        </div>
    </div>
}
@foreach (CompleteQuestionView question in Model.QuestionsWithInstructions)
{
    <div data-role="page" data-add-back-btn="true" id="inctruction-@(question.PublicKey)">
        <div data-role="header" data-theme="b">
            <h1>Instructions</h1>
        </div>
        <div data-role="content">
            <h3>@Html.Raw(question.Instructions)</h3>
        </div>
    </div>
}
@foreach (CompleteGroupMobileView screen in Model.Screens)
{
    <div data-role="page" id="screen-@(screen.PublicKey)"  class="page">
        @RenderNavigation(screen.Navigation)
        <div data-role="content">
            @Html.Partial("~/Views/Survey/Group/_CompleteGroup.cshtml", screen)
        </div>
        @RenderFooter(screen.Navigation)
    </div>
}
@foreach (PropagatedGroupMobileView screen in Model.PropagatedScreens)
{
    <div data-role="page" id="screen-@(screen.PropogationKey)" data-refresh="true"  class="page">
        @RenderNavigation(screen.Navigation)
        <div data-role="content">
            @Html.Partial("~/Views/Survey/Group/_PropagatedScreen.cshtml", screen)
        </div>
        @RenderFooter(screen.Navigation)
    </div>
}
@foreach (PropagatedGroupMobileView screen in Model.Templates)
{
    <script id="template-@(screen.PublicKey)" type="text/x-jsrender">
        <div data-role="page" id="screen-00000000-0000-0000-0000-000000000000"  class="page">
            @RenderNavigation(screen.Navigation)
            <div data-role="content">
                 @Html.Partial("~/Views/Survey/Group/_PropagatedScreen.cshtml", screen)
            </div>
             <div data-role="footer" data-theme="b">
                <a class="previous-screen" href="${PrevScreen}" data-corners = "false" data-theme = "b" data-icon = "arrow-l" iconpos = "notext" >Prev Group</a>
                <h1><span></span>@screen.Navigation.CurrentScreenTitle</h1>
                <a href="#" class="next-screen ui-disabled" data-icon="arrow-r" data-iconpos="right" data-theme="b" data-corners="false">Next Group</a> 
            </div>
        </div>
    </script>
}
@helper RenderNavigation(ScreenNavigation screen)
    {
        List<CompleteGroupHeaders> crumbs = screen.BreadCumbs.Skip(1).ToList();
    <div data-role="header" data-theme="b" class="navigation">
        @for (int i = 0; i < crumbs.Count; i++)
        {
            CompleteGroupHeaders breadCumb = crumbs[i];
            if (i == 0)
            {
            <a href="#ref-@(Model.CurrentScreen.PublicKey)" class="breadcrumb nav-link" data-inline="true" data-role="button"
                data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
            }
            else
            {
            <a href="#screen-@breadCumb.PublicKey"  class="breadcrumb nav-link" data-inline="true" data-role="button" data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
            }
        }
        <a class="breadcrumb ui-disabled nav-link" aria-disabled="true" data-role="button"
            data-inline="true" data-corners="false" data-icon="arrow-r" data-iconpos="right">@screen.CurrentScreenTitle</a>
    </div>
}
@helper RenderFooter(ScreenNavigation screen)
    {
    <div data-role="footer" data-theme="b">
        @if (screen.PrevScreen != null)
        {
            if (!screen.PrevScreen.IsExternal)
            {
            <a class="previous-screen nav-link" href="#screen-@(screen.PrevScreen.PublicKey)" data-corners = "false" data-theme = "b" data-icon = "arrow-l" iconpos = "notext" >
                Prev Group</a>
            }
            else
            {
            <a class="nav-link" href="@Url.Action("Index", new { id = Model.Id, group = screen.PrevScreen.PublicKey })" data-corners = "false" data-theme = "b" data-icon = "arrow-l" iconpos = "notext">
                Next Group</a>
            }
        }
        else
        {
            <a class="previous-screen ui-disabled nav-link" href="#" data-icon="arrow-l" data-theme="b"
                iconpos="notext" data-corners="false">Prev Group</a>
        }
        <h1><span></span>@screen.CurrentScreenTitle</h1>
        @if (screen.NextScreen != null)
        {
            if (!screen.NextScreen.IsExternal)
            {
            <a class="next-screen nav-link" href="#screen-@screen.NextScreen.PublicKey" data-icon="arrow-r" data-iconpos="right" data-theme="b" data-corners="false">
                Next Group</a>
            }
            else
            {
            <a class="nav-link" href="@Url.Action("Index", new { id = Model.Id, group = screen.NextScreen.PublicKey })"  data-icon="arrow-r" data-iconpos="right" data-corners="false">
                Next Group</a>
            }
        }
        else
        {
            <a class="next-screen ui-disabled nav-link" href="#" data-icon="arrow-r" data-iconpos="right"
                data-theme="b" data-corners="false">Next Group</a>
        }
    </div>
}
