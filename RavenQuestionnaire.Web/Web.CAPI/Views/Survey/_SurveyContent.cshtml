@using Main.Core.Entities.SubEntities
@using Main.Core.View.Card
@using Main.Core.View.Group
@using Main.Core.View.Question
@using RavenQuestionnaire.Core.Views.CompleteQuestionnaire
@using RavenQuestionnaire.Core.Views.Question
@model Main.Core.View.Group.CompleteGroupMobileView
@{
    var questionKey = (Guid)ViewBag.CurrentQuestion;
    ViewBag.CurrentQuestion = questionKey;
}
@{
    ViewBag.AjaxOptions = new AjaxOptions
    {
        OnComplete = "JsonResults"
    };
    ViewBag.CurrentGroupPublicKey = Model.PublicKey;
    ViewBag.QuestionnaireId = Model.QuestionnairePublicKey;
    var propagatedGroup = Model as PropagatedGroupMobileView;
}
<!-- Start of second page -->
<div data-role="page" id="screen-@(Model.PublicKey + (propagatedGroup == null ? "" : "-" + propagatedGroup.PropogationKey))" class="@(ViewBag.PagePrefix) page" data-header-theme="@(Model.IsQuestionnaireActive?"b":"e")" data-footer-theme="b" data-content-theme="c">
    @RenderNavigation(Model.Navigation)
    <!-- /header -->
    <div data-role="content" data-iscroll="">
        <div class="scroller-@(Model.PublicKey)" id="scroller">
            <div  class='@(!Model.IsQuestionnaireActive ? "ui-disabled ui-disabled-opacity" : "")'>
                @Html.Partial("~/Views/Survey/Group/_CompleteGroup.cshtml", Model)
                <div style="width: 100%; height: 50px; text-align: center">
                    <strong>End of Section</strong></div>
            </div>
        </div>
        <a href="#transparent" style="display: none;" id="popup" data-rel="popup" data-role="button"
            data-inline="true" data-position-to="window">Close</a>
        <div id="transparent" data-role="popup" data-theme="none" data-shadow="false" data-position-to="window"
            class="instructions">
            <a href="#" data-rel="back" data-role="button" data-theme="a" data-icon="delete"
                data-iconpos="notext" class="ui-btn-right">Close</a>
            <p class="ui-no-answer">
                There are unanswered questions in this questionnaire. Please, check answers!!!</p>
        </div>
    </div>
    @RenderFooter(Model.Navigation)
    <!-- /content -->
</div>
<!-- /page -->
<!-- other main panel pages here -->
@foreach (CompleteQuestionView question in Model.QuestionsWithCards)
{
    <div data-role="page" data-add-back-btn="true" id="gallery-@(question.PublicKey)" class="gallery-page">
        <div data-role="header">
            <h1>
                Question cards</h1>
        </div>
        <div data-role="content">
            <ul class="gallery">
                @foreach (CardView card in question.Cards)
                {
                    <li><a href="@Url.Action("Images", "Resource", new { id = card.PublicKey })" rel="external">
                        <img src="@Url.Action("Thumb", "Resource", new { id = card.PublicKey })" alt="@card.Title" /></a></li>
                }
            </ul>
        </div>
    </div>
}
@helper RenderNavigation(ScreenNavigation screen)
    {
        List<CompleteGroupHeaders> crumbs = screen.BreadCumbs.Skip(1).ToList();
    <div data-role="header" class="ui-bar bradcrumbs">
        @for (int i = 0; i < crumbs.Count; i++)
        {
            CompleteGroupHeaders breadCumb = crumbs[i];
            if (i == 0)
            {
            <a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })" class=" nav-link" data-inline="true" data-role="button"
                data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
            }
            else
            {
            <a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })"  class=" nav-link" data-inline="true" data-role="button" data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
            }
        }
        <a class=" ui-disabled nav-link" aria-disabled="true" data-role="button" data-inline="true"
           data-corners="false" data-icon="arrow-r" data-iconpos="right">@screen.CurrentScreenTitle</a>
           @if(!Model.IsQuestionnaireActive)
           {
               <h1>Questionnaire is readonly</h1>
           }
    </div>
}
@helper RenderFooter(ScreenNavigation screen)
    {
    <div data-role="footer">
        @if (screen.PrevScreen != null)
        {
           
            
            <a class="nav-link ui-btn-left" href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = screen.PrevScreen.PublicKey, propagationKey = screen.PrevScreen.PropagationKey })" data-corners = "false" data-icon = "arrow-l" iconpos = "notext">
                Prev Group</a>
            
        }
        else
        {
            <a class="previous-screen ui-disabled ui-btn-left nav-link" href="#" data-icon="arrow-l" iconpos="notext" data-corners="false">Prev Group</a>
        }
        <h1>
            <span></span>@screen.CurrentScreenTitle</h1>
        @if (screen.NextScreen != null)
        {
           
            <a class="nav-link ui-btn-right " href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = screen.NextScreen.PublicKey, propagationKey = screen.NextScreen.PropagationKey })"  data-icon="arrow-r" data-iconpos="right" data-corners="false" >
                Next Group</a>
            
        }
        else
        {
             if (Model.Navigation.BreadCumbs.Count < 2)
              {
                  <a class="next-screen ui-btn-right  nav-link" href="@Url.Action("CompleteSummary", new {Id = Model.QuestionnairePublicKey})" data-icon="arrow-r" data-iconpos="right" 
                     data-theme="b" data-corners="false">Next Group</a>
              }
              else
              {


                  <a class="next-screen ui-disabled ui-btn-right  nav-link" href="#" data-icon="arrow-r"
                     data-iconpos="right" data-theme="b" data-corners="false">Next Group</a>
              }


        }
        @if (Model.Navigation.BreadCumbs.Count < 2)
            {
            <script>
                var target = $('#ref-link-@Model.PublicKey').parents('li');
                target.addClass('ui-btn-active');
                target.siblings().removeClass('ui-btn-active');
                 
            </script>
            }
    </div>
}
