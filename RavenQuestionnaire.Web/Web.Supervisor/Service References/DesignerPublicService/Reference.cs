//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.Supervisor.DesignerPublicService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionnaireListViewItem", Namespace="http://schemas.datacontract.org/2004/07/WB.UI.Designer.WebServices.Questionnaire")]
    [System.SerializableAttribute()]
    public partial class QuestionnaireListViewItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DesignerPublicService.IPublicService")]
    public interface IPublicService {
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadQuestionnaireRequest) of message DownloadQuestionnaireRequest does not match the default value (DownloadQuestionnaire)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/DownloadQuestionnaire", ReplyAction="http://tempuri.org/IPublicService/DownloadQuestionnaireResponse")]
        Web.Supervisor.DesignerPublicService.RemoteFileInfo DownloadQuestionnaire(Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/DownloadQuestionnaire", ReplyAction="http://tempuri.org/IPublicService/DownloadQuestionnaireResponse")]
        System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.RemoteFileInfo> DownloadQuestionnaireAsync(Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/DownloadQuestionnaireSource", ReplyAction="http://tempuri.org/IPublicService/DownloadQuestionnaireSourceResponse")]
        string DownloadQuestionnaireSource(System.Guid request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/DownloadQuestionnaireSource", ReplyAction="http://tempuri.org/IPublicService/DownloadQuestionnaireSourceResponse")]
        System.Threading.Tasks.Task<string> DownloadQuestionnaireSourceAsync(System.Guid request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/Dummy", ReplyAction="http://tempuri.org/IPublicService/DummyResponse")]
        void Dummy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/Dummy", ReplyAction="http://tempuri.org/IPublicService/DummyResponse")]
        System.Threading.Tasks.Task DummyAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (QuestionnaireListRequest) of message QuestionnaireListRequest does not match the default value (GetQuestionnaireList)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/GetQuestionnaireList", ReplyAction="http://tempuri.org/IPublicService/GetQuestionnaireListResponse")]
        Web.Supervisor.DesignerPublicService.QuestionnaireListView GetQuestionnaireList(Web.Supervisor.DesignerPublicService.QuestionnaireListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPublicService/GetQuestionnaireList", ReplyAction="http://tempuri.org/IPublicService/GetQuestionnaireListResponse")]
        System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.QuestionnaireListView> GetQuestionnaireListAsync(Web.Supervisor.DesignerPublicService.QuestionnaireListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadQuestionnaireRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadQuestionnaireRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public System.Guid QuestionnaireId;
        
        public DownloadQuestionnaireRequest() {
        }
        
        public DownloadQuestionnaireRequest(System.Guid QuestionnaireId) {
            this.QuestionnaireId = QuestionnaireId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QuestionnaireListRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QuestionnaireListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Filter;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int PageIndex;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int PageSize;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string SortOrder;
        
        public QuestionnaireListRequest() {
        }
        
        public QuestionnaireListRequest(string Filter, int PageIndex, int PageSize, string SortOrder) {
            this.Filter = Filter;
            this.PageIndex = PageIndex;
            this.PageSize = PageSize;
            this.SortOrder = SortOrder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QuestionnaireListView", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QuestionnaireListView {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Order;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Page;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int PageSize;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int TotalCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Web.Supervisor.DesignerPublicService.QuestionnaireListViewItem[] Items;
        
        public QuestionnaireListView() {
        }
        
        public QuestionnaireListView(string Order, int Page, int PageSize, int TotalCount, Web.Supervisor.DesignerPublicService.QuestionnaireListViewItem[] Items) {
            this.Order = Order;
            this.Page = Page;
            this.PageSize = PageSize;
            this.TotalCount = TotalCount;
            this.Items = Items;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPublicServiceChannel : Web.Supervisor.DesignerPublicService.IPublicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicServiceClient : System.ServiceModel.ClientBase<Web.Supervisor.DesignerPublicService.IPublicService>, Web.Supervisor.DesignerPublicService.IPublicService {
        
        public PublicServiceClient() {
        }
        
        public PublicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Web.Supervisor.DesignerPublicService.RemoteFileInfo Web.Supervisor.DesignerPublicService.IPublicService.DownloadQuestionnaire(Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest request) {
            return base.Channel.DownloadQuestionnaire(request);
        }
        
        public string DownloadQuestionnaire(System.Guid QuestionnaireId, out long Length, out System.IO.Stream FileByteStream) {
            Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest inValue = new Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest();
            inValue.QuestionnaireId = QuestionnaireId;
            Web.Supervisor.DesignerPublicService.RemoteFileInfo retVal = ((Web.Supervisor.DesignerPublicService.IPublicService)(this)).DownloadQuestionnaire(inValue);
            Length = retVal.Length;
            FileByteStream = retVal.FileByteStream;
            return retVal.FileName;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.RemoteFileInfo> Web.Supervisor.DesignerPublicService.IPublicService.DownloadQuestionnaireAsync(Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest request) {
            return base.Channel.DownloadQuestionnaireAsync(request);
        }
        
        public System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.RemoteFileInfo> DownloadQuestionnaireAsync(System.Guid QuestionnaireId) {
            Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest inValue = new Web.Supervisor.DesignerPublicService.DownloadQuestionnaireRequest();
            inValue.QuestionnaireId = QuestionnaireId;
            return ((Web.Supervisor.DesignerPublicService.IPublicService)(this)).DownloadQuestionnaireAsync(inValue);
        }
        
        public string DownloadQuestionnaireSource(System.Guid request) {
            return base.Channel.DownloadQuestionnaireSource(request);
        }
        
        public System.Threading.Tasks.Task<string> DownloadQuestionnaireSourceAsync(System.Guid request) {
            return base.Channel.DownloadQuestionnaireSourceAsync(request);
        }
        
        public void Dummy() {
            base.Channel.Dummy();
        }
        
        public System.Threading.Tasks.Task DummyAsync() {
            return base.Channel.DummyAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Web.Supervisor.DesignerPublicService.QuestionnaireListView Web.Supervisor.DesignerPublicService.IPublicService.GetQuestionnaireList(Web.Supervisor.DesignerPublicService.QuestionnaireListRequest request) {
            return base.Channel.GetQuestionnaireList(request);
        }
        
        public string GetQuestionnaireList(string Filter, int PageIndex, ref int PageSize, string SortOrder, out int Page, out int TotalCount, out Web.Supervisor.DesignerPublicService.QuestionnaireListViewItem[] Items) {
            Web.Supervisor.DesignerPublicService.QuestionnaireListRequest inValue = new Web.Supervisor.DesignerPublicService.QuestionnaireListRequest();
            inValue.Filter = Filter;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            inValue.SortOrder = SortOrder;
            Web.Supervisor.DesignerPublicService.QuestionnaireListView retVal = ((Web.Supervisor.DesignerPublicService.IPublicService)(this)).GetQuestionnaireList(inValue);
            Page = retVal.Page;
            PageSize = retVal.PageSize;
            TotalCount = retVal.TotalCount;
            Items = retVal.Items;
            return retVal.Order;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.QuestionnaireListView> Web.Supervisor.DesignerPublicService.IPublicService.GetQuestionnaireListAsync(Web.Supervisor.DesignerPublicService.QuestionnaireListRequest request) {
            return base.Channel.GetQuestionnaireListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Web.Supervisor.DesignerPublicService.QuestionnaireListView> GetQuestionnaireListAsync(string Filter, int PageIndex, int PageSize, string SortOrder) {
            Web.Supervisor.DesignerPublicService.QuestionnaireListRequest inValue = new Web.Supervisor.DesignerPublicService.QuestionnaireListRequest();
            inValue.Filter = Filter;
            inValue.PageIndex = PageIndex;
            inValue.PageSize = PageSize;
            inValue.SortOrder = SortOrder;
            return ((Web.Supervisor.DesignerPublicService.IPublicService)(this)).GetQuestionnaireListAsync(inValue);
        }
    }
}
