@using System.Runtime.Serialization.Formatters
@using System.Web.Optimization
@using Newtonsoft.Json

@model Core.Supervisor.Views.TakeNew.TakeNewInterviewView

@{
    ViewBag.Title = "TakeNew";
}

<h3>Take New Interview</h3>

@section styles
{
    @Styles.Render("~/css/newinterview")
}

@section scripts
{
    <script type="text/javascript">
        input.questionnaire = @Html.Raw(JsonConvert.SerializeObject(Model, Formatting.None, new JsonSerializerSettings
                                  {
                                      TypeNameHandling = TypeNameHandling.Objects,
                                      TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple
                                  }));
        input.commandExecutionUrl = '@Url.Action("Execute", "Command", new { }, Request.Url.Scheme)';
        input.backUrl = '@Url.Action("Interviews", "HQ", new { questionnaireId = "_______" }, Request.Url.Scheme)';
    </script>

    @Scripts.Render("~/js/lib-modules")
    @Scripts.Render("~/js/interview-assign")

    <script type="text/javascript">
        (function() {
            var root = this;

            define3RdPartyModules();
            loadPluginsAndBoot();

            function define3RdPartyModules() {
                // These are already loaded via bundles. 
                // We define them and put them in the root object.
                define('jquery', [], function() { return root.jQuery; });
                define('ko', [], function() { return root.ko; });
                define('amplify', [], function() { return root.amplify; });
                define('moment', [], function() { return root.moment; });
                define('lodash', [], function() { return root._; });
                define('director', [], function() { return root.Router; });
                define('input', [], function() { return root.input; });
            }

            function loadPluginsAndBoot() {
                requirejs.config({
                    baseUrl: '@Url.Content("~/Scripts/lib/")',
                    config: {
                        'waitSeconds': 15
                    },
                    paths: {
                        app: '@Url.Content("~/Scripts/assign/app/")'
                    }
                });

                boot();
            }

            function boot() {
                requirejs(['jquery', 'knockout', 'amplify', 'lodash', 'app/viewmodel', 'input', 'app/datacontext', 'Math.uuid'],
                    function($, ko, amplify, _, viewmodel, input, datacontext) {
                        ko.validation.configure({
                            insertMessages: false,
                            decorateElement: true,
                            errorElementClass: 'error'
                        });

                        ko.bindingHandlers.datepicker = {
                            init: function(element, valueAccessor, allBindingsAccessor) {
                                //initialize datepicker with some optional options
                                var options = allBindingsAccessor().datepickerOptions || {};
                                $(element).datepicker(options).on("changeDate", function(ev) {
                                    var observable = valueAccessor();
                                    observable(ev.date);
                                });
                            },
                            update: function(element, valueAccessor) {
                                var value = ko.utils.unwrapObservable(valueAccessor());
                                $(element).datepicker("setValue", value);
                            }
                        };

                        ko.validation.rules['notempty'] = {
                            validator: function(array) {
                                return array.length > 0;
                            },
                            message: 'The array must contain at least one valid element.'
                        };

                        $(document).ready(function() {
                            $.when(datacontext.parseData(input))
                                .done(function() {
                                    $('#umbrella').attr('data-bind', 'visible:isSaving');
                                    viewmodel.init();
                                    ko.applyBindings(viewmodel);
                                });
                        });
                    });
            }
        })();
    </script>

    <script type="text/html" id="SingleOption">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <!-- ko foreach: options -->
                <label class="radio" data-bind='attr: { "for": optionFor }'>
                    <input type='radio' data-bind="attr: { value: id, name: $parent.variable, id: optionFor }, checked: $parent.selectedOption" />
                    <span data-bind="text: title"></span>
                </label>
                <!-- /ko -->
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>
    </script>
    <script type="text/html" id="MultyOption">
        <div class="control-group" data-bind="validationElement: selectedOptions">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <!-- ko foreach: options -->
                <label class="checkbox" data-bind='attr: { "for": optionFor }'>
                    <input type='checkbox' data-bind="attr: { value: id, name: $parent.variable, id: optionFor }, checked: $parent.selectedOptions" />
                    <span data-bind="text: title"></span>
                </label>
                <!-- /ko -->
                <span class="help-inline" data-bind="validationMessage: selectedOptions"></span>
            </div>
        </div>
    </script>
    <script type="text/html" id="Numeric">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on">#</span>
                    <input class="" type="number" data-bind="value: selectedOption, valueUpdate: 'afterkeydown'" />
                </div>
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>

    </script>
    <script type="text/html" id="DateTime">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on"><i class="icon-calendar"></i></span>
                    <input type="text" data-date-format="mm/dd/yy" data-bind="datepicker: selectedOption, datepickerOptions: {date: selectedOption }" />
                </div>
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>

    </script>
    <script type="text/html" id="AutoPropagate">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on">#</span>
                    <input type="number" data-bind="value: selectedOption, valueUpdate: 'afterkeydown'" />
                </div>
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>

    </script>
    <script type="text/html" id="Text">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on">T</span>
                    <input type="text" data-bind="value: selectedOption, valueUpdate: 'afterkeydown'" />
                </div>
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>
    </script>
    <script type="text/html" id="GpsCoordinates">
        <div class="control-group" data-bind="validationElement: selectedOption">
            <label class="control-label" data-bind="text: title"></label>
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on">T</span>
                    <input type="text" data-bind="value: selectedOption, valueUpdate: 'afterkeydown'" />
                </div>
                <span class="help-inline" data-bind="validationMessage: selectedOption"></span>
            </div>
        </div>
    </script>
}

<h4 data-bind="text: questionnaire().title"></h4>
<div class="row-fluid" id="featured-questions-region">
    <div class="span12">
        <div id="featured-questions" class="form-horizontal">
            <!-- ko foreach: questions -->
            <!-- ko template:  { name: type(), data: $data } -->
            <!-- /ko -->
            <!-- /ko -->
            <div class="control-group info" data-bind="validationElement: responsible">
                <label class="control-label">Responsible</label>
                <div class="controls">
                    <select class="span5" data-bind="options: supervisors, optionsText: 'name', value: responsible"></select>
                    <span class="help-inline" data-bind="validationMessage: responsible"></span>
                </div>
            </div>
        </div>
        <p id="assignmentButton">
            <button class="btn btn-success btn-large" data-bind="click: saveCommand, enable: isSaveEnable"><i class="icon-white icon-ok"></i>&nbsp;Save</button>
        </p>
    </div>
</div>