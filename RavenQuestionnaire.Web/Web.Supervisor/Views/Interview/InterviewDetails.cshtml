@using System.Runtime.Serialization.Formatters
@using System.Web.Optimization
@using System.Web.Script.Serialization
@using Main.Core.Entities.SubEntities
@using Core.Supervisor.Views.Survey
@using Newtonsoft.Json
@using WB.Core.SharedKernels.DataCollection.ValueObjects.Interview
@model Core.Supervisor.Views.Interview.InterviewDetailsView
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var serializer = new JavaScriptSerializer(new SimpleTypeResolver()) { MaxJsonLength = Int32.MaxValue, RecursionLimit = 100 };
}


<div id="menu" class="hidden-phone">
    <div id="menuInner" class="slim-scroll">
        <div class="hide-panel-block text-right innerLR">
            &larr;&nbsp;<a class="pseudo-link" data-bind="click: toggleFilter">Hide filter</a>
        </div>
        <ul>
            <li class="heading"><span>FILTER</span></li>
            <!-- ko foreach: groups -->
            <li data-bind="css: css">
                <a data-bind="text: title, attr: {href : href}"></a>
            </li>
            <!-- /ko -->
        </ul>
    </div>
</div>
<div id="content" class="details-visible">
    <h3 class="sinle-line-header" data-bind="with: questionnaire">
        <!-- ko text: title -->
        <!-- /ko -->
        <span data-bind="text: status"></span></h3>
    <div class="menubar">
        <span data-bind="visible: isFilterOpen() == false"><a class="pseudo-link" data-bind="    click: toggleFilter">Show filter</a>&nbsp;&rarr;</span>
        <div class="btn-group">
            <a href="#/all" class="btn" data-bind="css: { 'btn-primary': filter() == 'all' }">all</a>
            <a href="#/flaged" class="btn" data-bind="css: { 'btn-primary': filter() == 'flaged' }"><i class="icon-flag" data-bind="    css: {'icon-white': filter() == 'flaged' }"></i>flagged (<span data-bind="    text: flagedCount"></span>)</a>
            <a href="#/commented" class="btn" data-bind="css: { 'btn-primary': filter() == 'commented' }"><i class="icon-comment " data-bind="    css: {'icon-white': filter() == 'commented' }"></i>commented (<span data-bind="    text: commentedCount"></span>)</a>
            <a href="#/answered"
                class="btn" data-bind="css: { 'btn-primary': filter() == 'answered' }"><i class="icon-ok"
                    data-bind="    css: { 'icon-white': filter() == 'answered' }"></i>answered
                                    (<span data-bind="    text: answeredCount"></span>)</a><a href="#/invalid" class="btn "
                                        data-bind="css: { 'btn-primary': filter() == 'invalid' }"><i class="icon-warning-sign"
                                            data-bind="    css: { 'icon-white': filter() == 'invalid' }"></i>invalid (<span
                                                data-bind="    text: invalidCount"></span>)</a><a href="#/supervisor" class="btn "
                                                    data-bind="css: { 'btn-primary': filter() == 'supervisor' }"><i class="icon-pencil"
                                                        data-bind="    css: { 'icon-white': filter() == 'supervisor' }"></i>supervisor's
                                                    (<span data-bind="    text: editableCount"></span>)</a>
            <a href="#/enabled" class="btn " data-bind="css: { 'btn-primary': filter() == 'enabled' }">
                <i class="icon-pencil" data-bind="    css: { 'icon-white': filter() == 'enabled' }"></i>enabled (<span data-bind="    text: enabledCount"></span>)</a>
        </div>
    </div>
    <div class="innerLR">@Html.Partial("_alerts")</div>
    <div class="panel-container">
        <div id="list">
            <div class="innerLR ">
                <!-- ko foreach: groups -->
                <div data-bind="visible: visibleQuestionsCount() > 0 && isVisible()">
                    <h2 data-bind="text: title" class="heading"></h2>
                    <div class="horizontal-scroll questions">
                        <table class="table table-bordered table-hover">
                            <tbody data-bind="foreach: questions">
                                <tr data-bind="visible : isVisible,css: {error : isValid() == false && isEnabled(), mandatory : isMandatory, disabled: isEnabled() == false}">
                                    <td style="width: 60%" class="question-text">
                                        <div class="cell-content" data-bind="css: {featured : isFeatured}">
                                            <span class="icon-star"></span>
                                            <span data-bind="text: title"></span>
                                        </div>
                                    </td>
                                    <td class="question-answer">
                                        <div class="cell-content" data-bind="visible: isEnabled">
                                            <span data-bind="css: markerStyle()" class="question-marker"></span>
                                            <span data-bind="template: { name: questionType() }"></span>
                                            <small class="text-error" data-bind="text:validationExpression, visible: isValid()==false"></small>
                                            <small class="text-error" data-bind="text:validationMessage, visible: isValid()==false"></small>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- /ko -->
            </div>
        </div>
        <div id="details">
            
        </div>
    </div>
</div>

@section styles
{
    @Styles.Render("~/css/list")
    @Styles.Render("~/css/interview")
}
@section scripts
{
    <script type="text/html" id="SingleOption">
        <!-- ko with: selectedOption -->
        <span data-bind="text: label"></span>
        <!-- /ko -->
    </script>
    <script type="text/html" id="MultyOption">
        <!-- ko foreach: selectedOptions -->
        <span data-bind="text: label"></span>,
        <!-- /ko -->
    </script>
    <script type="text/html" id="Numeric">
        <!-- ko text: answer -->
        <!-- /ko -->
    </script>
    <script type="text/html" id="DateTime">
        <!-- ko text: answer -->
        <!-- /ko -->
    </script>
    <script type="text/html" id="AutoPropagate">
        <!-- ko text: answer -->
        <!-- /ko -->
    </script>
    <script type="text/html" id="Text">
        <!-- ko text: answer -->
        <!-- /ko -->
    </script>
    <script type="text/html" id="GpsCoordinates">
    </script>

    @Scripts.Render("~/js/list")
    <script data-main="../../Scripts/details/main.js" src="~/Scripts/lib/require.js"></script>

    <script type="text/javascript">
        define('input', [], function() {
            var q = @Html.Raw(JsonConvert.SerializeObject(Model, Formatting.None, new JsonSerializerSettings
                        {
                            TypeNameHandling = TypeNameHandling.None,
                            TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple
                        })) ,
                u= @Html.Raw(JsonConvert.SerializeObject(ViewBag.CurrentUser, Formatting.None, new JsonSerializerSettings
                        {
                            TypeNameHandling = TypeNameHandling.None,
                            TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple
                        })) ;
            return {
                questionnaire: q,
                user : u,
                commandExecutionUrl: '@Url.Action("Execute", "Command", new { }, Request.Url.Scheme)',
                backUrl: '@Url.Action("Interviews", "HQ", new { questionnaireId = "_______" }, Request.Url.Scheme)',
            };
        });
    </script>
}