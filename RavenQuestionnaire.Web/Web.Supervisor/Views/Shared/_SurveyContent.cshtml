@using Main.Core.View.Group
@using Core.Supervisor.Views.Survey
@model SurveyScreenView
@{
    var questionKey = (Guid)ViewBag.CurrentQuestion;
    ViewBag.CurrentQuestion = questionKey;
    ViewBag.AjaxOptions = new AjaxOptions
    {
        OnComplete = "JsonResults"
    };
    ViewBag.CurrentGroupPublicKey = Model.PublicKey;
    ViewBag.QuestionnaireId = Model.QuestionnairePublicKey;
}
<script type="text/javascript">
var questionnaire = @Html.Raw(Json.Encode(Model)) ;
</script>
<div data-role="page" id="screen-@Model.PublicKey" class="@(ViewBag.PagePrefix) page">
    <div class="body">
        @foreach (var screen in Model.Screens)
        {
            <h2 class="heading">
                @screen.Title
            </h2>
            <div class="questions">
                <table class="table table-bordered table-condensed" style="width: @(300 + 200 * (screen.Captions.Count == 0 ? 1 : screen.Captions.Count))px">
                    <colgroup width="@(300)px"></colgroup>
                    @if (screen.Captions.Count > 0)
                    {
                        
                        for (int index = 0; index < screen.Captions.Count; index++)
                        {
                        <colgroup width="@(200)px"></colgroup>
                        }
                        <thead>
                            <tr>
                                <th></th>
                                @foreach (var caption in screen.Captions)
                                {
                                    <th>@caption</th>
                                }
                            </tr>
                        </thead>
                    }
                    else
                    {
                        <colgroup width="@(200)px"></colgroup>
                    }
                    <tbody>
                        @foreach (var question in screen.Questions)
                        {
                            <tr>
                                <td class="question-title @(question.Featured ? "featured" : "") @(question.Capital ? "capital" : "")">@question.Title
                                </td>
                                @foreach (var answer in question.Answers)
                                {
                                    <td class="question-answer @(answer.Enabled ? "" : "disabled") @(answer.Valid ? "" : "invalid") 
                                     @(question.Featured ? "featured" : "") @(question.Capital ? "capital" : "")">
                                        <div class="cell-content">@answer.Answer &nbsp;
                                        @if (answer.Enabled)
                                        {
                                            <div class="question-toolbar btn-group pull-right">
                                                @if (!answer.IsReadOnly)
                                                {
                                                    <a class="btn btn-primary btn-mini answer-btn" href="#">answer</a>
                                                }
                                                <a class="btn btn-mini"><i class="icon-flag"></i></a>
                                                <a class="btn btn-mini"><i class="icon-comment"></i></a>
                                            </div>
                                        }
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
               
            </div>
        }
    </div>
    <div class="bottom">
        <div class="inner">
            <div class="btn-group pull-right">
                <a href="#" class="btn "><i class="icon-flag"></i>flagged</a> <a href="#" class="btn ">
                    <i class="icon-ok"></i>answered</a> <a href="#" class="btn "><i class="icon-warning-sign">
                    </i>invalid</a> <a href="#" class="btn "><i class="icon-pencil"></i>supervisor's</a>
            </div>
        </div>
    </div>
</div>
@helper RenderNavigation(ScreenNavigation screen)
    {
        List<CompleteGroupHeaders> crumbs = screen.BreadCumbs.Skip(1).ToList();
    <ul class="breadcrumb">
        @for (int i = 0; i < crumbs.Count; i++)
        {
            CompleteGroupHeaders breadCumb = crumbs[i];
            if (i == 0)
            {
            <li><a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })" class=" nav-link" data-inline="true" data-role="button"
                data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
                <span class="divider">/</span></li>
            }
            else
            {
            <li><a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })"  class=" nav-link" data-inline="true" data-role="button" data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a><span
                class="divider">/</span></li>
            }
        }
        <li class="active">
            @screen.CurrentScreenTitle
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div>
                    Description: @Model.Description</div>
            }
        </li>
    </ul>
}
