@using Main.Core.View.Question
@using Questionnaire.Core.Web.Helpers

@model Main.Core.View.Group.PropagatedGroupMobileView
@{ string groupKey = "propagatedGroup" + Model.PropogationKey; }
<ul data-role="listview" data-inset="true" id="@groupKey">
    @foreach (CompleteQuestionView pquestion in Model.Children.OfType<CompleteQuestionView>())
    {
        <li class="nav-link" data-role="fieldcontain">
            @using (Ajax.BeginFormHtml5("SaveAnswer", "Survey", ViewBag.AjaxOptions as AjaxOptions, new { autocomplete = "off" }))
            {
                using (Html.BeginCollectionItem("questions", true, pquestion.PublicKey + "_" + Model.PropogationKey))
                {
                    ViewBag.EnabledRadioBoxSettings = new Dictionary<string, object>();
                    if (!pquestion.Enabled)
                    {
                        ViewBag.EnabledRadioBoxSettings.Add("Disabled", true);
                    }
                    Html.RenderPartial("~/Views/Shared/Question/_Question.cshtml", pquestion);
                }
                using (Html.BeginCollectionItem("settings", true, groupKey + "_" + Model.PropogationKey))
                {
                    @Html.Hidden("ParentGroupPublicKey", (Guid)ViewBag.CurrentGroupPublicKey)
                    @Html.Hidden("QuestionnaireId", ViewBag.QuestionnaireId as string)
                    @Html.Hidden("PropogationPublicKey", Model.PropogationKey)
                }
            }                 
            @using (Ajax.BeginFormHtml5("SaveComments", "Survey", new { }, new AjaxOptions { OnComplete = "UpdateComments" }, new { style = "float: right;margin-top: -50px;" }))
            {
                using (Html.BeginCollectionItem("questions", true, pquestion.PublicKey))
                {
                    @Html.IconInputComments("Comments", pquestion.Comments ?? string.Empty, string.Empty, new { draw_key_board = "true" }, new { @class = "comments" }, new { @class = "bold" })
                }
                using (Html.BeginCollectionItem("settings", true, pquestion.PublicKey))
                {
                    @Html.Hidden("ParentGroupPublicKey", (Guid)ViewBag.CurrentGroupPublicKey)
                    @Html.Hidden("QuestionnaireId", ViewBag.QuestionnaireId as string)
                    @Html.Hidden("PropogationPublicKey", Model.PropogationKey)
                }
                @Html.Hidden("PublicKey", pquestion.PublicKey)
            } 
            <p class="question-comment">
                @if (!string.IsNullOrEmpty(pquestion.Comments))
                {
                    string idComment = "comments" + @pquestion.PublicKey;
                    <span id="@idComment">Comments : @pquestion.Comments</span>
                }
                else
                {
                    string idComment = "comments" + @pquestion.PublicKey;
                    <span id="@idComment"></span>
                }
            </p>           
        </li>
    }
</ul>