@using Main.Core.Entities.SubEntities
@using Core.Supervisor.Views.Assignment
@using Web.Supervisor.Models
@model AssignmentView
@{
    var users = (ViewBag.Users as SelectList).Aggregate("{", (current, user) => current + string.Format("'{0}':'{1}',", user.Value, user.Text));
    users = users.Substring(0, users.Length - 1);
    users += "}";
}
<div>
    <table id="table" class="table-hover table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                @foreach (var header in Model.Headers)
                {
                   if (header.Key != Guid.Empty)
                    {
                        <th class="sorting" sorter='{"key":"@header.Value"}'>@header.Value</th>
                    }
                    else
                    {
                        <td>@header.Value</td>
                    }
                }
                <th class="sorting" sorter='{"key":"Responsible.Name"}'>Responsible</th>
                <th class="sorting" sorter='{"key":"LastEntryDate"}'>Last Update</th>
                <th class="sorting" sorter='{"key":"Status.Name"}'>Status</th>
                <td>
                </td>
            </tr>
        </thead>
        @foreach (AssignmentViewItem fitem in Model.Items)
        {
            <tr id="row-@(fitem.Id)">
                @foreach (var item in fitem.FeatureadValue)
                {
                    <td>
                        @(string.IsNullOrEmpty(item.Value) ? string.Empty : item.Value)
                    </td>
                }
                <td class="td-responsible">
                    <div class="popover-container">
                        <a id="source-@fitem.Id" 
                    class="editable" 
                    href="@Url.Action("Index", GlobalHelper.CurrentController, new { interviewerId = @fitem.Responsible == null ? string.Empty : fitem.Responsible.Id.ToString() })"
                    data-original-title="Choose user"
                    data-source="@Html.Raw(users)"
                    data-type="select" 
                    data-pk="1"
                    data-placement="right" 
                    data-toggle="manual"
                    data-url="@Url.Action("AssignForm", GlobalHelper.CurrentController, new { cqId = fitem.Id, tmptId = fitem.TemplateId })"
                    data-toggle-element="#ref-@fitem.Id">@(fitem.Responsible == null ? string.Empty : fitem.Responsible.Name)</a>
                    </div>
                </td>
                <td>@fitem.LastEntryDate.ToShortDateString()
                </td>
                <td class="td-status">@fitem.Status.Name
                </td>
                <td style="width: 190px">
                    <a class="btn btn-small" href="@Url.Action("Details", new { id = fitem.Id, template = fitem.TemplateId })">
                        <i class="icon-list"></i>Details</a>
                    
                        <a class="btn btn-small @(fitem.Responsible == null ? "btn-danger" : "btn-info")" 
                           id="ref-@fitem.Id" 
                           href="#" ><i class="icon-random icon-white"></i>Assign</a>
                </td>
            </tr>
        }
    </table>
    <div class="pagination" id="paging">
        @if (((double)Model.TotalCount / Model.PageSize) > 1d)
        {
           <text>@Html.QPager(Model.PageSize, Model.Page, Model.TotalCount, new { })</text>
        }
    </div>
</div>
@*@Html.Action("Chart", this.Model)*@ 