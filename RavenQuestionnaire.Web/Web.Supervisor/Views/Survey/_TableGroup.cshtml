@using Main.Core.Entities.SubEntities
@using Core.Supervisor.Views.Assignment
@using Questionnaire.Core.Web.Helpers
@using Web.Supervisor.Models
@model AssignmentView
@{
    var users = (ViewBag.Users as SelectList).Aggregate("{", (current, user) => current + string.Format("'{0}':'{1}',", user.Value, user.Text));
    users = users.Substring(0, users.Length - 1);
    users += "}";
}
<div>
    <table id="table" class="table-hover table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                @foreach (var header in Model.Headers)
                {
                    <th class="sorting" sorter='{"key":"@header.Value"}'>@header.Value</th>
                }
                <th class="sorting" sorter='{"key":"Responsible.Name"}'>Responsible</th>
                <th class="sorting" sorter='{"key":"LastEntryDate"}'>LastUpdate</th>
                <th class="sorting" sorter='{"key":"Status.Name"}'>Status</th>
                <td>
                </td>
            </tr>
        </thead>
        @foreach (AssignmentViewItem fitem in Model.Items)
        {
            <tr id="responsible-@(fitem.Id)">
                @foreach (var item in fitem.FeatureadValue)
                {
                    <td>
                        @(string.IsNullOrEmpty(item.Value) ? string.Empty : item.Value)
                    </td>
                }
                <td id="row-@fitem.Id" style="width: 10%;">
                    <a id="source-@fitem.Id" 
                    class="editable" 
                    href="@Url.Action("Index", "Survey", new { UserId = @fitem.Responsible == null ? string.Empty : fitem.Responsible.Id.ToString() })"
                    data-original-title="Choose user"
                    data-source="@Html.Raw(users)"
                    data-type="select" 
                    data-pk="1"
                    data-placement="top" 
                    data-url="@Url.Action("AssignForm", "Survey", new { cqId = fitem.Id, tmptId = fitem.TemplateId })"
                    data-toggle="#ref-@fitem.Id">@(fitem.Responsible == null ? string.Empty : fitem.Responsible.Name)</a>
                    @*
                    <div class="assignment-view">
                        <a id="link-@fitem.Id" href="@Url.Action("Index", "Survey", new { UserId = @fitem.Responsible == null ? string.Empty : fitem.Responsible.Id.ToString() })">@(fitem.Responsible == null ? string.Empty : fitem.Responsible.Name)</a>
                    </div>
                    <div class="assignment-form">
                        
                        @using (Ajax.BeginForm("AssignForm", "Survey", new AjaxOptions { OnComplete = "HideForm" }))
                        {
                            var id = fitem.Id + "";
                            @Html.Hidden("CqId", id)
                            @Html.Hidden("TmptId", fitem.TemplateId)

                            var options = (ViewBag.Users as SelectList).Select(item => new SelectListItem
                                {
                                    Value = item.Value,
                                    Text = item.Text,
                                    Selected = (fitem.Responsible != null && fitem.Responsible.Id.ToString() == item.Value)
                                }).ToList();
                            if (fitem.Responsible == null)
                            {
                                options.Insert(0, new SelectListItem() { Selected = true, Text = string.Empty, Value = string.Empty });
                            }

                            <div>@Html.DropDownList("userId", options, new { id = "userId-" + fitem.Id })</div>
                            <div>
                                <input class="btn btn-primary" name="Save" type="submit" value="Save" />
                                <input class="btn btn-danger" id="canc-@fitem.Id" name="Cancel" type="button" value="Cancel" />
                            </div>
                        }
                    </div>*@
                </td>
                <td style="width: 10%;">@fitem.LastEntryDate.ToShortDateString()
                </td>
                <td style="width: 10%;">@fitem.Status.Name
                </td>
                <td style="width: 190px">
                    <a class="btn btn-small" href="@Url.Action("Details", new { id = fitem.Id, template = fitem.TemplateId })">
                        <i class="icon-list"></i>Details</a>
                    @if (fitem.Status.PublicId == SurveyStatus.Initial.PublicId || fitem.Status.PublicId == SurveyStatus.Redo.PublicId)
                    {
                        <a class="btn btn-small @(fitem.Responsible == null ? "btn-danger" : "btn-info")" 
                           id="ref-@fitem.Id" 
                           href="#" ><i class="icon-random icon-white"></i>Assign</a>

                    }
                    @if (fitem.Status.PublicId == SurveyStatus.Complete.PublicId || fitem.Status.PublicId == SurveyStatus.Error.PublicId)
                    {
                        <a class="btn  btn-small btn-success" href="@Url.Action("ChangeState", new { id = fitem.Id, template = fitem.TemplateId })">
                            <i class="icon-ok-sign icon-white"></i>Change state</a>
                    }
                </td>
            </tr>
        }
    </table>
    <div class="pagination" id="paging">
        @Html.QPager(Model.PageSize, Model.Page, Model.TotalCount, new { })
    </div>
</div>
@Html.Action("Chart", this.Model)
