@using Core.Supervisor.Views.Index
@using Web.Supervisor.Models
@model IndexView
@{
    this.ViewBag.Title = "Surveys";
}
<script type="text/javascript">
    var tsortList = undefined;
    var sortData = undefined;
    
    $(document).ready(function() {
        document.filterUser = "";
        $('#filter').editable().on('update', function(e, editable) {
            document.filterUser = editable.value;
            sortData = [{ Field: "Title", Direction: "Asc" }];
            tsortList=[[0, 1]];
            getTablePage(sortData, 1);
        });

        makeSortable($, tsortList);
        onPagingClick();
        
    });

    function makeSortable($, list) {
        if (list!== undefined) {
            $.tablesorter.defaults.sortList =JSON.parse(JSON.stringify(list));
        }
        $("#questionnaireTable table").tablesorter({
                send: function(data) {
                    tsortList =JSON.parse(JSON.stringify(this.sortList));
                    sortData = data;
                    getTablePage(data, 1);
                }
        });
    }

    function onPagingClick() {
        $(".pagination a").click(function(e) {
            getTablePage(sortData, getParameterByName($(this).attr('href'), "pager.page"));
            return false;
        });
    }

    function getTablePage(data, page) {
        $.ajax({
                type: "POST",
                url: "@Url.Action("TableData", "Survey")",
                data: JSON.stringify({ UserId: document.filterUser, SortOrder: data, Pager: { Page: page, PageSize: @Model.PageSize } }),
                contentType: 'application/json, charset=utf-8',
                statusCode: {
                    200: function(response) {
                        $('#questionnaireTable tbody').html($(response).find('#table tbody').html());
                        $('#paging').html($(response).find('#paging').html());
                        
                        onPagingClick();
                    }
                }
            });
    }

    function getParameterByName(ref, name) {
        name = name.replace( /[\[]/ , "\\\[").replace( /[\]]/ , "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(ref);
        if (results == null)
            return "";
        else
            return decodeURIComponent(results[1].replace( /\+/g , " "));
    }

</script>
<h2>Surveys by <a href="#" id="filter" 
                  data-placement="bottom" 
                  data-type="select" 
                  data-source="@Url.Action("UsersJson", "User")"
                  data-prepend='All'             
                  data-original-title="Select user">@this.Model.User.Name</a> </h2>
<div id="questionnaireTable">
    @this.Html.Partial("_Table", this.Model)
</div>
