@using Main.Core.Entities.SubEntities
@using Core.Supervisor.Views.Index
@using Web.Supervisor.Models
@model IndexView
@{
    Guid? userKey = null;
    if (Model.User.Id != Guid.Empty)
    {
        userKey = Model.User.Id;
    }
}
<div>
    <table id="table" class="table table-striped table-bordered table-condensed table-hover">
        <thead>
            <tr>
                <th class="sorting" sorter='{"key":"Title"}'><span>Surveys</span></th>
                @foreach (var item in Model.Headers)
                {
                    <th class="sorting" role="columnheader" sorter='{"key": "@item.Key"}'><span>@item.Value</span>
                    </th>
                }
                <th>Export Data</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var collect in Model.Items.Skip((Model.Page - 1) * Model.PageSize).Take(Model.PageSize))
            {
                <tr>
                    <td>@Html.ActionLink(collect.Title, "Documents", new { templateId = collect.Id, userId = userKey })
                    </td>
                    @foreach (var it in Model.Headers)
                    {

                        var status = SurveyStatus.IsValidStatus(it.Value);
                        var value = Model.Headers.GetItemValue(collect, it.Key);

                        if (status != null)
                        {
                
                        <td class="td-@it.Key.ToLower()">
                            @if (value != "0")
                            {
                                @Html.ActionLink(value, "Documents", new { templateId = collect.Id, status = status.PublicId, userId = userKey })
                            }
                            else
                            {
                                <text>@value</text>
                            }
                        </td>
                        }
                        else
                        {
                        <td class="td-@it.Key.ToLower()">
                            @if (value != "0")
                            {
                                @Html.ActionLink(value, "Documents", new { templateId = collect.Id, isNotAssigned = it.Key == "Total" ? string.Empty : "true", userId = userKey })
                            }
                            else
                            {
                                <text>@value</text>
                            }
                        </td>
                        }
                      
                    }
                      <td>
                            
                            <a class="btn  btn-small btn-success" href="@Url.Action("GetExportedData", "ImportExport", new { id = collect.Id, type = "csv" })">
                                CSV</a>
                                     <a class="btn  btn-small btn-success" href="@Url.Action("GetExportedData", "ImportExport", new { id = collect.Id, type = "tab" })">
                            TAB</a>
                        </td>
                </tr>
            }
            <tr>
                <th>Summary</th>
                @foreach (var it in Model.Headers)
                {
                    <th>
                        @Model.Headers.GetItemValue(Model.Summary, it.Key)
                    </th>
                }
                <th></th>
            </tr>
        </tbody>
    </table>
    <div class="pagination" id="paging">
        @if (((double)Model.TotalCount / Model.PageSize) > 1d)
        {
            @Html.QPager(Model.PageSize, Model.Page, Model.TotalCount, new RouteValueDictionary())
        }
    </div>
    <div id="chartBox">
        @Html.Partial("IndexChart", this.Model)
    </div>
</div>
