@using Main.Core.View.Group
@using Core.Supervisor.Views.Survey
@using Main.Core.View.Question
@model SurveyScreenView
@{
    var questionKey = (Guid)ViewBag.CurrentQuestion;
    ViewBag.CurrentQuestion = questionKey;
    ViewBag.AjaxOptions = new AjaxOptions
    {
        OnComplete = "JsonResults"
    };
    ViewBag.CurrentGroupPublicKey = Model.PublicKey;
    ViewBag.QuestionnaireId = Model.QuestionnairePublicKey;
}
<div data-role="page" id="screen-@Model.PublicKey" class="@(ViewBag.PagePrefix) page">
    <div class="title">
        @RenderNavigation(Model.Navigation.NavigationContent)
    </div>
    <div class="body">
        @foreach (var screen in Model.Screens)
        {
            <h2 class="heading">
                @screen.Title
            </h2>
            if (screen.Questions.Count > 0)
            {
            <ul id="survey_content" class="questions">
                @foreach (var question in screen.Questions)
                {
                    <li>
                        <div class="line-wrap">
                            <div class="div-table">
                                <div class="div-row">
                                    <div class="div-cell">
                                        <div class="cell-content">@question.Title</div>
                                    </div>
                                    <div class="div-cell">
                                        <div class="cell-content">@question.Answer &nbsp;</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
            }
        }
    </div>
    <div class="bottom">
        <div class="inner">
        </div>
    </div>
</div>
@helper RenderNavigation(ScreenNavigation screen)
    {
        List<CompleteGroupHeaders> crumbs = screen.BreadCumbs.Skip(1).ToList();
    <ul class="breadcrumb">
        @for (int i = 0; i < crumbs.Count; i++)
        {
            CompleteGroupHeaders breadCumb = crumbs[i];
            if (i == 0)
            {
            <li><a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })" class=" nav-link" data-inline="true" data-role="button"
                data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a>
                <span class="divider">/</span></li>
            }
            else
            {
            <li><a href="@Url.Action("Screen", new { Id = Model.QuestionnairePublicKey, group = breadCumb.PublicKey })"  class=" nav-link" data-inline="true" data-role="button" data-corners="false" data-icon="arrow-r" data-iconpos="right">@breadCumb.GroupText</a><span
                class="divider">/</span></li>
            }
        }
        <li class="active">
            @screen.CurrentScreenTitle
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div>
                    Description: @Model.Description</div>
            }
        </li>
    </ul>
}
