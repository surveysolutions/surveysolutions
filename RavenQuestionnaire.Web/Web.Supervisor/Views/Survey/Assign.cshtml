@using Questionnaire.Core.Web.Helpers
@using RavenQuestionnaire.Core.Views.Assign
@using RavenQuestionnaire.Core.Views.Question
@using RavenQuestionnaire.Core.Views.Survey
@model AssignSurveyView
@{
    ViewBag.Title = "Assignment";
}
<script src="../../Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"> </script>
<script src="../../Scripts/jquery.validate.min.js" type="text/javascript"> </script>
<script src="../../Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"> </script>
<script type="text/javascript">
    function JsonResults(data) {
        var response = jQuery.parseJSON(data.responseText);
        if (response.status === "ok") {

        } else {
            alert(response.error);
        }
    };
    function OnResponsibleComplete(data) {
        var response = jQuery.parseJSON(data.responseText);
        if (response.status === "ok") {
            $.jGrowl(response.userName + " is responsible for this survey", { life: 2000 });
        } else {
            alert(response.error);
        }
    };
</script>
<h2>Assignment</h2>
<p><a href="@Url.Action("Assigments", new {id = Model.TemplateId, input = new SurveyGroupInputModel()})">Back to list</a></p>
<div class="row-fluid">
    <div class="span12">
        <ul class="thumbnails">
            @foreach (CompleteQuestionView question in Model.FeaturedQuestions)
            {
                <li class="span4">
                    <div class="thumbnail">
                        @using (Ajax.BeginForm("SaveAnswer", "Survey", new AjaxOptions()
                                                                      {
                                                                          OnComplete = "JsonResults"
                                                                      }))
                        {
                            ViewBag.EnabledRadioBoxSettings = new Dictionary<string, object>();
                            using (Html.BeginCollectionItem("questions", true, question.PublicKey))
                            {
                                @Html.Hidden("QuestionType", question.QuestionType)
                                Html.RenderPartial(string.Format("AnswerList/_{0}", question.QuestionType), question);
                                @Html.ValidationMessage("AnswerValue")
                                @Html.Hidden("PublicKey", question.PublicKey)
                            }
                            using (Html.BeginCollectionItem("settings", true, question.PublicKey))
                            {
                                @Html.Hidden("ParentGroupPublicKey", question.ParentGroupPublicKey)
                                @Html.Hidden("QuestionnaireId", Model.Id)
                            }
                        }
                    </div>
                </li>
            }
        </ul>
    </div>
</div>
@using (Html.BeginForm("AssignForm", "Survey"))
{
    @Html.Hidden("CqId", Model.Id)
    @Html.Hidden("TmptId", Model.TemplateId)
    <label class="control-label">Responsible</label>
    @Html.DropDownList("userId")
    <input name="Save" class="btn btn-primary" type="submit" value="Save" />
}