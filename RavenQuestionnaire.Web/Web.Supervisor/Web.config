<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="clientDependency" type="ClientDependency.Core.Config.ClientDependencySection, ClientDependency.Core" requirePermission="false" />
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="SynchronizerPath" value="C:\Work\MIS-Dev-clone\Synchronization\DataEntryClient\bin\Debug\DataEntryClient.exe" />
    <add key="WCFVisible" value="false" />
    <add key="IsApprovedSended" value="true" />
    <add key="elmah.mvc.disableHandler" value="false" />
    <add key="elmah.mvc.disableHandleErrorFilter" value="false" />
    <add key="elmah.mvc.requiresAuthentication" value="false" />
    <add key="elmah.mvc.allowedRoles" value="*" />
    <add key="elmah.mvc.route" value="elmah" />
  </appSettings>
  <!--
    For a description of web.config changes for .NET 4.5 see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <httpRuntime maxRequestLength="2097151" />
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.5" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" name=".ASPXAUTH" />
    </authentication>
    <membership defaultProvider="QuestionnaireMembershipProvider">
      <providers>
        <clear />
        <add name="QuestionnaireMembershipProvider" type="Questionnaire.Core.Web.Security.QuestionnaireMembershipProvider" enablePasswordRetrieval="false" enablePasswordReset="true" connectionStringName="TesterConnestionString" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <profile>
      <providers>
        <clear />
      </providers>
    </profile>
    <roleManager enabled="true" defaultProvider="CustomRoleProvider">
      <providers>
        <clear />
        <add name="CustomRoleProvider" type="Questionnaire.Core.Web.Security.QuestionnaireRoleProvider" connectionStringName="TesterConnestionString" applicationName="/" />
      </providers>
    </roleManager>
    <pages controlRenderingCompatibilityVersion="4.0">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="ClientDependency.Core" />
        <add namespace="ClientDependency.Core.Mvc" />
      </namespaces>
    </pages>
    <httpModules>
      <!-- ** Need to add the dependency module -->
      <add name="ClientDependencyModule" type="ClientDependency.Core.Module.ClientDependencyModule, ClientDependency.Core" />
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
    </httpModules>
    <httpHandlers>
      <!-- ** Need to add the dependency handler -->
      <add verb="*" path="DependencyHandler.axd" type="ClientDependency.Core.CompositeFiles.CompositeDependencyHandler, ClientDependency.Core " />
    </httpHandlers>
  </system.web>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ClientDependencyModule" />
      <!-- ** Need to add the dependency module -->
      <add name="ClientDependencyModule" type="ClientDependency.Core.Module.ClientDependencyModule, ClientDependency.Core" />
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" preCondition="managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <!-- ** Need to add the dependency handler -->
      <remove name="DependencyHandler" />
      <add name="DependencyHandler" preCondition="integratedMode" verb="*" path="DependencyHandler.axd" type="ClientDependency.Core.CompositeFiles.CompositeDependencyHandler, ClientDependency.Core " />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.8.0" newVersion="4.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Ninject" publicKeyToken="c7192dc5380945e7" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <clientDependency version="1">
    <!-- Full config documentation is here: http://clientdependency.codeplex.com/wikipage?title=Configuration&referringTitle=Documentation -->
    <!-- This section is used for Web Forms only, the enableCompositeFiles="true" is optional and by default is set to true -->
    <fileRegistration defaultProvider="LoaderControlProvider">
      <providers>
        <add name="PageHeaderProvider" type="ClientDependency.Core.FileRegistration.Providers.PageHeaderProvider, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LazyLoadProvider" type="ClientDependency.Core.FileRegistration.Providers.LazyLoadProvider, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LoaderControlProvider" type="ClientDependency.Core.FileRegistration.Providers.LoaderControlProvider, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="PlaceHolderProvider" type="ClientDependency.Core.FileRegistration.Providers.PlaceHolderProvider, ClientDependency.Core" enableCompositeFiles="true" javascriptPlaceHolderId="JavaScriptPlaceHolder" cssPlaceHolderId="CssPlaceHolder" />
      </providers>
    </fileRegistration>
    <!-- This section is used for MVC only -->
    <mvc defaultRenderer="StandardRenderer">
      <renderers>
        <add name="StandardRenderer" type="ClientDependency.Core.FileRegistration.Providers.StandardRenderer, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LazyLoadRenderer" type="ClientDependency.Core.FileRegistration.Providers.LazyLoadRenderer, ClientDependency.Core" enableCompositeFiles="true" />
      </renderers>
    </mvc>
    <!--
  The composite file section configures the compression/combination/minification of files.
  You can enable/disable minification of either JS/CSS files and you can enable/disable the 
  persistence of composite files. By default, minification and persistence is enabled. Persisting files
  means that the system is going to save the output of the compressed/combined/minified files
  to disk so that on any subsequent request (when output cache expires) that these files don't have
  to be recreated again and will be based on the persisted file on disk. This saves on processing time.
  -->
    <compositeFiles defaultFileProcessingProvider="CompositeFileProcessor" compositeFileHandlerPath="~/DependencyHandler.axd">
      <fileProcessingProviders>
        <add name="CompositeFileProcessor" type="ClientDependency.Core.CompositeFiles.Providers.CompositeFileProcessingProvider, ClientDependency.Core" enableCssMinify="true" enableJsMinify="false" persistFiles="true" compositeFilePath="~/App_Data/ClientDependency" />
      </fileProcessingProviders>
      <!-- 
      A file map provider stores references to dependency files by an id to be used in the handler URL when using the MappedId Url type
      -->
      <fileMapProviders>
        <add name="XmlFileMap" type="ClientDependency.Core.CompositeFiles.Providers.XmlFileMapper, ClientDependency.Core" mapPath="~/App_Data/ClientDependency" />
      </fileMapProviders>
      <!-- 
    Defines the mime types to compress when requested by the client.
    Path is a regex selector, or a * can be used as in place of 'any'.
    Generally mime types are only set by client browsers in the request for things
    such as JSON or XML ajax requests.
    
      <mimeTypeCompression>
        <add type="application/json" path="^.*?/Services/.*"/>
      </mimeTypeCompression>
    -->
      <!-- 
    Defines the paths to match on to enable rogue file compression.
    Path is a regex selector, or a * can be used as in place of 'any'.
    jsExt and cssExt are comma seperated list of extensions to match to have the dependencies
    replaced with the composite file handler. You can even include ASP.Net web service JS proxies.
    
      <rogueFileCompression>
        <add path="*" compressJs="true" compressCss="true" jsExt=".js,asmx/js" cssExt=".css">
          <exclusions>
            <add path="^.*test.aspx.*" />
          </exclusions>
        </add>
      </rogueFileCompression>
  -->
    </compositeFiles>
  </clientDependency>
  <system.serviceModel>
    <client>
      <endpoint address="https://217.12.197.135/designer/PublicService.svc" binding="wsHttpBinding" bindingConfiguration="CustomBinding_IPublicService" contract="DesignerPublicService.IPublicService" name="CustomBinding_IPublicService">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" minFreeMemoryPercentageToActivateService="0" />
    <services>
      <service name="Web.Supervisor.WCF.AuthorizationService">
        <endpoint address="/AuthorizationService" binding="mexHttpBinding" contract="Main.Core.WCF.IAuthorizationService" />
        <endpoint kind="mexEndpoint" />
        <endpoint kind="udpDiscoveryEndpoint" />
      </service>
      <service name="Web.Supervisor.WCF.SpotSyncService" behaviorConfiguration="tradeServiceBehavior">
        <endpoint name="basicHttpBinding" address="" binding="basicHttpBinding" bindingConfiguration="basicBindingExtended" contract="SynchronizationMessages.Discover.ISpotSync" />
        <endpoint name="DiscoveryEndpoint" kind="udpDiscoveryEndpoint" />
        <endpoint name="mexHttpBinding" contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
      <service name="Web.Supervisor.WCF.EventPipeService" behaviorConfiguration="tradeServiceBehavior">
        <endpoint name="basicHttpBinding" address="" binding="basicHttpBinding" bindingConfiguration="basicBindingExtended" contract="SynchronizationMessages.CompleteQuestionnaire.IEventPipe" />
        <endpoint name="mexHttpBinding" contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
      <service name="Web.Supervisor.WCF.API" behaviorConfiguration="APIBehavior">
        <endpoint address="RestAPI" behaviorConfiguration="RestAPIBehavior" bindingConfiguration="StreamedRequestWebBinding" binding="webHttpBinding" contract="SynchronizationMessages.CompleteQuestionnaire.IAPI" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <!--<behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata/>
          <serviceDiscovery/>
        </behavior>
      </serviceBehaviors>
    </behaviors>-->
    <!--<services>
      <service name="Web.Supervisor.WCF.SpotSyncService" behaviorConfiguration="tradeServiceBehavior">
        <endpoint name="basicHttpBinding" address="" binding="basicHttpBinding"
                  bindingConfiguration="basicBindingExtended" contract="SynchronizationMessages.Discover.ISpotSync" />
        <endpoint name="DiscoveryEndpoint" kind="udpDiscoveryEndpoint" />
        <endpoint name="mexHttpBinding" contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
      <service name="Web.Supervisor.WCF.EventPipeService" behaviorConfiguration="tradeServiceBehavior">
        <endpoint name="basicHttpBinding" address="" binding="basicHttpBinding"
                  bindingConfiguration="basicBindingExtended" contract="SynchronizationMessages.CompleteQuestionnaire.IEventPipe" />
        <endpoint name="mexHttpBinding" contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
    </services>-->
    <!-- <standardEndpoints>
      <udpDiscoveryEndpoint>
        <standardEndpoint name="DiscoveryEndpoint" />
      </udpDiscoveryEndpoint>
    </standardEndpoints>
   -->
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceDiscovery />
        </behavior>
        <behavior name="tradeServiceBehavior">
          <serviceDiscovery />
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="APIBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="RestAPIBehavior">
          <webHttp helpEnabled="true" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <basicHttpBinding>
        <binding name="basicBindingExtended" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None" />
        </binding>
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="CustomBinding_IPublicService">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" establishSecurityContext="false" />
          </security>
        </binding>
      </wsHttpBinding>
      <webHttpBinding>
        <binding name="StreamedRequestWebBinding" openTimeout="10:15:00" receiveTimeout="10:15:00" sendTimeout="10:15:00" bypassProxyOnLocal="true" hostNameComparisonMode="WeakWildcard" maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="StreamedRequest" useDefaultWebProxy="false">
          <readerQuotas maxStringContentLength="2147483647" maxArrayLength="2147483647" />
        </binding>
      </webHttpBinding>
    </bindings>
  </system.serviceModel>
  <elmah>
    <!--
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on remote access and securing ELMAH.
    -->
    <security allowRemoteAccess="true" />
    <errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="~/App_Data/Elmah" />
  </elmah>
  <location path="elmah.axd" inheritInChildApplications="false">
    <system.web>
      <httpRuntime maxRequestLength="2097151" />
      <httpHandlers>
        <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
      </httpHandlers>
      <!-- 
        See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for 
        more information on using ASP.NET authorization securing ELMAH.

      <authorization>
        <allow roles="admin" />
        <deny users="*" />  
      </authorization>
      -->
    </system.web>
    <system.webServer>
      <security>
        <requestFiltering>
          <requestLimits maxAllowedContentLength="16777208"/>
        </requestFiltering>
      </security>
      <handlers>
        <add name="ELMAH" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode" />
      </handlers>
    </system.webServer>
  </location>
  <location path="~/ImportExport/Import" inheritInChildApplications="false">
    <system.web>
      <httpRuntime maxRequestLength="2097151" />
    </system.web>
    <system.webServer>
      <security>
        <requestFiltering>
          <requestLimits maxAllowedContentLength="16777208"/>
        </requestFiltering>
      </security>
 </system.webServer>
  </location>
</configuration>