@using RavenQuestionnaire.Core.Views.FlowGraph
@model FlowGraphView
<script src="../../Scripts/jquery.jsPlumb-1.3.4-all.js" type="text/javascript"></script>
<script src="../../Scripts/modal.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.tmpl.min.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.jgrowl.min.js" type="text/javascript"></script>
<script src="../../Scripts/flow.js" type="text/javascript"></script>
<script>
    (function () {
        jsPlumbDemo.initConnections = function () {
            @if (Model.Connections.Length != 0)
            {
                foreach (var connection in Model.Connections)
                {
                    <text>
                    var connection = jsPlumb.connect({ source: "@connection.Source",target: "@connection.Target", scope:$("#@connection.Source").attr('scope')});
                    var label = connection.getOverlay("label");
                    label.setLabel("@Html.Raw(connection.LabelText)");
                    @if (!string.IsNullOrEmpty(connection.LabelText))
                    {
                        <text>
                        label.canvas.classList.add("initialized");
                        </text>
                    }
                    jsPlumbDemo.labelTexts[connection.id]="@Html.Raw(connection.LabelText)";
                    jsPlumbDemo.labelConditions[connection.id]="@Html.Raw(connection.Condition)";
                    </text>
                }
            }
            jsPlumb.repaintEverything();
        };
        jsPlumb.bind("contextmenu", function(component, originalEvent) {
                var con = "con_";
                if (component.id.substring(0,con.length) == con) {
                       if ($('#'+component.sourceId).hasClass("group"))
                           return false;
                       
                       var connection = component;
                       $.ajax({
                        type: "POST",
                        url: "@Url.Action("_GetAnswers", "Question")",
                        data: JSON.stringify({ PublicKey:connection.sourceId, TargetPublicKey : connection.targetId, QuestionnaireId: @Model.Id }),
                        contentType: 'application/json, charset=utf-8',
                        statusCode: {
                            200: function(response) {
                                $("#editConnection").html(response);
                                OpenModal();
                            },
                            500: function(response) {
                                $.jGrowl("error on getting answers");
                            }
                        }
                    });
                    originalEvent.preventDefault();
                }
                return false;
            });
    })();
    $('#editConnection').modal({
        backdrop: 'static'
    });
    function OpenModal() {
        $('#editConnection').modal('show');
    }
    function HideEditConditionForm(sourceId, targetId, answerId, answerNum) {
        var options = {};
        var text = $('input:radio[value='+answerId+']').attr('text');
        options.scope = $("#" + sourceId).attr('scope');
        options.source = sourceId;
        options.target = targetId;
        jsPlumbDemo.updateConnectionLabel(options, text, answerNum);
        
        $('#editConnection').modal('hide');
        SaveFlow();
    }
    function SaveFlow() {
        if (jsPlumbDemo.checkFlow() === true) {
            $.jGrowl("saving the flow", { theme: 'alert-message info' });
            $.ajax({
                    type: "POST",
                    
                    url: "@Url.Action("_SaveFlow", "FlowGraph")",
                           
                    data: JSON.stringify({ graphs: jsPlumbDemo.getAllFlowGraphs(), questionnaireId: @Model.Id }),
                    contentType: 'application/json, charset=utf-8',
                    statusCode: {
                        200: function(response) {
                            $.jGrowl(response.status, { theme: 'alert-message success' });
                        },
                        500: function(response) {
                            $.jGrowl("error");
                        }
                    }
                });
        }
        else {
            $.jGrowl("error", { theme: 'alert-message error' });
        }
    }
    $(document).ready(function() {
        $("#saveFlow").click(function () {
            SaveFlow();
            return false;
        });
        $("#checkFlow").click(function () {
           if (jsPlumbDemo.checkFlow()===true) {
               $.jGrowl("flow is ok", { theme: 'alert-message success' });
           }
            return false;
        });
        $("#repaintFlow").click(function () {
            jsPlumb.repaintEverything();
            return false;
        });
        
    });
</script>
