@using RavenQuestionnaire.Core.Views.Status
@model StatusView

<h1>Statuses</h1>
<p>Questionnaire: @Model.QuestionnaireId </p>
<p>
    @Html.ActionLink("Create New", "Create", new { qId = Model.QuestionnaireId, id = Model.Id }, new { @class = "btn small btn-primary" })
</p>
<table class="table table-striped table-bordered table-condensed">
    <thead>
        <tr>
            <th>Title </th>
            <th title="Defines limitations for roles">Role  restrictions</th>
            <th>Route rules</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.StatusElements)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="buttons">
                    @Html.ActionLink("Manage", "Edit", new { Qid = Model.QuestionnaireId, publicKey = item.PublicKey }, new { @class = "btn small " })
                </td>
                <td class="buttons">
                    @Html.ActionLink("Route", "Route", new { Qid = Model.QuestionnaireId, publicKey = item.PublicKey }, new { @class = "btn small " })
                </td>
            </tr>
        }
    </tbody>
</table>
@*<div class="pagination">
    @Html.QPager(Model.PageSize, Model.Page, Model.TotalCount)
</div>*@
