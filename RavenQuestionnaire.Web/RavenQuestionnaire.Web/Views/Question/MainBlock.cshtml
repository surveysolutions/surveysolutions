@using RavenQuestionnaire.Web.Utils
@using Questionnaire.Core.Web.Helpers
@using Main.Core.Entities.SubEntities

@model Main.Core.View.Question.QuestionView


@using (Html.BeginForm("Save", "Question"))
{
    using (Html.BeginCollectionItem("question", Model.PublicKey))
    {
        <div class="row-fluid">
            <div class="span5">
                @Html.BootstrapValidationSummary("")
                <div class="control-group">
                    <label class="control-label">Type</label>
                    <div class="controls">
                        @{
                            IDictionary<string, object> html = new Dictionary<string, object>();
                            html.Add("customName", "questionName");
                            html.Add("class", "span12");
                            @Html.EnumDropDownListFor(model => Model.QuestionType, html)
                        }
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Title, 7, 10, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>                
                <div class="control-group">
                    <label class="control-label">Who should answer this question?</label>
                        <div class="controls">
                            @{
                                IDictionary<string, object> scope = new Dictionary<string, object>();
                                scope.Add("class", "span12");
                                @Html.EnumDropDownListFor(model => Model.QuestionScope, scope)
                            }
                        </div>
                </div>                              
                <div class="control-group">
                    @Html.LabelFor(model => model.Featured, new { @class = "control-label" })
                    <div class="controls">
                        <label class="checkbox">@Html.CheckBoxFor(model => model.Featured) Yes </label>
                    </div>                   
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Mandatory, new { @class = "control-label" })
                    <div class="controls">
                        <label class="checkbox">@Html.CheckBoxFor(model => model.Mandatory) Yes</label>
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.StataExportCaption, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => model.StataExportCaption, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.StataExportCaption)
                    </div>
                </div>                
                <div class="control-group">
                    @Html.LabelFor(model => model.ConditionExpression, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(model => Model.ConditionExpression, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.ConditionExpression)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.ValidationExpression, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(model => Model.ValidationExpression, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.ValidationExpression)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.ValidationMessage, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(model => Model.ValidationMessage, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.ValidationMessage)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Instructions, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Instructions, 7, 10, new { placeholder = ViewData.ModelMetadata.Watermark, @class = "span12" })
                        @Html.ValidationMessageFor(model => model.Instructions)
                    </div>
                </div>                
            </div>  
            <div class="span7">
                @if (Model.PublicKey != Guid.Empty)
                {
                    @Html.HiddenFor(model => model.PublicKey)
                }
                @Html.HiddenFor(model => model.Parent)
                @Html.HiddenFor(model => model.QuestionnaireKey)
                @Html.Action("ShowBlock", "Question", new { type = Enum.GetName(typeof(QuestionType), @Model.QuestionType), questionId = @Model.PublicKey, QuestionnaireId = @Model.QuestionnaireKey, groupPublicKey = @Model.Parent })                
            </div>      
        </div>
    }
    <div class="form-actions">
        <input type="submit" value="Save" class="btn btn-primary btn-large" />
        @if (Model.PublicKey != Guid.Empty)
        {
            <a href="@Url.Action("Details", "Questionnaire", new { id = Model.QuestionnaireKey, qid = Model.PublicKey })" class="btn btn-large">
                <i class="icon-arrow-left"></i>Back to Questionnaire</a>
        }
        else
        {
            <a href="@Url.Action("Details", "Questionnaire", new { id = Model.QuestionnaireKey })" class="btn btn-large">
                <i class="icon-arrow-left"></i>Back to Questionnaire</a>
        }
    </div>
}