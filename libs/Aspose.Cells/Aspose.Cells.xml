<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Cells</name>
  </assembly>
  <members>
    <member name="T:Aspose.Cells.CollectionBase`1">
      <summary>
             Provides the abstract base class for a strongly typed collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.BinarySearch(`0)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="comparer">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
      <summary>
      </summary>
      <param name="index">
      </param>
      <param name="count">
      </param>
      <param name="item">
      </param>
      <param name="comparer">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.Contains(`0)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.CopyTo(`0[])">
      <summary>
      </summary>
      <param name="array">
      </param>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.CopyTo(`0[],System.Int32)">
      <summary>
      </summary>
      <param name="array">
      </param>
      <param name="arrayIndex">
      </param>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <param name="array">
      </param>
      <param name="arrayIndex">
      </param>
      <param name="count">
      </param>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.Exists(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.Find(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindAll(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindIndex(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindIndex(System.Int32,System.Predicate{`0})">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="count">
      </param>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindLast(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindLastIndex(System.Predicate{`0})">
      <summary>
      </summary>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindLastIndex(System.Int32,System.Predicate{`0})">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="count">
      </param>
      <param name="match">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.IndexOf(`0)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.IndexOf(`0,System.Int32)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.IndexOf(`0,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="index">
      </param>
      <param name="count">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.LastIndexOf(`0)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.LastIndexOf(`0,System.Int32)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.LastIndexOf(`0,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="item">
      </param>
      <param name="index">
      </param>
      <param name="count">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.Clear">
      <summary>
            Remove all elements.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CollectionBase`1.RemoveAt(System.Int32)">
      <summary>
             Removes the element at the specified index.
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="P:Aspose.Cells.CollectionBase`1.Capacity">
      <summary>
             Gets or sets the number of elements that the list can contain.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CollectionBase`1.Count">
      <summary>
            Gets the number of elements.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CollectionBase`1.Item(System.Int32)">
      <summary>
             Gets or sets the element at the specified index.        
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FontSetting">
      <summary>
             Represents a range of characters within the cell text.
             </summary>
      <example>
        <code>
             
             [C#]
            
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             //Adding a new worksheet to the Excel object
             workbook.Worksheets.Add();
             
             //Obtaining the reference of the newly added worksheet by passing its sheet index
             Worksheet worksheet = workbook.Worksheets[0];
             
             //Accessing the "A1" cell from the worksheet
             Aspose.Cells.Cell cell = worksheet.Cells["A1"];
             
             //Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!");
             
             //getting charactor
             FontSetting charactor = cell.Characters(6, 7);
             
             //Setting the font of selected characters to bold
             charactor.Font.IsBold = true;
             
             //Setting the font color of selected characters to blue
             charactor.Font.Color = Color.Blue;
             
             //Saving the Excel file
             workbook.Save("D:\\book1.xls");
             
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As New Workbook()
             
             'Adding a new worksheet to the Excel object
             workbook.Worksheets.Add()
             
             'Obtaining the reference of the newly added worksheet by passing its sheet index
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             
             'Accessing the "A1" cell from the worksheet
             Dim cell As Aspose.Cells.Cell = worksheet.Cells("A1")
             
             'Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!")
             
             'getting charactor
             Dim charactor As FontSetting = cell.Characters(6, 7)
             
             'Setting the font of selected characters to bold
             charactor.Font.IsBold = True
             
             'Setting the font color of selected characters to blue
             charactor.Font.Color = Color.Blue
             
             'Saving the Excel file
             workbook.Save("D:\book1.xls")
              
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.FontSetting.#ctor(System.Int32,System.Int32,Aspose.Cells.WorksheetCollection)">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="length">
      </param>
      <param name="sheets">
      </param>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Type">
      <summary>
            Gets the type of text node.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.StartIndex">
      <summary>
            Gets the start index of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Length">
      <summary>
            Gets the length of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Font">
      <summary>
            Returns the font of this object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.ShapeFont">
      <summary>
            Returns the font of this shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextParagraphCollection">
      <summary>
            Represents all text paragraph.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.TextParagraphCollection.GetEnumerator">
      <summary>
            Gets the enumerator of the paragraphs.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraphCollection.Count">
      <summary>
            Gets the count of text parapraghs.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraphCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Drawing.Texts.TextParagraph" /> object at specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.AbstractCalculationEngine">
      <summary>
            Represents user's custom calculation engine to extend the default calculation engine of Aspose.Cells.
            </summary>
      <example>
        <code>
            [C#]
            public class MyEngine : AbstractCalculationEngine
            {
                public override void Calculate(CalculationData data)
                {
                    string funcName = data.FunctionName.ToUpper();
                    if ("MYFUNC".Equals(funcName))
                    {
                        //do calculation for MYFUNC here
                        int count = data.ParamCount;
                        object res = null;
                        for (int i = 0; i &lt; count; i++)
                        {
                            object pv = data.GetParamValue(i);
                            if (pv is ReferredArea)
                            {
                                ReferredArea ra = (ReferredArea)pv;
                                pv = ra.GetValue(0, 0);
                            }
                            //process the parameter here
                            //res = ...;
                        }
                        data.CalculatedValue = res;
                    }
                }
            }
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.AbstractCalculationEngine.Calculate(Aspose.Cells.CalculationData)">
      <summary>
            Calculates one function with given data.
            </summary>
      <param name="data">the required data to calculate function such as function name, parameters, ...etc.</param>
      <remarks>User should set the calculated value for given data for all functions(including excel native functions)
            that he wants to calculate by himself in this implementation.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.AbstractCalculationEngine.IsParamLiteralRequired">
      <summary>
            Indicates whether this engine needs the literal text of parameter while doing calculation. Default value is false.
            </summary>
      <remarks>If this custom calculation engine requires the parameter's literal text, more stacks will be required to cache the literal text for parameters and Calculate() method may be called recursively to calcualte the parameter's value.
            Commonly the literal text is not needed for calculating formulas and this method should return false for most implementations to get better performance.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CalculationData">
      <summary>
            Represents the required data when calculating one function, such as function name, parameters, ...etc.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CalculationData.GetParamValue(System.Int32)">
      <summary>
            Gets the represented value object of the parameter at given index.
            </summary>
      <param name="index">index of the parameter(0 based)</param>
      <returns>If the parameter is plain value, then returns the plain value.
            If the parameter is reference, then return ReferredArea object.</returns>
    </member>
    <member name="M:Aspose.Cells.CalculationData.GetParamText(System.Int32)">
      <summary>
            Gets the literal text of the parameter at given index.
            </summary>
      <param name="index">index of the parameter(0 based)</param>
      <returns>literal text of the parameter</returns>
    </member>
    <member name="P:Aspose.Cells.CalculationData.CalculatedValue">
      <summary>
            Gets or sets the calculated value for this function.
            </summary>
      <remarks>User should set this property in his custom calculation engine for those functions the engine supports,
            and the set value will be returned when getting this property.
            Getting this property before setting will make the function be calculated by the default calculation engine of Aspose.Cells and the calculated value will be returned.</remarks>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Workbook">
      <summary>
            Gets the Workbook object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Worksheet">
      <summary>
            Gets the Workbook object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Cell">
      <summary>
            Gets the Cell object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.FunctionName">
      <summary>
            Gets the function name to be calculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.ParamCount">
      <summary>
            Gets the count of parameters 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.ShapeFont">
      <summary>
            Represents the font the shape's text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Font">
      <summary>
            Encapsulates the font object used in a spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Accessing the "A1" cell from the worksheet
            Aspose.Cells.Cell cell = worksheet.Cells["A1"];
            
            //Adding some value to the "A1" cell
            cell.PutValue("Hello Aspose!");
            
            Aspose.Cells.Font font = cell.Style.Font;
            
            //Setting the font name to "Times New Roman"
            font.Name = "Times New Roman";
            
            //Setting font size to 14
            font.Size = 14;
            
            //setting font color as Red
            font.Color = System.Drawing.Color.Red;           
            
            //Saving the Excel file
            workbook.Save(@"d:\dest.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Accessing the "A1" cell from the worksheet
            Dim cell As Aspose.Cells.Cell = worksheet.Cells("A1")
            
            'Adding some value to the "A1" cell
            cell.PutValue("Hello Aspose!")
            
            Dim font As Aspose.Cells.Font = cell.Style.Font
            
            'Setting the font name to "Times New Roman"
            font.Name = "Times New Roman"
            
            'Setting font size to 14
            font.Size = 14
            
            'setting font color as Red
            font.Color = System.Drawing.Color.Red
            
            'Saving the Excel file
            workbook.Save("d:\dest.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Font.Equals(Aspose.Cells.Font)">
      <summary>
            Checks if two fonts are equals.
            </summary>
      <param name="font">Compared font object.</param>
      <returns>True if equal to the compared font object.</returns>
    </member>
    <member name="M:Aspose.Cells.Font.ToString">
      <summary>
            Returns a string represents the current Cell object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Font.Charset">
      <summary>
            Represent the character set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsItalic">
      <summary>
            Gets or sets a value indicating whether the font is italic.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsBold">
      <summary>
            Gets or sets a value indicating whether the font is bold.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.CapsType">
      <summary>
            Gets and sets the text caps type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.StrikeType">
      <summary>
            Gets the strike type of the text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsStrikeout">
      <summary>
            Gets or sets a value indicating whether the font is single strikeout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ScriptOffset">
      <summary>
            Gets and sets the sript offset,in unit of percentage
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSuperscript">
      <summary>
            Gets or sets a value indicating whether the font is super script.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSubscript">
      <summary>
            Gets or sets a value indicating whether the font is subscript.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Underline">
      <summary>
            Gets or sets the font underline type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Name">
      <summary>
            Gets  or sets the name of the <see cref="T:Aspose.Cells.Font" />.
            </summary>
      <example>
        <code>
            [C#]
            
            Style style;
            ..........
            Font font = style.Font;
            font.Name = "Times New Roman";
            
            [Visual Basic]
            
            Dim style As Style
            ..........
            Dim font As Font =  style.Font 
            font.Name = "Times New Roman"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Font.DoubleSize">
      <summary>
            Gets and sets the double size of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Size">
      <summary>
            Gets or sets the size of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ThemeColor">
      <summary>
            Gets and sets the theme color.
            </summary>
      <remarks>
            If the font color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Font.Color">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ArgbColor">
      <summary>
            Gets and sets the color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsNormalizeHeights">
      <summary>
            Indicates whether the normalization of height that is to be applied to the text run.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeFont.Name">
      <summary>
            Gets and sets the name of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeFont.FillFormat">
      <summary>
            Gets the font effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeFont.UnderlineColor">
      <summary>
            Gets or sets the color of underline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeFont.Kerning">
      <summary>
            Specifies the minimum font size at which character kerning will occur for this text run.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeFont.Spacing">
      <summary>
            Specifies the spacing between characters within a text run.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.HtmlFormatHandlingType">
      <summary>
            Specifies how to handle formatting from the HTML source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.HtmlFormatHandlingType.All">
      <summary>
            Transfer all HTML formatting into the worksheet along with data.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.HtmlFormatHandlingType.None">
      <summary>
            Bring data in as unformatted text (setting data types still occurs).
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.HtmlFormatHandlingType.Rtf">
      <summary>
            Translate HTML formatting to rich text formatting on the data brought into the worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfOptimizationType">
      <summary>
            Specifies a type of optimization. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfOptimizationType.Standard">
      <summary>
            High print quality
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfOptimizationType.MinimumSize">
      <summary>
            File size is more important than print quality
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.MetadataOptions">
      <summary>
            Represents the options of loading metadata of the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Metadata.MetadataOptions.#ctor(Aspose.Cells.Metadata.MetadataType)">
      <summary>
            Creates an options of loading the metadata.
            </summary>
      <param name="metadataType">The type of metadata.</param>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.MetadataType">
      <summary>
            Gets and sets the type of the metadata which is loading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.Password">
      <summary>
            Represents Workbook file encryption password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.KeyLength">
      <summary>
            The key length.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.MetadataType">
      <summary>
            Represents the type of metadata.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.Encryption">
      <summary>
            Encrypts the file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.Decryption">
      <summary>
            Decrypts the file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.DocumentProperties">
      <summary>
            Load the properties of the file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.WorkbookMetadata">
      <summary>
            Represents the meta data.
            </summary>
      <example>
            The following example creates a WorkbookMetadata.
            <code>
            [C#]
              MetadataOptions options = new MetadataOptions(MetadataType.DocumentProperties);
              WorkbookMetadata meta = new WorkbookMetadata(path + "book1.xlsx", options);
              meta.CustomDocumentProperties.Add("test", "test");
              meta.Save(path + "book2.xlsx");
            </code></example>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.#ctor(System.String,Aspose.Cells.Metadata.MetadataOptions)">
      <summary>
            Create the meta data object.
            </summary>
      <param name="fileName">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.#ctor(System.IO.Stream,Aspose.Cells.Metadata.MetadataOptions)">
      <summary>
            Create the meta data object.
            </summary>
      <param name="stream">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.Save(System.String)">
      <summary>
            Save the modified metadata to the file.
            </summary>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.Save(System.IO.Stream)">
      <summary>
            Save the modified metadata to the stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.Options">
      <summary>
            Gets the options of the metadata.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the  built-in document properties of the spreadsheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.MemorySetting">
      <summary>
            Memory usage options.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MemorySetting.Normal">
      <summary>
            Default option. This option is applied for all versions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MemorySetting.MemoryPreference">
      <summary>
            Optimized for memory usage. This option may degrade performance in some special cases and is applied since v 8.0.0.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellValueFormatStrategy">
      <summary>
            Specifies how to apply style for the value of the cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.None">
      <summary>
            Not formatted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.CellStyle">
      <summary>
            Only formatted with the cell's original style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.DisplayStyle">
      <summary>
            Formatted with the cell's displayed style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.PivotOptions">
      <summary>
            Represents a complex type that specifies the pivot controls that appear on the chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PivotOptions.DropZoneFilter">
      <summary>
            Specifies whether a control for each PivotTable field on the PivotTable page axis
             of the source PivotTable appears on the chart when dropZonesVisible is set to true.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PivotOptions.DropZoneCategories">
      <summary>
            Specifies whether a control for each PivotTable field on the PivotTable row axis
             of the source PivotTable appears on the chart when dropZonesVisible is set to true.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PivotOptions.DropZoneData">
      <summary>
            Specifies whether a control for each PivotTable field on the PivotTable data axis
             of the source PivotTable appears on the chart when dropZonesVisible is set to true.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PivotOptions.DropZoneSeries">
      <summary>
            Specifies whether a control for each PivotTable field on the PivotTable column axis
             of the source PivotTable appears on the chart when dropZonesVisible is set to true.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PivotOptions.DropZonesVisible">
      <summary>
            Specifies whether any pivot controls can appear on the pivot chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType">
      <summary>
            Represents the persistence method to persist an ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.PropertyBag">
      <summary>
            The data is stored as xml data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.Storage">
      <summary>
            The data is stored as a storage binary data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.Stream">
      <summary>
            The data is stored as a stream binary data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.StreamInit">
      <summary>
            The data is stored as a streaminit binary data. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle">
      <summary>
            Represents the symbol displayed on the drop button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Plain">
      <summary>
            Displays a button with no symbol.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Arrow">
      <summary>
            Displays a button with a down arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Ellipsis">
      <summary>
            Displays a button with an ellipsis (...).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Reduce">
      <summary>
            Displays a button with a horizontal line like an underscore character.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType">
      <summary>
            Specifies when to show the drop button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Never">
      <summary>
            Never show the drop button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Focus">
      <summary>
            Show the drop button when the control has the focus.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Always">
      <summary>
            Always show the drop button.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl">
      <summary>
            Represents the ActiveX control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase">
      <summary>
            Represents the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Workbook">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Workbook" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Width">
      <summary>
            Gets and sets the width of the control in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Height">
      <summary>
            Gets and sets the height of the control in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.MouseIcon">
      <summary>
            Gets and sets a custom icon to display as the mouse pointer for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.MousePointer">
      <summary>
            Gets and sets the type of icon displayed as the mouse pointer for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.ForeOleColor">
      <summary>
            Gets and sets the ole color of the foreground.
            </summary>
      <remarks>
            Not applies to Image control.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.BackOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.IsVisible">
      <summary>
            Indicates whether this control is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Shadow">
      <summary>
            Indicates whether to show a shadow.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.LinkedCell">
      <summary>
            Gets and sets the linked cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.ListFillRange">
      <summary>
            Gets and sets the list fill fange..
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControlBase.Data">
      <summary>
            Gets and sets the binary data of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.IsEnabled">
      <summary>
            Indicates whether whether the control can receive the focus and respond to user-generated events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.IsLocked">
      <summary>
            Indicates whether data in the control is locked for editing.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.IsTransparent">
      <summary>
            Indicates whether the control is transparent.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.IsAutoSize">
      <summary>
            Indicates whether the control will automatically resize to display its entire contents.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.IMEMode">
      <summary>
            Gets and sets the default run-time mode of the Input Method Editor for the control as it receives focus.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.Font">
      <summary>
            Represents the font of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.TextAlign">
      <summary>
            Represents how to align the text used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ActiveXControl.Data">
      <summary>
            Gets and sets the binary data of the control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType">
      <summary>
            Represents the border type of the ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType.Single">
      <summary>
            The single line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode">
      <summary>
            Represents the default run-time mode of the Input Method Editor.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.NoControl">
      <summary>
            Does not control IME.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.On">
      <summary>
            IME on.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Off">
      <summary>
            IME off. English mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Disable">
      <summary>
            IME off.User can't turn on IME by keyboard.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hiragana">
      <summary>
            IME on with Full-width hiragana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Katakana">
      <summary>
            IME on with Full-width katakana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.KatakanaHalf">
      <summary>
            IME on with Half-width katakana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.AlphaFull">
      <summary>
            IME on with Full-width Alphanumeric mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Alpha">
      <summary>
            IME on with Half-width Alphanumeric mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.HangulFull">
      <summary>
            IME on with Full-width hangul mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hangul">
      <summary>
            IME on with Half-width hangul mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.HanziFull">
      <summary>
            IME on with Full-width hanzi mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hanzi">
      <summary>
            IME on with Half-width hanzi mode.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType">
      <summary>
            Repsents the position of the Caption relative to the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType.Left">
      <summary>
            The left of the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType.Right">
      <summary>
            The right of the control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl">
      <summary>
            Represents a CheckBox ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.GroupName">
      <summary>
            Gets and sets the group's name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Alignment">
      <summary>
            Gets and set the position of the Caption relative to the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.IsWordWrapped">
      <summary>
            Indicates whether the contents of the control automatically wrap at the end of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Caption">
      <summary>
            Gets and set the descriptive text that appears on a control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.PicturePosition">
      <summary>
            Gets and set the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Picture">
      <summary>
            Gets and sets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Accelerator">
      <summary>
            Gets and sets the accelerator key for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.Value">
      <summary>
            Indicates if the control is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CheckBoxActiveXControl.IsTripleState">
      <summary>
            Indicates how the specified control will display Null values.
            </summary>
      <remarks>
            ///<table class="dtTABLE" cellspacing="0"><tr><td><font color="gray"><b>Setting</b></font>　</td><td><font color="gray"><b>Description</b></font>　</td></tr><tr><td>True</td><td>The control will cycle through states for Yes, No, and Null values. The control appears dimmed (grayed) when its Value property is set to Null.</td></tr><tr><td>False</td><td>(Default) The control will cycle through states for Yes and No values. Null values display as if they were No values.</td></tr></table></remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl">
      <summary>
            Represents a ComboBox ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.MaxLength">
      <summary>
            Gets and sets the maximum number of characters
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ListWidth">
      <summary>
            Gets and set the width in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.BoundColumn">
      <summary>
            Repsents how the Value property is determined for a ComboBox or ListBox
            when the MultiSelect propertys value (fmMultiSelectSingle).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.TextColumn">
      <summary>
            Repsents the column in a ComboBox or ListBox to display to the user.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ColumnCount">
      <summary>
            Repsents the number of columns to display in a ComboBox or ListBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ListRows">
      <summary>
            Repsents the maximum number of rows to display in the list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.MatchEntry">
      <summary>
            Indicates how a ListBox or ComboBox searches its list as the user types.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.DropButtonStyle">
      <summary>
            Specifies the symbol displayed on the drop button
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ShowDropButtonTypeWhen">
      <summary>
            Specifies the symbol displayed on the drop button
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ListStyle">
      <summary>
             Gets and sets the visual appearance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.BorderStyle">
      <summary>
            Gets and set the type of border used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.BorderOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.IsEditable">
      <summary>
            Indicates whether the user can type into the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ShowColumnHeads">
      <summary>
            Indicates whether column headings are displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.IsDragBehaviorEnabled">
      <summary>
            Indicates whether dragging and dropping is enabled for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.EnterFieldBehavior">
      <summary>
            Specifies selection behavior when entering the control.
            True specifies that the selection remains unchanged from last time the control was active. 
            False specifies that all the text in the control will be selected when entering the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.IsAutoWordSelected">
      <summary>
            Specifies the basic unit used to extend a selection. 
            True specifies that the basic unit is a single character.
            false specifies that the basic unit is a whole word.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.SelectionMargin">
      <summary>
            Indicates whether the user can select a line of text by clicking in the region to the left of the text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.Value">
      <summary>
            Gets and sets the value of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.HideSelection">
      <summary>
            Inidicates whether selected text in the control appears highlighted when the control does not have focus.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ComboBoxActiveXControl.ColumnWidths">
      <summary>
            Gets and sets the width of the column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlType">
      <summary>
            Represents all type of ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.CommandButton">
      <summary>
            Button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ComboBox">
      <summary>
            ComboBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.CheckBox">
      <summary>
            CheckBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ListBox">
      <summary>
            ListBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.TextBox">
      <summary>
            TextBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.SpinButton">
      <summary>
            Spinner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.RadioButton">
      <summary>
            RadioButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Label">
      <summary>
            Label
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Image">
      <summary>
            Image
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ToggleButton">
      <summary>
            ToggleButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ScrollBar">
      <summary>
            ScrollBar
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl">
      <summary>
            Repsents a command button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.Caption">
      <summary>
            Gets and set the descriptive text that appears on a control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.PicturePosition">
      <summary>
            Gets and set the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.Picture">
      <summary>
            Gets and sets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.Accelerator">
      <summary>
            Gets and sets the accelerator key for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.TakeFocusOnClick">
      <summary>
            Inidcates whether the control takes the focus when clicked.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.CommandButtonActiveXControl.IsWordWrapped">
      <summary>
            Indicates whether the contents of the control automatically wrap at the end of a line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl">
      <summary>
            Represents the image control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.IsAutoSize">
      <summary>
            Indicates whether the control will automatically resize to display its entire contents.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.BorderOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.BorderStyle">
      <summary>
            Gets and set the type of border used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.PictureSizeMode">
      <summary>
            Gets and sets how to display the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.Picture">
      <summary>
            Gets and sets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.PictureAlignment">
      <summary>
            Gets and sets the alignment of the picture inside the Form or Image.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ImageActiveXControl.IsTiled">
      <summary>
            Indicates whether the picture is tiled across the background.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl">
      <summary>
            Repsents the lable ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.Caption">
      <summary>
            Gets and set the descriptive text that appears on a control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.PicturePosition">
      <summary>
            Gets and set the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.BorderOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.BorderStyle">
      <summary>
            Gets and set the type of border used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.Picture">
      <summary>
            Gets and sets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.Accelerator">
      <summary>
            Gets and sets the accelerator key for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.LabelActiveXControl.IsWordWrapped">
      <summary>
            Indicates whether the contents of the control automatically wrap at the end of a line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl">
      <summary>
            Represents a ListBox ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ScrollBars">
      <summary>
            Indicates specifies whether the control has vertical scroll bars, horizontal scroll bars, both, or neither.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ListWidth">
      <summary>
            Gets and set the width in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.BoundColumn">
      <summary>
            Repsents how the Value property is determined for a ComboBox or ListBox
            when the MultiSelect propertys value (fmMultiSelectSingle).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.TextColumn">
      <summary>
            Repsents the column in a ComboBox or ListBox to display to the user.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ColumnCount">
      <summary>
            Repsents the number of columns to display in a ComboBox or ListBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.MatchEntry">
      <summary>
            Indicates how a ListBox or ComboBox searches its list as the user types.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ListStyle">
      <summary>
            Gets and sets the visual appearance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.SelectionType">
      <summary>
            Indicates whether the control permits multiple selections.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.Value">
      <summary>
            Gets and sets the value of the control.
            </summary>
      <remarks>
            Only effects when <see cref="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.SelectionType" /> is SelectionType.Single;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.BorderStyle">
      <summary>
            Gets and set the type of border used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.BorderOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ShowColumnHeads">
      <summary>
            Indicates whether column headings are displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.IntegralHeight">
      <summary>
            Indicates whether the control will only show complete lines of text without showing any partial lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ListBoxActiveXControl.ColumnWidths">
      <summary>
            Gets and sets the width of the column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle">
      <summary>
            Represents the visual appearance of the list in a ListBox or ComboBox.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle.Plain">
      <summary>
            Displays a list in which the background of an item is highlighted when it is selected.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle.Option">
      <summary>
            Displays a list in which an option button or a checkbox next to each entry displays the selection state of that item.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType">
      <summary>
            Represents how a ListBox or ComboBox searches its list as the user types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.FirstLetter">
      <summary>
            The control searches for the next entry that starts with the character entered.
            Repeatedly typing the same letter cycles through all entries beginning with that letter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.Complete">
      <summary>
            As each character is typed, the control searches for an entry matching all characters entered.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.None">
      <summary>
            The list will not be searched when characters are typed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType">
      <summary>
            Represents the type of icon displayed as the mouse pointer for the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Default">
      <summary>
            Standard pointer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Arrow">
      <summary>
            Arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Cross">
      <summary>
            Cross-hair pointer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.IBeam">
      <summary>
            I-beam.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNESW">
      <summary>
            Double arrow pointing northeast and southwest.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNS">
      <summary>
            Double arrow pointing north and south.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNWSE">
      <summary>
            Double arrow pointing northwest and southeast.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeWE">
      <summary>
            Double arrow pointing west and east.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.UpArrow">
      <summary>
            Up arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.HourGlass">
      <summary>
            Hourglass.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.NoDrop">
      <summary>
            “Not” symbol (circle with a diagonal line) on top of the object being dragged.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.AppStarting">
      <summary>
            Arrow with an hourglass.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Help">
      <summary>
            Arrow with a question mark.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeAll">
      <summary>
            “Size-all” cursor (arrows pointing north, south, east, and west).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Custom">
      <summary>
            Uses the icon specified by the MouseIcon property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType">
      <summary>
            Represents the alignment of the picture inside the Form or Image.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.TopLeft">
      <summary>
            The top left corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.TopRight">
      <summary>
            The top right corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.Center">
      <summary>
            The center.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.BottomLeft">
      <summary>
            The bottom left corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.BottomRight">
      <summary>
            The bottom right corner.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType">
      <summary>
            Repsents the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftTop">
      <summary>
            The picture appears to the left of the caption.
            The caption is aligned with the top of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftCenter">
      <summary>
            The picture appears to the left of the caption.
            The caption is centered relative to the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftBottom">
      <summary>
            The picture appears to the left of the caption.
            The caption is aligned with the bottom of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightTop">
      <summary>
            The picture appears to the right of the caption.
            The caption is aligned with the top of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightCenter">
      <summary>
            The picture appears to the right of the caption.
            The caption is centered relative to the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightBottom">
      <summary>
            The picture appears to the right of the caption.
            The caption is aligned with the bottom of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveLeft">
      <summary>
            The picture appears above the caption.
            The caption is aligned with the left edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveCenter">
      <summary>
            The picture appears above the caption.
            The caption is centered below the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveRight">
      <summary>
            The picture appears above the caption.
            The caption is aligned with the right edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowLeft">
      <summary>
            The picture appears below the caption.
            The caption is aligned with the left edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowCenter">
      <summary>
            The picture appears below the caption.
            The caption is centered above the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowRight">
      <summary>
            The picture appears below the caption.
            The caption is aligned with the right edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.Center">
      <summary>
            The picture appears in the center of the control.
            The caption is centered horizontally and vertically on top of the picture.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode">
      <summary>
            Represents how to display the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Clip">
      <summary>
            Crops any part of the picture that is larger than the control's boundaries.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Stretch">
      <summary>
            Stretches the picture to fill the control's area. 
            This setting distorts the picture in either the horizontal or vertical direction.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Zoom">
      <summary>
            Enlarges the picture, but does not distort the picture in either the horizontal or vertical direction.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.RadioButtonActiveXControl">
      <summary>
            Represents a RadioButton ActiveX control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl">
      <summary>
            Represents a ToggleButton ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.Caption">
      <summary>
            Gets and set the descriptive text that appears on a control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.PicturePosition">
      <summary>
            Gets and set the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.Picture">
      <summary>
            Gets and sets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.Accelerator">
      <summary>
            Gets and sets the accelerator key for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.Value">
      <summary>
            Indicates if the control is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ToggleButtonActiveXControl.IsTripleState">
      <summary>
            Indicates how the specified control will display Null values.
            </summary>
      <remarks>
            ///<table class="dtTABLE" cellspacing="0"><tr><td><font color="gray"><b>Setting</b></font>　</td><td><font color="gray"><b>Description</b></font>　</td></tr><tr><td>True</td><td>The control will cycle through states for Yes, No, and Null values. The control appears dimmed (grayed) when its Value property is set to Null.</td></tr><tr><td>False</td><td>(Default) The control will cycle through states for Yes and No values. Null values display as if they were No values.</td></tr></table></remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.RadioButtonActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.RadioButtonActiveXControl.GroupName">
      <summary>
            Gets and sets the group's name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.RadioButtonActiveXControl.Alignment">
      <summary>
            Gets and set the position of the Caption relative to the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.RadioButtonActiveXControl.IsWordWrapped">
      <summary>
            Indicates whether the contents of the control automatically wrap at the end of a line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ScrollBarActiveXControl">
      <summary>
            Represents the ScrollBar control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl">
      <summary>
            Represents the SpinButton control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.Min">
      <summary>
            Gets and sets the minimum acceptable value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.Max">
      <summary>
            Gets and sets the maximum acceptable value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.Position">
      <summary>
            Gets and sets the value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.SmallChange">
      <summary>
            Gets and sets the amount by which the Position property changes
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.SpinButtonActiveXControl.Orientation">
      <summary>
            Gets and sets whether the SpinButton or ScrollBar is oriented vertically or horizontally.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ScrollBarActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.ScrollBarActiveXControl.LargeChange">
      <summary>
            Gets and sets the amount by which the Position property changes
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType">
      <summary>
            Represents the type of scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.None">
      <summary>
            Displays no scroll bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.Horizontal">
      <summary>
            Displays a horizontal scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.BarsVertical">
      <summary>
            Displays a vertical scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.BarsBoth">
      <summary>
            Displays both a horizontal and a vertical scroll bar.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation">
      <summary>
            Represents type of scroll orientation
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Auto">
      <summary>
            Control is rendered horizontally when the control's width is greater than its height.
            Control is rendered vertically otherwise.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Vertical">
      <summary>
            Control is rendered vertically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Horizontal">
      <summary>
            Control is rendered horizontally.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType">
      <summary>
            Represents the type of special effect.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Flat">
      <summary>
            Flat
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Raised">
      <summary>
            Raised
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Sunken">
      <summary>
            Sunken
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Etched">
      <summary>
            Etched
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Bump">
      <summary>
            Bump
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl">
      <summary>
            Represents a text box ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.BorderStyle">
      <summary>
            Gets and set the type of border used by the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.BorderOleColor">
      <summary>
            Gets and sets the ole color of the background.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.SpecialEffect">
      <summary>
            Gets and sets the special effect of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.MaxLength">
      <summary>
            Gets and sets the maximum number of characters
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.ScrollBars">
      <summary>
            Indicates specifies whether the control has vertical scroll bars, horizontal scroll bars, both, or neither.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.PasswordChar">
      <summary>
            Gets and sets a character to be displayed in place of the characters entered.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsEditable">
      <summary>
            Indicates whether the user can type into the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IntegralHeight">
      <summary>
            Indicates whether the control will only show complete lines of text without showing any partial lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsDragBehaviorEnabled">
      <summary>
            Indicates whether dragging and dropping is enabled for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.EnterKeyBehavior">
      <summary>
            Specifies the behavior of the ENTER key.
            True specifies that pressing ENTER will create a new line.
            False specifies that pressing ENTER will move the focus to the next object in the tab order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.EnterFieldBehavior">
      <summary>
            Specifies selection behavior when entering the control.
            True specifies that the selection remains unchanged from last time the control was active. 
            False specifies that all the text in the control will be selected when entering the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.TabKeyBehavior">
      <summary>
            Indicates whether tab characters are allowed in the text of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.HideSelection">
      <summary>
            Inidicates whether selected text in the control appears highlighted when the control does not have focus.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsAutoTab">
      <summary>
            Inidicates whether the focus will automatically move to the next control when the user enters the maximum number of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsMultiLine">
      <summary>
            Inidicates whether the control can display more than one line of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsAutoWordSelected">
      <summary>
            Specifies the basic unit used to extend a selection. 
            True specifies that the basic unit is a single character.
            false specifies that the basic unit is a whole word.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.IsWordWrapped">
      <summary>
            Indicates whether the contents of the control automatically wrap at the end of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.Text">
      <summary>
            Gets and set text of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.DropButtonStyle">
      <summary>
            Specifies the symbol displayed on the drop button
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.TextBoxActiveXControl.ShowDropButtonTypeWhen">
      <summary>
            Specifies the symbol displayed on the drop button
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.UnknownControl">
      <summary>
            Unknow control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ActiveXControls.UnknownControl.GetRelationshipData(System.String)">
      <summary>
            Gets the releated data.
            </summary>
      <param name="relId">The relationship id.</param>
      <returns>returns the releated data.</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.UnknownControl.PersistenceType">
      <summary>
            Gets the persistence method to persist an ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.UnknownControl.Data">
      <summary>
            Gets and sets the binary data of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ActiveXControls.UnknownControl.Type">
      <summary>
            Gets the type of the ActiveX control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ColorHelper">
      <summary>
            Provides helper functions about color.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorHelper.FromOleColor(System.Int32)">
      <summary>
            Convert OLE_COLOR.
            </summary>
      <param name="oleColor">The value of OLE_COLOR.</param>
      <returns>The <see cref="T:System.Drawing.Color" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorHelper.ToOleColor(System.Drawing.Color,Aspose.Cells.Workbook)">
      <summary>
            Convert color to OLE_COLOR
            </summary>
      <param name="color">The <see cref="T:System.Drawing.Color" /> object.</param>
      <param name="workbook">
      </param>
      <returns>The value of OLE_COLOR</returns>
    </member>
    <member name="T:Aspose.Cells.CalculationPrecisionStrategy">
      <summary>
            Enumerates strategies for handling calculation precision.
            Because of the precision issue of IEEE 754 Floating-Point Arithmetic, some "seemingly simple" formulas may not be calcualted as the expected result.
            Such as formula "=-0.45+0.43+0.02", when calcuating operands by '+' operator directly, the result is not zero. For such kind of precision issue,
            some special strategies may give the expected result.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.None">
      <summary>
            No strategy applied on calculation.
            When calculating just use the original double value as operand and return the result directly.
            Most efficient for performance and applicable for most cases.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.Round">
      <summary>
            Rounds the calculation result according with significant digits.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.Decimal">
      <summary>
            Uses decimal as operands when possible.
            Most inefficient for performance.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CalculationOptions">
      <summary>
            Represents options for calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.IgnoreError">
      <summary>
            Indicates if you need to hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CustomFunction">
      <summary>
            The custom formula calculation functions to extend the calculation engine.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CustomEngine">
      <summary>
            The custom formula calculation engine to extend the default calculation engine of Aspose.Cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CalcStackSize">
      <summary>
            Specifies the stack size for calculating cells recursively.
            -1 for this property means the calculation will use WorkbookSettings.CalcStackSize of corresponding workbook.
            </summary>
      <see cref="P:Aspose.Cells.WorkbookSettings.CalcStackSize" />
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.PrecisionStrategy">
      <summary>
            Specifies the strategy for processing precision of calcuation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.CustomXmlPart">
      <summary>
            Represents a Custom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPart.Data">
      <summary>
            Gets or sets the XML content of this Custom XML Data Storage Part. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPart.SchemaData">
      <summary>
            Gets or sets the XML content of this Custom XML Schema Data Storage Part. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.CustomXmlPartCollection">
      <summary>
            Represents a Custom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.CustomXmlPartCollection.Add(System.Byte[],System.Byte[])">
      <summary>
            Adds an item to the collection. 
            </summary>
      <param name="data">The XML content of this Custom XML Data Storage Part. </param>
      <param name="shemaData">The set of XML schemas that are associated with this custom XML part. </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPartCollection.Item(System.Int32)">
      <summary>
            Gets an item at the specified index. 
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.AutomaticFill">
      <summary>
            represents automatic fill.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Fill">
      <summary>
            Represents the fill format of the shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GroupFill">
      <summary>
            Represents this fill format should inherit the fill properties of the group.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.NoneFill">
      <summary>
            Represents no fill.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.SignatureLine">
      <summary>
            Represent the singature line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.ProviderId">
      <summary>
            Gets and sets the id of singature provider.
            </summary>
      <remarks>
            It's typically the CLSID of the provider com add-in.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.Signer">
      <summary>
            Gets and sets the singer.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.Title">
      <summary>
            Gets and sets the title of singer.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.Email">
      <summary>
            Gets and sets the email of signer.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.IsLine">
      <summary>
            Inidicats whether it is a singatuer line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.AllowComments">
      <summary>
            Inidicates whether comments could be attched.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.ShowSignedDate">
      <summary>
            Inidicates whether show signed date.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SignatureLine.Instructions">
      <summary>
            Gets and sets the text shown to user at signing time. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Shape">
      <summary>
            Represents the msodrawing object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.GetLockedProperty(Aspose.Cells.Drawing.ShapeLockType)">
      <summary>
            Gets the value of locked property.
            </summary>
      <param name="type">The type of the shape locked property.</param>
      <returns>Returns  the value of locked property.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.SetLockedProperty(Aspose.Cells.Drawing.ShapeLockType,System.Boolean)">
      <summary>
            Set the locked property.
            </summary>
      <param name="type">The locked type.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.AddHyperlink(System.String)">
      <summary>
            Adds a hyperlink to the shape.
            </summary>
      <param name="address">Address of the hyperlink.</param>
      <returns>Return the new hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.RemoveHyperlink">
      <summary>
            Remove the hyperlink of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.MoveToRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the shape to a specified range.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.AlignTopRightCorner(System.Int32,System.Int32)">
      <summary>
            Moves the picture to the top-right corner.
            </summary>
      <param name="topRow">the row index.</param>
      <param name="rightColumn">the column index.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.ToImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Creates the shape image and saves it to a stream in the specified format.
            </summary>
      <param name="stream">The output stream.</param>
      <param name="imageFormat">The format in which to save the image.</param>
      <remarks>
        <p>The following formats are supported: 
            .bmp, .gif, .jpg, .jpeg, .tiff, .emf.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.ToImage(System.String,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Saves the shape to a file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.ToImage(System.IO.Stream,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Saves the shape to a stream.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.ToImage(Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Returns the bitmap object of the shape .
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.UpdateSelectedValue">
      <summary>
            Update the selected value by the value of the linked cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.FormatCharacters(System.Int32,System.Int32,Aspose.Cells.Font,Aspose.Cells.StyleFlag)">
      <summary>
            Format some chararcters with the font setting.
            </summary>
      <param name="startIndex">The start index.</param>
      <param name="length">The the length.</param>
      <param name="font">The font setting.</param>
      <param name="flag">The flag of the font setting.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.FormatCharacters(System.Int32,System.Int32,Aspose.Cells.Font)">
      <summary>
            Format some chararcters with the font setting.
            </summary>
      <param name="startIndex">The start index.</param>
      <param name="length">The the length.</param>
      <param name="font">The font setting.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Shape.FormatCharacters(int startIndex, int length, Font font,StyleFlag flag) method.
            This property will be removed 12 months later since March 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
      <remarks>This method only works on shape with title.</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.GetCharacters">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the text .
            </summary>
      <returns>All Characters objects </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Shape.CalculateTextSize">
      <summary>
            Recalculate the text area
            </summary>
      <returns>Text's Size in an array(width and height).</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.MacroName">
      <summary>
            Gets and sets the name of macro.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.ZOrderPosition">
      <summary>
            Returns the position of a shape in the z-order. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Name">
      <summary>
            Gets and sets the name of the shape. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.AlternativeText">
      <summary>
            Returns or sets the descriptive (alternative) text string of the <see cref="T:Aspose.Cells.Drawing.Shape" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Title">
      <summary>
            Specifies the title (caption) of the current shape object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LineFormat">
      <summary>
            Returns a MsoLineFormat object that contains line formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.FillFormat">
      <summary>
            Returns a MsoFillFormat object that contains fill formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Fill">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Drawing.Shape.FillFormat" /> object that contains fill formatting properties for the specified shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextFrame">
      <summary>
            Returns a TextFrame object that contains the alignment and anchoring properties for the specified shape.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Shape.TextBody.TextAlignment property. 
            This property will be removed 12 months later since May 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.FormatPicture">
      <summary>
            Gets and sets the options of the picture format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsHidden">
      <summary>
            Indicates whether the object is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsLockAspectRatio">
      <summary>
            True means that don't allow changes in aspect ratio.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Rotation">
      <summary>
            Gets and sets the rotation of the shape.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Shape.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.RotationAngle">
      <summary>
            Gets and sets the rotation of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Hyperlink">
      <summary>
            Gets the hyperlink of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Id">
      <summary>
            Gets the identifier of this shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Spid">
      <summary>
            Specifies an optional string that an application can use to Identify the particular shape. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Spt">
      <summary>
            Specifies an optional number that an application can use to associate the particular shape with a defined shape type.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsGroup">
      <summary>
            Indicates whether the shape is a group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsWordArt">
      <summary>
            Indicates whether this shape is a word art.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextEffect">
      <summary>
            Returns a TextEffectFormat object that contains text-effect formatting properties for the specified shape. 
            Applies to Shape objects that represent WordArt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsLocked">
      <summary>
            True if the object is locked, False if the object can be modified when the sheet is protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsPrintable">
      <summary>
            True if the object is printable
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsPrinted">
      <summary>
            True if the object is printable
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Shape.IsPrintable property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.MsoDrawingType">
      <summary>
            Gets and sets mso drawing type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.AutoShapeType">
      <summary>
            Gets the auto shape type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Placement">
      <summary>
            Represents the way the drawing object is attached to the cells below it.
            The property controls the placement of an object on a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.UpperLeftRow">
      <summary>
            Represents upper left corner row index. 
            </summary>
      <remarks>If the shape is in the shape or in the group , UpperLeftRow will be ignored.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.UpperDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its upper left corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.UpperLeftColumn">
      <summary>
            Represents upper left corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.UpperDeltaX">
      <summary>
            Gets or sets the shape's horizontal offset from its upper left corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LowerRightRow">
      <summary>
            Represents lower right corner row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LowerDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its lower right corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LowerRightColumn">
      <summary>
            Represents lower right corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LowerDeltaX">
      <summary>
            Gets or sets the shape's horizontal  offset from its lower right corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Right">
      <summary>
            Represents the width of the shape's horizontal  offset from its lower right corner column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Bottom">
      <summary>
            Represents the width of the shape's vertical offset from its lower bottom corner row, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Width">
      <summary>
            Represents the width of shape, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.WidthInch">
      <summary>
             Represents the width of the shape, in unit of inch. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.WidthPt">
      <summary>
             Represents the width of the shape, in unit of point. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.WidthCM">
      <summary>
            Represents the width of the shape, in unit of centimeters. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Height">
      <summary>
            Represents the height of shape, in unit of pixel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HeightInch">
      <summary>
            Represents the height of the shape, in unit of inches. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HeightPt">
      <summary>
            Represents the height of the shape, in unit of points. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HeightCM">
      <summary>
            Represents the height of the shape, in unit of inches. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Left">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LeftInch">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LeftCM">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Top">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
      <remarks>If the shape is in the chart, represents the vertical offset of shape from its top border.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TopInch">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TopCM">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TopToCorner">
      <summary>
            Gets and sets the vertical offset of shape from worksheet top boder,in unit of pixel
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LeftToCorner">
      <summary>
            Gets and sets the horizonal offset of shape from worksheet left border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.X">
      <summary>
            Gets and sets the horizonal offset of shape from worksheet left border,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Y">
      <summary>
            Gets and sets the vertical offset of shape from worksheet top border,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.WidthScale">
      <summary>
            Gets and sets the width scale, in unit of percent of the original picture width.
            If the shape is not picture ,the WidthScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HeightScale">
      <summary>
             Gets and sets the height scale,in unit of percent of the original picture height.
            If the shape is not picture ,the HeightScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TopInShape">
      <summary>
            Represents the vertical offset of shape from the top border of the parent shape, 
            in unit of 1/4000 of height of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LeftInShape">
      <summary>
            Represents the horizontal offset of shape from the left border of the parent shape, 
            in unit of 1/4000 of width of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.WidthInShape">
      <summary>
            Represents the width of the shape, in unit of 1/4000 of the parent shape.
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HeightInShape">
      <summary>
            Represents the vertical offset of shape from the top border of the parent shape, in unit of 1/4000 of height of the parent shape..
            </summary>
      <remarks>Only Applies when this shape in the group or chart.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Group">
      <summary>
            Gets the group shape which contains this shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Type">
      <summary>
            Gets the auto shape type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HasLine">
      <summary>
            Gets and sets the line border of the shape is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsFilled">
      <summary>
            Indicates whether the fill format is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsFlippedHorizontally">
      <summary>
            Gets and sets whether shape is horizontally flipped .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsFlippedVertically">
      <summary>
            Gets and sets whether shape is vertically flipped .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.RelativeToOriginalPictureSize">
      <summary>
            Indicates whether shape is relative to original picture size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.InputRange">
      <summary>
            Gets or sets the worksheet range used to fill the specified combo box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextBody">
      <summary>
            Gets and ses the setting of the shape's text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Font">
      <summary>
            Represents the font of textbox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Text">
      <summary>
            Represents the string in this TextBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsRichText">
      <summary>
            Whether or not the text is rich text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.HtmlText">
      <summary>
            Gets and sets the html string which contains data and some formattings in this textbox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextVerticalOverflow">
      <summary>
            Gets and sets the text vertical overflow type of the shape which contains text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextHorizontalOverflow">
      <summary>
            Gets and sets the text horizontal overflow type of the shape which contains text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.IsTextWrapped">
      <summary>
             Gets and sets the text wrapped type of the shape which contains text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextOrientationType">
      <summary>
            Gets and sets the text orientation type of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextHorizontalAlignment">
      <summary>
            Gets and sets the text horizontal alignment type of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextVerticalAlignment">
      <summary>
            Gets and sets the text vertical alignment type of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.TextDirection">
      <summary>
             Gets/Sets the direction of the text flow for this object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.ControlData">
      <summary>
            Gets the data of control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.ActiveXControl">
      <summary>
            Gets the ActiveX control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Paths">
      <summary>
            Gets the paths of a custom geometric shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.Geometry">
      <summary>
            Gets the geometry
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Shape.ActualLowerRightRow">
      <summary>
            Get the actual bottom row.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue">
      <summary>
            Represents automatic numberic bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.BulletValue">
      <summary>
            Represents the value of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.BulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.Type">
      <summary>
            Gets the type of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.StartAt">
      <summary>
            Gets and sets the starting number of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.AutonumberScheme">
      <summary>
            Represents the scheme of automatic number.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.Bullet">
      <summary>
            Represents the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.Bullet.BulletValue">
      <summary>
            Gets bullet value
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.Bullet.Type">
      <summary>
            Gets and sets the bullet type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.BulletType">
      <summary>
            Represents the type of the bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.None">
      <summary>
            No bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.Character">
      <summary>
            Character bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.Picture">
      <summary>
            Image bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.AutoNumbered">
      <summary>
            Automatic numberic bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.CharacterBulletValue">
      <summary>
            Represents the charater bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.CharacterBulletValue.Type">
      <summary>
            Gets the type of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.CharacterBulletValue.Character">
      <summary>
            Gets and sets character of the bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.LineSpaceSizeType">
      <summary>
            Represents the unit type of line space size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.LineSpaceSizeType.Percentage">
      <summary>
            Represents in unit of a percentage of the text size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.LineSpaceSizeType.Points">
      <summary>
            Represents in unit of points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.NoneBulletValue">
      <summary>
             Represents no bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.NoneBulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.PictureBulletValue">
      <summary>
            Represents the value of the image bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.PictureBulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.PictureBulletValue.ImageData">
      <summary>
            Gets and sets image data of the bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextAutonumberScheme">
      <summary>
            Represents all automatic number scheme.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcParenBoth">
      <summary>
            (a), (b), (c), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcParenR">
      <summary>
            a), b), c), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcPeriod">
      <summary>
            a., b., c., …
            
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcParenBoth">
      <summary>
            (A), (B), (C), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcParenR">
      <summary>
            A), B), C), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcPeriod">
      <summary>
            A., B., C., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Arabic1Minus">
      <summary>
            Bidi Arabic 1 (AraAlpha) with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Arabic2Minus">
      <summary>
            Bidi Arabic 2 (AraAbjad) with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicDbPeriod">
      <summary>
            Dbl-byte Arabic numbers w/ double-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicDbPlain">
      <summary>
            Dbl-byte Arabic numbers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicParenBoth">
      <summary>
            (1), (2), (3), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicParenR">
      <summary>
            1), 2), 3), …
             </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicPeriod">
      <summary>
            1., 2., 3., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicPlain">
      <summary>
            1, 2, 3, …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumDbPlain">
      <summary>
            Dbl-byte circle numbers (1-10 circle[0x2460-], 11-arabic numbers)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumWdBlackPlain">
      <summary>
            Wingdings black circle numbers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumWdWhitePlain">
      <summary>
            Wingdings white circle numbers (0-10 circle[0x0080-],11- arabic numbers)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChsPeriod">
      <summary>
            EA: Simplified Chinese w/ single-byte period
             </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChsPlain">
      <summary>
            EA: Simplified Chinese (TypeA 1-99, TypeC 100-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChtPeriod">
      <summary>
            EA: Traditional Chinese w/ single-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChtPlain">
      <summary>
            EA: Traditional Chinese (TypeA 1-19, TypeC 20-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnChsDbPeriod">
      <summary>
            EA: Japanese w/ double-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnKorPeriod">
      <summary>
            EA: Japanese/Korean w/ single-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnKorPlain">
      <summary>
            EA: Japanese/Korean (TypeC 1-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Hebrew2Minus">
      <summary>
            Bidi Hebrew 2 with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiAlpha1Period">
      <summary>
            Hindi alphabet period - consonants
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiAlphaPeriod">
      <summary>
            Hindi alphabet period - vowels
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiNumParenR">
            /// <summary>
            Hindi numerical parentheses - right
            </summary></member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiNumPeriod">
      <summary>
            Hindi numerical period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcParenBoth">
      <summary>
            (i), (ii), (iii), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcParenR">
      <summary>
            i), ii), iii), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcPeriod">
      <summary>
            i., ii., iii., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcParenBoth">
      <summary>
            (I), (II), (III), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcParenR">
      <summary>
            I), II), III), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcPeriod">
      <summary>
            I., II., III., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaParenBoth">
      <summary>
            Thai alphabet parentheses - both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaParenR">
      <summary>
            Thai alphabet parentheses - right
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaPeriod">
      <summary>
            Thai alphabet period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumParenBoth">
      <summary>
            Thai numerical parentheses - both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumParenR">
      <summary>
            Thai numerical parentheses - right
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumPeriod">
      <summary>
            Thai numerical period
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Geometry">
      <summary>
            Represents a geometric shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Geometry.ShapeAdjustValues">
      <summary>
            Gets a collection of shape adjust value
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LineStyle">
      <summary>
            Represents all setting of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.CompoundType">
      <summary>
             Specifies the line compound type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.DashType">
      <summary>
             Specifies the line dash type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.CapType">
      <summary>
             Specifies the ending caps.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.JoinType">
      <summary>
            Specifies the line join type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.BeginArrowType">
      <summary>
            Gets and sets the begin arrow type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.BeginArrowWidth">
      <summary>
            Gets and sets the begin arrow width type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.BeginArrowLength">
      <summary>
            Gets and sets the begin arrow length type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.EndArrowType">
      <summary>
            Gets and sets the end arrow type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.EndArrowWidth">
      <summary>
            Gets and sets the end arrow width type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.EndArrowLength">
      <summary>
            Gets and sets the end arrow length type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineStyle.Weight">
      <summary>
            Gets or sets the weight of the line in unit of points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeFormat">
      <summary>
            Represents the format of the shape or text.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.ClearGlowEffect">
      <summary>
            Clears the glow effect of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.HasGlowEffect">
      <summary>
            Indicates if the shape has glow effect data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.HasFormat3D">
      <summary>
            Indicates if the shape has 3d format data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.ClearFormat3D">
      <summary>
            Clears the 3D shape properties of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.ClearShadowEffect">
      <summary>
            Clears the shadow effect of the chart element or shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeFormat.HasShadowEffect">
      <summary>
            Indicates if the shape has shadow effect data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.Fill">
      <summary>
            Gets fill
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.FillType">
      <summary>
            Gets fill type
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.LineStyle">
      <summary>
            Gets line style
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.LineFill">
      <summary>
            Gets the line fill format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.LineFillType">
      <summary>
            Gets and sets the fill format type of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.ShadowEffect">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.ShapeFormat.ShadowEffect" /> object that specifies shadow effect for the chart element or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.GlowEffect">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.ShapeFormat.GlowEffect" /> object that specifies glow effect for the chart element or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeFormat.SoftEdgeRadius">
      <summary>
            Gets and sets the radius of blur to apply to the edges, in unit of points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextFontAlignType">
      <summary>
            Represents the different types of font alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Automatic">
      <summary>
            When the text flow is horizontal or simple vertical same as fontBaseline 
            but for other vertical modes same as fontCenter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Bottom">
      <summary>
            The letters are anchored to the very bottom of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Baseline">
      <summary>
            The letters are anchored to the bottom baseline of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Center">
      <summary>
            The letters are anchored between the two baselines of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Top">
      <summary>
            The letters are anchored to the top baseline of a single dline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.ShapeTextAlignment">
      <summary>
            Represents the setting of shape's text alignment;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.IsTextWrapped">
      <summary>
             Gets and sets the text wrapped type of the shape which contains text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.TextVerticalOverflow">
      <summary>
            Gets and sets the text vertical overflow type of the text box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.TextHorizontalOverflow">
      <summary>
            Gets and sets the text horizontal overflow type of the text box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.RotationAngle">
      <summary>
             Gets and sets the rotation of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.TextVerticalType">
      <summary>
            Gets and sets the text direction.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.AutoSize">
      <summary>
            Indicates if size of shape is adjusted automatically according to its content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.TextShapeType">
      <summary>
             Gets and set the transform type of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.TopMarginPt">
      <summary>
            Returns the top margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.BottomMarginPt">
      <summary>
            Returns the bottom margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.LeftMarginPt">
      <summary>
            Returns the left margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.ShapeTextAlignment.RightMarginPt">
      <summary>
            Returns the right margin in unit of Points
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextNodeType">
      <summary>
            Represents the node type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.TextRun">
      <summary>
            Represents the text node.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.TextParagraph">
      <summary>
            Represents the text paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.Equation">
      <summary>
            Represents the equation text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextParagraph">
      <summary>
            Represents the text paragraph setting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.Bullet">
      <summary>
            Gets the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.Type">
      <summary>
             Gets the type of text node.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.LineSpaceSizeType">
      <summary>
            Gets and sets the amount of vertical white space that will be used within a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.LineSpace">
      <summary>
            Gets and sets the amount of vertical white space that will be used within a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.SpaceAfterSizeType">
      <summary>
            Gets and sets the amount of vertical white space that will be present after a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.SpaceAfter">
      <summary>
            Gets and sets the amount of vertical white space that will be present after a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.SpaceBeforeSizeType">
      <summary>
            Gets and sets the amount of vertical white space that will be present before a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.SpaceBefore">
      <summary>
            Gets and sets the amount of vertical white space that will be present before a paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.Stops">
      <summary>
            Gets tab stop list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.IsLatinLineBreak">
      <summary>
            Specifies whether a Latin word can be broken in half and wrapped onto the next line without a hyphen being added.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.IsEastAsianLineBreak">
      <summary>
            Specifies whether an East Asian word can be broken in half and wrapped onto the next line without a hyphen being added.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.IsHangingPunctuation">
      <summary>
            Specifies whether punctuation is to be forcefully laid out on a line of text or put on a different line of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.RightMargin">
      <summary>
            pecifies the right margin of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.LeftMargin">
      <summary>
            pecifies the left margin of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.FirstLineIndent">
      <summary>
            Specifies the indent size that will be applied to the first line of text in the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.FontAlignType">
      <summary>
            Determines where vertically on a line of text the actual words are positioned. This deals
            with vertical placement of the characters with respect to the baselines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.AlignmentType">
      <summary>
            Gets and sets the text horizontal alignment type of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.DefaultTabSize">
      <summary>
            Gets and sets the default size for a tab character within this paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextParagraph.Children">
      <summary>
            Gets all text runs in this paragraph.
            If this paragraph is empty, return paragraph itself.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabAlignmentType">
      <summary>
            Represents the text tab alignment types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Center">
      <summary>
            The text at this tab stop is center aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Decimal">
      <summary>
            At this tab stop, the decimals are lined up.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Left">
      <summary>
            The text at this tab stop is left aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Right">
      <summary>
            The text at this tab stop is right aligned.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabStop">
      <summary>
            Represents tab stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStop.TabAlignment">
      <summary>
            Specifies the alignment that is to be applied to text using this tab stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStop.TabPosition">
      <summary>
            Specifies the position of the tab stop relative to the left margin.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabStopCollection">
      <summary>
            Represents the list of all tab stops.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.TextTabStopCollection.Add(Aspose.Cells.Drawing.Texts.TextTabAlignmentType,System.Double)">
      <summary>
            Adds a tab stop.
            </summary>
      <param name="tabAlignment">
      </param>
      <param name="tabPosition">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStopCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Drawing.Texts.TextTabStop" /> by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextVerticalType">
      <summary>
            Represents the text direct type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical">
      <summary>
            East Asian Vertical display.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Horizontal">
      <summary>
            Horizontal text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.VerticalLeftToRight">
      <summary>
            Displayed vertical and the text flows top down then LEFT to RIGHT
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical90">
      <summary>
            Each line is 90 degrees rotated clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical270">
      <summary>
            Each line is 270 degrees rotated clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Stacked">
      <summary>
            Determines if all of the text is vertical
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.StackedRightToLeft">
      <summary>
            Specifies that vertical WordArt should be shown from right to left rather than left to right.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ExternalConnection">
      <summary>
            Specifies an external data connection
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.Id">
      <summary>
            Gets the id of the connection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.Type">
      <summary>
            Gets or Sets the external connection DataSource type. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.SourceFile">
      <summary>
            Used when the external data source is file-based. When a connection to such a data 
            source fails, the spreadsheet application attempts to connect directly to this file. May be 
            expressed in URI or system-specific file path notation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.SSOId">
      <summary>
            Identifier for Single Sign On (SSO) used for authentication between an intermediate 
            spreadsheetML server and the external data source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.SavePassword">
      <summary>
            True if the password is to be saved as part of the connection string; otherwise, False.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.SaveData">
      <summary>
            True if the external data fetched over the connection to populate a table is to be saved
            with the workbook; otherwise, false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.RefreshOnLoad">
      <summary>
            True if this connection should be refreshed when opening the file; otherwise, false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.ReConnectionMethod">
      <summary>
            Specifies what the spreadsheet application should do when a connection fails.The default value
            is ReConnectionMethodType.Required.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.OnlyUseConnectionFile">
      <summary>
            Indicates whether the spreadsheet application should always and only use the 
            connection information in the external connection file indicated by the odcFile attribute 
            when the connection is refreshed.  If false, then the spreadsheet application 
            should follow the procedure indicated by the reconnectionMethod attribute
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.OdcFile">
      <summary>
            Specifies the full path to external connection file from which this connection was 
            created. If a connection fails during an attempt to refresh data, and reconnectionMethod=1, 
            then the spreadsheet application will try again using information from the external connection file 
            instead of the connection object embedded within the workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.IsNew">
      <summary>
            True if the connection has not been refreshed for the first time; otherwise, false.  This 
            state can happen when the user saves the file before a query has finished returning.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.Name">
      <summary>
            Specifies the name of the connection. Each connection must have a unique name. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.KeepAlive">
      <summary>
            True when the spreadsheet application should make efforts to keep the connection 
            open. When false, the application should close the connection after retrieving the 
            information.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.RefreshInternal">
      <summary>
            Specifies the number of minutes between automatic refreshes of the connection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.ConnectionId">
      <summary>
            Specifies The unique identifier of this connection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.ConnectionDescription">
      <summary>
            Specifies the user description for this connection
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.IsDeleted">
      <summary>
            Indicates whether the associated workbook connection has been deleted.  true if the
            connection has been deleted; otherwise, false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.Credentials">
      <summary>
            Specifies the authentication method to be used when establishing (or re-establishing) the connection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.BackgroundRefresh">
      <summary>
            Indicates whether the connection can be refreshed in the background (asynchronously). 
            true if preferred usage of the connection is to refresh asynchronously in the background; 
            false if preferred usage of the connection is to refresh synchronously in the foreground.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnection.Parameters">
      <summary>
            Gets <see cref="T:Aspose.Cells.ExternalConnections.ConnectionParameterCollection" /> for an ODBC or web query.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtLoadStyleStrategy">
      <summary>
            Specifies how to apply style for parsed values when converting string value to number or datetime.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.None">
      <summary>
            Does not set style for the parsed value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.BuiltIn">
      <summary>
            Set the style as built-in number/datetime when the parsed value are plain numeric/datetime values.
            </summary>
      <remarks>
            When ms excel parsing datetime or numeric values according to user's input(such as CSV file),
            the formatting of those values may be changed, such as
            leading/tailing zeros of number, year/month/day order of datetime, ...etc.
            This type is for simulating ms excel's behavior.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.ExactFormat">
      <summary>
            Set the exact custom format for the parsed value to make the formatted value be same with the original input one.
            </summary>
    </member>
    <member name="T:Aspose.Cells.NamespaceDoc">
      <summary>
            Contains all basic classes of Aspose.Cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.NamespaceDoc">
      <summary>
            Contains all classes of chart and sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DigitalSignatures.NamespaceDoc">
      <summary>
            Contains all classes of DigitalSignature.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.NamespaceDoc">
      <summary>
            Contains all classes of shapes and fill format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.NamespaceDoc">
      <summary>
            Contains all classes of ActiveXControl.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.NamespaceDoc">
      <summary>
            Contains all classes of Texts.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.NamespaceDoc">
      <summary>
            Contains all classes of external connections.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.NamespaceDoc">
      <summary>
            Contains all classes of smart tag.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.NamespaceDoc">
      <summary>
            Contains all classes of loading and saving metadata.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.NamespaceDoc">
      <summary>
            Contains all classes of PivotTable.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.NamespaceDoc">
      <summary>
            Contains all core classes of Aspose.Cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.NamespaceDoc">
      <summary>
            Contains all classes of Rendering image and pdf.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfSecurity.NamespaceDoc">
      <summary>
            Contains all security options of Rendering pdf.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.NamespaceDoc">
      <summary>
            Contains all classes of Table(List Object).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.NamespaceDoc">
      <summary>
            Contains all classes of VBA project.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.CustomGeometry">
      <summary>
            Represents a custom geometric shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.CustomGeometry.Paths">
      <summary>
            Gets path collection information when shape is a NotPrimitive autoshape
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeGuide">
      <summary>
            Encapsulates a shape guide specifies the precense of a shape guide that will be used to 
            govern the geometry of the specifiedshape
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeGuide.Value">
      <summary>
            Gets or sets value of this guide
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeGuideCollection">
      <summary>
            Encapsulates a collection of shape guide
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeGuideCollection.Item(System.Int32)">
      <summary>
            Gets a shape guide by index
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeLockType">
      <summary>
            Represents type of the property to be locked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Group">
      <summary>
            Group
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.AdjustHandles">
      <summary>
            AdjustHandles
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Text">
      <summary>
            Text
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Points">
      <summary>
            Points
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Crop">
      <summary>
            Crop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Selection">
      <summary>
            Selection
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Move">
      <summary>
            Move
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.AspectRatio">
      <summary>
            AspectRatio
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Rotation">
      <summary>
            Rotation
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Ungroup">
      <summary>
            Ungroup
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Resize">
      <summary>
            Resize
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.ShapeType">
      <summary>
            ShapeType
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Arrowhead">
      <summary>
            Arrowhead
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeSegmentPathCollection">
      <summary>
            Represents a creation path consisting of a series of moves, lines and curves that when combined will form a geometric shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeSegmentPathCollection.Add(Aspose.Cells.Drawing.ShapePathType)">
      <summary>
            Add a segment path in creation path.
            </summary>
      <param name="type">The path type.</param>
      <returns>Returns the position of <see cref="T:Aspose.Cells.Drawing.ShapeSegmentPath" /> object in the list. </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeSegmentPathCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Drawing.ShapeSegmentPath" /> object.
            </summary>
      <param name="index">The index.</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Drawing.ShapeSegmentPath" /> object.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePathPoint">
      <summary>
            Represents an x-y coordinate within the path coordinate space.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePathPoint.X">
      <summary>
            Gets and sets x coordinate for this position coordinate.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePathPoint.Y">
      <summary>
            Gets y coordinate for this position coordinate.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePathPointCollection">
      <summary>
            Represents all shape path points.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePathPointCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a path point.
            </summary>
      <param name="x">The x coordinate.</param>
      <param name="y">The y coordinate.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePathPointCollection.Item(System.Int32)">
      <summary>
            Gets shape path point by index.
            </summary>
      <param name="index">The index</param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.ShapePathPoint" /> object</returns>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ExternalConnectionCollection">
      <summary>
            Specifies the <see cref="T:Aspose.Cells.ExternalConnections.ExternalConnection" /> collection
            </summary>
      <example>
        <code>
            [C#]
            Workbook wb = new Workbook("connection.xlsx");
            ExternalConnectionCollection dataConns = wb.DataConnections;
            ExternalConnection dataConn = null;
            for (int i = 0; i &lt; dataConns.Count; i++)
            {
                dataConn = dataConns[i];
                //get external connection id
                Console.WriteLine(dataConn.ConnectionId);
            }
            
            [Visual Basic]
            Dim wb As Workbook = New Workbook("connection.xlsx")
            Dim dataConns As ExternalConnectionCollection = wb.DataConnections
            Dim dataConn As ExternalConnection
            Dim count As Integer = dataConns.Count - 1
            Dim i As Integer
            For i = 0 To count Step 1
                dataConn = dataConns(i)
                'get external connection id
                Console.WriteLine(dataConn.ConnectionId)
            Next
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ExternalConnections.ExternalConnectionCollection.GetExternalConnectionById(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalConnections.ExternalConnection" /> element with the specified id.
             </summary>
      <param name="connId">external connection id</param>
      <returns>The element with the specified id.</returns>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnectionCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalConnections.ExternalConnection" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ExternalConnectionCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.ExternalConnections.ExternalConnection" /> element with the specified name.
            </summary>
      <param name="connectionName">data connection name</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.DBConnection">
      <summary>
            Specifies all properties associated with an ODBC or OLE DB external data connection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.DBConnection.ConnectionInfo">
      <summary>
            The connection information string is used to make contact with an OLE DB or ODBC data source. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.DBConnection.CommandType">
      <summary>
            Specifies the OLE DB command type. 
            1. Query specifies a cube name
            2. Query specifies a SQL statement
            3. Query specifies a table name
            4. Query specifies that default information has been given, and it is up to the provider how to interpret.
            5. Query is against a web based List Data Provider.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.DBConnection.Command">
      <summary>
            The string containing the database command to pass to the data provider API that will 
            interact with the external source in order to retrieve data
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.WebQueryConnection">
      <summary>
             Specifies the properties for a web query source. A web query will retrieve data from HTML tables, 
             and can also supply HTTP "Get" parameters to be processed by the web server in generating the HTML by 
             including the parameters and parameter elements.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsXml">
      <summary>
            true if the web query source is XML (versus HTML), otherwise false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsXl97">
      <summary>
            This flag exists for backward compatibility with older existing spreadhseet files, and is set
            to true if this web query was created in Microsoft Excel 97.
            This is an optional attribute that can be ignored.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsXl2000">
      <summary>
            This flag exists for backward compatibility with older existing spreadsheet files, and is set
            to true if this web query was refreshed in a spreadsheet application newer than or equal
            to Microsoft Excel 2000.
            This is an optional attribute that can be ignored.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.Url">
      <summary>
            URL to use to refresh external data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsTextDates">
      <summary>
            Flag indicating whether dates should be imported into cells in the worksheet as text rather than dates.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsSourceData">
      <summary>
            Flag indicating that XML source data should be imported instead of the HTML table itself.        
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.Post">
      <summary>
            Returns or sets the string used with the post method of inputting data into a web server
            to return data from a web query.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsParsePre">
      <summary>
            Flag indicating whether data contained within HTML PRE tags in the web page is
            parsed into columns when you import the page into a query table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsHtmlTables">
      <summary>
            Flag indicating whether web queries should only work on HTML tables.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.HtmlFormat">
      <summary>
            How to handle formatting from the HTML source when bringing web query data into the
            worksheet. Relevant when sourceData is True.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsFirstRow">
      <summary>
            Flag indicating whether to parse all tables inside a PRE block with the same width settings
            as the first row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.EditPage">
      <summary>
            The URL of the user-facing web page showing the web query data. This URL is persisted
            in the case that sourceData="true" and url has been redirected to reference an XML file.
            Then the user-facing page can be shown in the UI, and the XML data can be retrieved
            behind the scenes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.WebQueryConnection.IsConsecutive">
      <summary>
            Flag indicating whether consecutive delimiters should be treated as just one delimiter.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ConnectionDataSourceType">
      <summary>
            Specifies external database source type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.ODBCBasedSource">
      <summary>
            ODBC-based source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.DAOBasedSource">
      <summary>
            DAO-based source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.FileBasedDataBaseSource">
      <summary>
            File based database source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.WebQuery">
      <summary>
            Web query
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.OLEDBBasedSource">
      <summary>
            OLE DB-based source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.TextBasedSource">
      <summary>
            Text-based source
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.ADORecordSet">
      <summary>
            ADO record set
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.DSP">
      <summary>
            DSP
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.Unknown">
      <summary>
            unknown database source type ,it will cause error
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ConnectionParameter">
      <summary>
            Specifies properties about any parameters used with external data connections
            Parameters are valid for ODBC and web queries.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.SqlType">
      <summary>
            SQL data type of the parameter. Only valid for ODBC sources.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.RefreshOnChange">
      <summary>
            Flag indicating whether the query should automatically refresh when the contents of a 
            cell that provides the parameter value changes. If true, then external data is refreshed 
            using the new parameter value every time there's a change. If false, then external data 
            is only refreshed when requested by the user, or some other event triggers refresh (e.g., workbook opened).
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.Prompt">
      <summary>
            Prompt string for the parameter. Presented to the spreadsheet user along with input UI 
            to collect the parameter value before refreshing the external data. Used only when 
            parameterType = prompt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.Type">
      <summary>
            Type of parameter used.
            If the parameterType=value, then the value from boolean, double, integer, 
            or string will be used.  In this case, it is expected that only one of 
            {boolean, double, integer, or string} will be specified.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.Name">
      <summary>
            The name of the parameter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.CellReference">
      <summary>
            Cell reference indicating which cell's value to use for the query parameter. Used only when parameterType is cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameter.Value">
      <summary>
            Non-integer numeric value,Integer value,String value or Boolean value
            to use as the query parameter. Used only when parameterType is value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ConnectionParameterCollection">
      <summary>
            Specifies the <see cref="T:Aspose.Cells.ExternalConnections.ConnectionParameter" /> collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameterCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalConnections.ConnectionParameter" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.ExternalConnections.ConnectionParameterCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.ExternalConnections.ConnectionParameter" /> element with the specified name.
            </summary>
      <param name="connParamName">connection parameter name</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ConnectionParameterType">
      <summary>
            Specifies the parameter type of external connnection
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionParameterType.Cell">
      <summary>
            Get the parameter value from a cell on each refresh.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionParameterType.Prompt">
      <summary>
            Prompt the user on each refresh for a parameter value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ConnectionParameterType.Value">
      <summary>
            Use a constant value on each refresh for the parameter value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.CredentialsMethodType">
      <summary>
            Specifies Credentials method used for server access.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.CredentialsMethodType.Integrated">
      <summary>
            Integrated Authentication
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.CredentialsMethodType.None">
      <summary>
            No Credentials
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.CredentialsMethodType.Prompt">
      <summary>
            Prompt Credentials
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.CredentialsMethodType.Stored">
      <summary>
            Stored Credentials
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.OLEDBCommandType">
      <summary>
            Specifies the OLE DB command type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.OLEDBCommandType.CubeName">
      <summary>
            Specifies a cube name
            </summary>
      <remarks>unsupported</remarks>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.OLEDBCommandType.SqlStatement">
      <summary>
            Specifies a SQL statement
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.OLEDBCommandType.TableName">
      <summary>
            Specifies a table name
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.OLEDBCommandType.DefaultInformation">
      <summary>
            Specifies that default information has been given, and it is up to the provider how to interpret.
            </summary>
      <remarks>unsupported</remarks>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.OLEDBCommandType.WebBasedList">
      <summary>
            Specifies a query which is against a web based List Data Provider.
            </summary>
      <remarks>unsupported</remarks>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.ReConnectionMethodType">
      <summary>
            Specifies what the spreadsheet application should do when a connection fails.  
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ReConnectionMethodType.Required">
      <summary>
            On refresh use the existing connection information and if it ends up being invalid 
            then get updated connection information, if available from the external connection file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ReConnectionMethodType.Always">
      <summary>
            On every refresh get updated connection information from the external connection file, 
            if available, and use that instead of the existing connection information. 
            In this case the data refresh will fail if the external connection file is unavailable.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.ReConnectionMethodType.Never">
      <summary>
            Never get updated connection information from the external connection file 
            even if it is available and even if the existing connection information is invalid
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.SqlDataType">
      <summary>
            Specifies SQL data type of the parameter. Only valid for ODBC sources. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlUnsignedOffset">
      <summary>
            sql unsigned offset
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlSignedOffset">
      <summary>
            sql signed offset
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlGUID">
      <summary>
            sql guid
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlWLongVarchar">
      <summary>
            sql wide long variable char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlWVarchar">
      <summary>
            sql wide variable char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlWChar">
      <summary>
            sql wide char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlBit">
      <summary>
            sql bit
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlTinyInt">
      <summary>
            sql tiny int
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlBigInt">
      <summary>
            sql big int
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlLongVarBinary">
      <summary>
            sql long variable binary
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlVarBinary">
      <summary>
            sql variable binary
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlBinary">
      <summary>
            sql binary
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlLongVarChar">
      <summary>
            sql long variable char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlUnknownType">
      <summary>
            sql unknown type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlChar">
      <summary>
            sql char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlNumeric">
      <summary>
            sql numeric
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlDecimal">
      <summary>
            sql decimal
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlInteger">
      <summary>
            sql integer
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlSmallInt">
      <summary>
            sql small int
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlFloat">
      <summary>
            sql float
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlReal">
      <summary>
            sql real
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlDouble">
      <summary>
            sql double
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlTypeDate">
      <summary>
            sql date type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlTypeTime">
      <summary>
            sql time type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlTypeTimestamp">
      <summary>
            sql timestamp type
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlVarChar">
      <summary>
            sql variable char
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalYear">
      <summary>
            sql interval year
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalMonth">
      <summary>
            sql interval month
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalDay">
      <summary>
            sql interval day
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalHour">
      <summary>
            sql interval hour
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalMinute">
      <summary>
            sql interval minute
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalSecond">
      <summary>
            sql interval second
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalYearToMonth">
      <summary>
            sql interval year to month
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalDayToHour">
      <summary>
            sql interval day to hour
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalDayToMinute">
      <summary>
            sql interval day to minute
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalDayToSecond">
      <summary>
            sql interval day to second
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalHourToMinute">
      <summary>
            sql interval hour to minute
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalHourToSecond">
      <summary>
            sql interval hour to second
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExternalConnections.SqlDataType.SqlIntervalMinuteToSecond">
      <summary>
            sql interval minute to second
            </summary>
    </member>
    <member name="T:Aspose.Cells.FileFormatInfo">
      <summary>
            Contains data returned by <see cref="T:Aspose.Cells.FileFormatUtil" /> file format detection methods. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.IsProtectedByRMS">
      <summary>
            Gets whether the file is protected by Microsoft Rights Management Server.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.IsEncrypted">
      <summary>
            Returns true if the document is encrypted and requires a password to open. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.FileFormatType">
      <summary>
            Gets the detected file format. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.LoadFormat">
      <summary>
            Gets the detected load format. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.LightCellsDataHandler">
      <summary>
            Represents cells data handler for reading large spreadsheet files in light weight mode. 	
            </summary>
      <remarks>
            When reading a workbook by this mode, <see cref="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)" /> will be checked when reading every worksheet in the workbook.
            For one sheet, if <see cref="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)" /> gives true, then all data and properties of rows/cells of this sheet will be checked
            and processed by the implementation of this interface. For every row, <see cref="M:Aspose.Cells.LightCellsDataHandler.StartRow(System.Int32)" /> will be called to check whether it need to be processed.
            If a row needs to be processed, properties of this row will be read firstly and user can access its properties by <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" />.
            if row's cells need to be processed too, then <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" /> should returns true and then <see cref="M:Aspose.Cells.LightCellsDataHandler.StartCell(System.Int32)" /> will be
            called for every existing cell in this row to check whether one cell need to be processed. If one cell needs to be processed,
            then <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessCell(Aspose.Cells.Cell)" /> will be called to process the cell by the implementation of this interface.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)">
      <summary>
            Starts to process a worksheet.
            </summary>
      <remarks>
            It will be called before reading cells data of a worksheet.
            </remarks>
      <param name="sheet">the worksheet to read cells data.</param>
      <returns>
            whether this sheet's cells data needs to be processed. false to ignore this sheet.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartRow(System.Int32)">
      <summary>
            Prepares to process a row.
            </summary>
      <param name="rowIndex">the index of next row to be processed</param>
      <returns>whether this row(properties or cells data) needs to be processed. false to ignore this row and its cells and check the next row.</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)">
      <summary>
            Starts to process one row.
            </summary>
      <remarks>
            It will be called after row's properties such as height, style, ...etc. have been read. However, cells in this row has not been read yet.
            </remarks>
      <param name="row">
            Row object which is being processed currently.
            </param>
      <returns>whether this row's cells need to be processed. false to ignore all cells in this row.</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartCell(System.Int32)">
      <summary>
            Prepares to process a cell.
            </summary>
      <remarks>
            It will be called when reaching an existing cell in current row. Current row is the row of last call of <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" />.
            </remarks>
      <param name="columnIndex">column index of the cell to be processed</param>
      <returns>whether this cell needs to be processed. false to ignore the cell and check the next one until reach the end of cells data of current row</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.ProcessCell(Aspose.Cells.Cell)">
      <summary>
            Starts to process one cell.
            </summary>
      <remarks>
            It will be called after one cell's data has been read.
            </remarks>
      <param name="cell">
            Cell object which is being processed currently
            </param>
      <returns>whether this cell needs to be kept in cells model of current sheet.
            Commonly it should be false so that all cells will not be kept in memory after being processed and then memory be saved.
            For some special purpose such as user needs to access some cells later after the whole workbook having been processed,
            user can make this method return true to keep those special cells in Cells model and access them later by APIs such as Cells[row, column].
            However, keeping cells data in Cells model will requires more memory and if all cells are kept then reading template file
            in LightCells mode will become same with reading it in normal way.</returns>
    </member>
    <member name="T:Aspose.Cells.LoadDataFilterOptions">
      <summary>
            Represents the options to filter data when loading workbook from template.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.None">
      <summary>
            Load nothing
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.All">
      <summary>
            Load all
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellBlank">
      <summary>
            Load cells whose value is blank
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellString">
      <summary>
            Load cells whose value is string
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellNumeric">
      <summary>
            Load cells whose value is numeric(including datetime)
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellError">
      <summary>
            Load cells whose value is error
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellBool">
      <summary>
            Load cells whose value is bool
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellValue">
      <summary>
            Load cells value(all value types) only
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Style">
      <summary>
            Load styles for cell formatting
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Formula">
      <summary>
            Load formulas including defined Names
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellData">
      <summary>
            Load cells data including values, formulas and formattings
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.DocumentProperties">
      <summary>
            Load document properties
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Chart">
      <summary>
            Load charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Shape">
      <summary>
            Load shapes
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.MergedArea">
      <summary>
            Load merged cells
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.ConditionalFormatting">
      <summary>
            Load conditional formattings
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.DataValidation">
      <summary>
            Load data validations
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.PivotTable">
      <summary>
            Load pivot tables
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Table">
      <summary>
            Load tables
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Settings">
      <summary>
            Load settings for workbook and worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillType">
      <summary>
            Fill format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Solid">
      <summary>
            Solid fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Gradient">
      <summary>
            Gradient fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Texture">
      <summary>
            Texture fill format(inculdes picuture fill).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Pattern">
      <summary>
            Pattern fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Group">
      <summary>
            Inherit the fill properties of the group.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.SolidFill">
      <summary>
            Encapsulates the object that represents solid fill format
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SolidFill.Color">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SolidFill.CellsColor">
      <summary>
            Gets and sets the <see cref="P:Aspose.Cells.Drawing.SolidFill.CellsColor" /> oject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.SolidFill.Transparency">
      <summary>
            Returns or sets the degree of transparency of the area as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingIcon">
      <summary>
            Represents  the custom  icon of conditional formatting rule.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIcon.GetIconImageData(Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Get the icon set data
            </summary>
      <param name="type">icon's type</param>
      <param name="index"> icon's index</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.ImageData">
      <summary>
            Gets the icon set data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.Type">
      <summary>
            Gets and sets the icon set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.Index">
      <summary>
            Gets and sets the icon's index in the icon set.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingIconCollection">
      <summary>
             Represents  a collection of <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             Worksheet sheet = workbook.Worksheets[0];
             
             //Get Conditional Formattings
             ConditionalFormattingCollection cformattings = sheet.ConditionalFormattings;
             
             //Adds an empty conditional formatting
             int index = cformattings.Add();
             
             //Get newly added Conditional formatting
             FormatConditionCollection fcs = cformattings[index];
             
             //Sets the conditional format range.
             CellArea ca = new CellArea();
             
             ca.StartRow = 0;
             
             ca.EndRow = 0;
             
             ca.StartColumn = 0;
             
             ca.EndColumn = 0;
             
             fcs.AddArea(ca);
             
             ca = new CellArea();
             
             ca.StartRow = 1;
             
             ca.EndRow = 1;
             
             ca.StartColumn = 1;
             
             ca.EndColumn = 1;
             
             fcs.AddArea(ca);
             
             //Sets condition
              int idx = fcs.AddCondition(FormatConditionType.IconSet);
              
              FormatCondition cond = fcs[idx];
                
              //Sets condition's type
              cond.IconSet.Type = IconSetType.ArrowsGray3;
             
             //Add custom iconset condition.
              ConditionalFormattingIcon cfIcon = cond.IconSet.CfIcons[0];
              
              cfIcon.Type = IconSetType.Arrows3;
              
              cfIcon.Index = 0;
              
              ConditionalFormattingIcon cfIcon1 = cond.IconSet.CfIcons[1];
              
               cfIcon1.Type = IconSetType.ArrowsGray3;
               
               cfIcon1.Index = 1;
               
               ConditionalFormattingIcon cfIcon2 = cond.IconSet.CfIcons[2];
               
               cfIcon2.Type = IconSetType.Boxes5;
               
               cfIcon2.Index = 2;
             
             //Saving the Excel file
             workbook.Save("C:\\output.xls");
             
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As New Workbook()
             
             Dim sheet As Worksheet = workbook.Worksheets(0)
             
             'Get Conditional Formattings
             Dim cformattings As ConditionalFormattingCollection = sheet.ConditionalFormattings
             
             'Adds an empty conditional formatting
             Dim index As Integer = cformattings.Add()
             
             'Get newly added Conditional formatting
             Dim fcs As FormatConditionCollection = cformattings(index)
             
             'Sets the conditional format range.
             Dim ca As New CellArea()
             
             ca.StartRow = 0
             
             ca.EndRow = 0
             
             ca.StartColumn = 0
             
             ca.EndColumn = 0
             
             fcs.AddArea(ca)
             
             ca = New CellArea()
             
             ca.StartRow = 1
             
             ca.EndRow = 1
             
             ca.StartColumn = 1
             
             ca.EndColumn = 1
             
             fcs.AddArea(ca)
             
             //Sets condition
             Dim idx As Integer =fcs.AddCondition(FormatConditionType.IconSet)
             
             Dim cond As FormatCondition=fcs[idx]
             
             //Sets condition's type
             cfIcon.Type = IconSetType.ArrowsGray3
             
             'Add custom iconset  condition.
             Dim cfIcon As ConditionalFormattingIcon = cond.IconSet.CfIcons[0]
             
             cfIcon.Type = IconSetType.Arrows3
            
             cfIcon.Index=0
             
             Dim cfIcon1 As ConditionalFormattingIcon = cond.IconSet.CfIcons[1]
             
             cfIcon1.Type = IconSetType.ArrowsGray3
             
             cfIcon1.Index=1
             
             Dim cfIcon2 As ConditionalFormattingIcon = cond.IconSet.CfIcons[2]
             
             cfIcon2.Type = IconSetType.Boxes5
             
             cfIcon2.Index=2
             
             'Saving the Excel file
             workbook.Save("C:\output.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIconCollection.Add(Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> object.
            </summary>
      <param name="type">The value type.</param>
      <param name="index">The Index.</param>
      <returns>Returns the index of new object in the list.</returns>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIconCollection.Add(Aspose.Cells.ConditionalFormattingIcon)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> object.
            </summary>
      <param name="cficon">Returns the index of new object in the list.</param>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIconCollection.Item(System.Int32)">
      <summary>
            Gets the ConditionalFormattingIcon element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.DataBarAxisPosition">
      <summary>
            Specifies the axis position for a range of cells with conditional formatting as data bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisAutomatic">
      <summary>
            Display the axis at a variable position based on the ratio of the minimum negative value to the maximum positive value in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction. 
            When all values are positive or all values are negative, no axis is displayed.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.Automatic enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisMidpoint">
      <summary>
            Display the axis at the midpoint of the cell regardless of the set of values in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.Midpoint enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisNone">
      <summary>
            No axis is displayed, and both positive and negative values are displayed in the left-to-right direction.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.None enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.Automatic">
      <summary>
            Display the axis at a variable position based on the ratio of the minimum negative value to the maximum positive value in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction. 
            When all values are positive or all values are negative, no axis is displayed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.Midpoint">
      <summary>
            Display the axis at the midpoint of the cell regardless of the set of values in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.None">
      <summary>
            No axis is displayed, and both positive and negative values are displayed in the left-to-right direction.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarBorder">
      <summary>
            Represents the border of the data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBarBorder.Color">
      <summary>
            Gets or sets the border's color of data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBarBorder.Type">
      <summary>
            Gets or sets the border's type of data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarBorderType">
      <summary>
            Specifies the border type of a data bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.DataBarBorderNone">
      <summary>
            The data bar has no border.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarBorderType.None enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.DataBarBorderSolid">
      <summary>
            The data bar has a solid border.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarBorderType.Solid enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.None">
      <summary>
            The data bar has no border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.Solid">
      <summary>
            The data bar has a solid border.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarFillType">
      <summary>
            Specifies how a data bar is filled with color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.DataBarFillSolid">
      <summary>
            The data bar is filled with solid color.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarFillType.Solid enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.DataBarFillGradient">
      <summary>
            The data bar is filled with a color gradient.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarFillType.Gradient enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.Solid">
      <summary>
            The data bar is filled with solid color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.Gradient">
      <summary>
            The data bar is filled with a color gradient.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarNegativeColorType">
      <summary>
            Specifies whether to use the same border and fill color as postive data bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.DataBarColor">
      <summary>
            Use the color specified in the Negative Value and Axis Setting dialog box 
            or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarNegativeColorType.Color enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.DataBarSameAsPositive">
      <summary>
            Use the same color as positive data bars.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarNegativeColorType.SameAsPositive enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.Color">
      <summary>
            Use the color specified in the Negative Value and Axis Setting dialog box 
            or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.SameAsPositive">
      <summary>
            Use the same color as positive data bars.
            </summary>
    </member>
    <member name="T:Aspose.Cells.NegativeBarFormat">
      <summary>
            Represents the color settings of the data bars for negative values that are defined by a data bar conditional formating rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.BorderColor">
      <summary>
            Gets or sets a FormatColor object that you can use to specify the border color for negative data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.BorderColorType">
      <summary>
            Gets whether to use the same border color as positive data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.Color">
      <summary>
            Gets or sets a FormatColor object that you can use to specify the fill color for negative data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.ColorType">
      <summary>
            Gets or sets whether to use the same fill color as positive data bars.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.ContentTypeProperty">
      <summary>
            Represents identifier information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Value">
      <summary>
            Returns or sets the value of the content type property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Type">
      <summary>
            Gets and sets the type of the property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.ContentTypePropertyCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.Properties.ContentTypeProperty" /> objects that represent additional information. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.ContentTypePropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds content type property information.
            </summary>
      <param name="name">The name of the content type property.</param>
      <param name="value">The value of the content type property.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.ContentTypePropertyCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds content type property information.
            </summary>
      <param name="name">The name of the content type property.</param>
      <param name="value">The value of the content type property.</param>
      <param name="type">The type of the content type property.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypePropertyCollection.Item(System.Int32)">
      <summary>
            Gets the content type property by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The content type property</returns>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypePropertyCollection.Item(System.String)">
      <summary>
            Gets the content type property by the property name.
            </summary>
      <param name="name">The property name.</param>
      <returns>The content type property</returns>
    </member>
    <member name="T:Aspose.Cells.IStreamProvider">
      <summary>
            Represents the exported stream provider.
            </summary>
    </member>
    <member name="M:Aspose.Cells.IStreamProvider.InitStream(Aspose.Cells.StreamProviderOptions)">
      <summary>
            Gets the stream.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Aspose.Cells.IStreamProvider.CloseStream(Aspose.Cells.StreamProviderOptions)">
      <summary>
            Closes the stream.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="T:Aspose.Cells.StreamProviderOptions">
      <summary>
            Represents the stream options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StreamProviderOptions.DefaultPath">
      <summary>
            The default path(URL) saved in generated html file for the referred source.
            For example, the sheet data saved in xxx_files/sheet001.htm, the url used in the main html file should be like "src="xxx_files/sheet001.htm""
            </summary>
    </member>
    <member name="P:Aspose.Cells.StreamProviderOptions.CustomPath">
      <summary>
            The user custom path(URL) saved in generated html file for the referred source. If not defined by user, DefaultPath will be used.
            For example, the sheet data will be saved by user to d:/sheet001.htm, the url used in the main html file should be "d:/sheet001.htm" or other valid relative path that can be accessed by the main html file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StreamProviderOptions.Stream">
      <summary>
            Gets/Sets the stream
            </summary>
    </member>
    <member name="T:Aspose.Cells.DeleteOptions">
      <summary>
            Represents the setting of deleting rows/columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DeleteOptions.UpdateReference">
      <summary>
            Indicates if update references in other worksheets.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingResult">
      <summary>
            Represents the result of conditional formatting which applies to a cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalStyle">
      <summary>
            Gets the conditional result style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingIcon">
      <summary>
             Gets the image of icon set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingDataBar">
      <summary>
            Gets the DataBar object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingColorScale">
      <summary>
            Gets the ColorScale object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ColorScaleResult">
      <summary>
            Gets the display color of color scale.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotConditionFormatRuleType">
      <summary>
            Represents PivotTable condition formatting rule type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.None">
      <summary>
            Indicates that Top N conditional formatting is not evaluated
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.All">
      <summary>
            Indicates that Top N conditional formatting is 
            evaluated across the entire scope range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.Row">
      <summary>
            Indicates that Top N conditional formatting is evaluated for each row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.Column">
      <summary>
            Indicates that Top N conditional formatting is 
            evaluated for each column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IWarningCallback">
      <summary>
            Callback interface of warning.
            </summary>
    </member>
    <member name="M:Aspose.Cells.IWarningCallback.Warning(Aspose.Cells.WarningInfo)">
      <summary>
            Our callback only needs to implement the "Warning" method.
            </summary>
      <param name="warningInfo"> warning info</param>
    </member>
    <member name="T:Aspose.Cells.HtmlExportDataOptions">
      <summary>
            Represents the options for exporting html data.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlExportDataOptions.Table">
      <summary>
            Only export table part of html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlExportDataOptions.All">
      <summary>
            Export all the data of html file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HtmlLinkTargetType">
      <summary>
            Represents the type of target attribute in HTML <a /> tag.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Blank">
      <summary>
            Opens the linked document in a new window or tab
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Parent">
      <summary>
            Opens the linked document in the parent frame
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Self">
      <summary>
            Opens the linked document in the same frame as it was clicked (this is default)
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Top">
      <summary>
            Opens the linked document in the full body of the window
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtValueQuoteType">
      <summary>
            Specifies the type of using quotation marks for values in text format files.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Normal">
      <summary>
            All values that contain special characters such as quotation mark, separator character will be quoted.
            Same with the behavior of ms excel for exporting text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Always">
      <summary>
            All values will be quoted always.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Minimum">
      <summary>
            Only quote values when needed. Such as, if one value contains quotation mark but the quotation mark is not at the begin of this value, this value will not be quoted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Never">
      <summary>
            All values will not be quoted. The exported text file with this type may not be read back correctly because the needed quotation marks being absent.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExportObjectEvent">
      <summary>
            The event triggered when exporting an object, such as Picture.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ExportObjectEvent.GetSource">
            Gets the object that contains the data to be saved. 
            @return the data source object.
            <summary>
            Gets the object to be exported.
            </summary><returns>the object to be exported.</returns></member>
    <member name="T:Aspose.Cells.HtmlHiddenRowDisplayType">
      <summary>
            Represents two types of showing the hidden row in html.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlHiddenRowDisplayType.Hidden">
      <summary> 
            Hidden the row in html page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlHiddenRowDisplayType.Remove">
      <summary>
            Remove the row in html page.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HtmlHiddenColDisplayType">
      <summary>
            Represents two types of showing the hidden col in html.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlHiddenColDisplayType.Hidden">
      <summary> 
            Hidden the column in html page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlHiddenColDisplayType.Remove">
      <summary>
            Remove the hidden in html page.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IExportObjectListener">
      <summary>
             Allows users to manipulate objects while exporting.
             </summary>
      <example>
             The following example creates a Workbook, opens a file named designer.xls in it and makes the horizontal and vertical scroll bars invisible for the Workbook. It then replaces two string values with an Integer value and string value respectively within the spreadsheet and finally sends the updated file to the client browser. 
             <code>
             [C#]
                 //custom implementation of IExportObjectListener
                 class CustomExportObjectListener : IExportObjectListener
                 {
                     private int imgIdx = 0;
                     public object ExportObject(ExportObjectEvent e)
                     {
                         Object source = e.GetSource();
                         if (source is Shape)
                         {
                             Shape shape = (Shape)source;
                             string url = null;
                             switch (shape.MsoDrawingType)
                             {
                                 case MsoDrawingType.Picture:
                                 {
                                     url = SaveImage(((Picture)shape).Data, imgIdx, ((Picture)shape).ImageFormat);
                                     break;
                                  }
                             }
                             if (url != null)
                             {
                                 imgIdx++;
                             }
                             return url;
                         }
                         return null;
                     }
                     private string SaveImage(byte[] data, int imgIdx, ImageFormat format)
                     {
                         //here save the image to any location, then return the url(relative or absolute) that the generated html can get the image
                         return "temp1/temp2.png";
                     }
                  }
                  
                  //Save html file with custom listener
                     HtmlSaveOptions saveOptions = new HtmlSaveOptions();
                     saveOptions.ExportObjectListener = new CustomExportObjectListener();
                     Stream stream = File.Create(outfn);
                     book.Save(stream, saveOptions);
                     stream.Flush();
                     stream.Close();
            
             </code></example>
    </member>
    <member name="M:Aspose.Cells.IExportObjectListener.ExportObject(Aspose.Cells.ExportObjectEvent)">
      <summary>
            Export one object.
            </summary>
      <param name="e">The event triggered when one object needs to be exported.</param>
      <returns>
            The information about the result of exporting object.
            <ul><li>For exporting objects when export workbook to HTML format,
            the result is URL string to access the saved Image from the html file which contains this exported object.
            </li></ul></returns>
    </member>
    <member name="T:Aspose.Cells.QueryTable">
      <summary>
            Represents QueryTable information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.ConnectionId">
      <summary>
            Gets the connection id of the query table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.Name">
      <summary>
            Gets the name of querytable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.PreserveFormatting">
      <summary>
            Returns or sets the PreserveFormatting of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.AdjustColumnWidth">
      <summary>
            Returns or sets the AdjustColumnWidth of the object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.QueryTableCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.QueryTableCollection" /> objects that represent QueryTable collection information. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTableCollection.Item(System.Int32)">
      <summary>
            Gets the querytable by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The querytable</returns>
    </member>
    <member name="T:Aspose.Cells.Scenario">
      <summary>
            Represents an individual scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.Comment">
      <summary>
            Gets and sets the comment of scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.Name">
      <summary>
            Gets and sets the name of scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.User">
      <summary>
            Gets name of user who last changed the scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.IsHidden">
      <summary>
            Indicates whether scenario is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.IsLocked">
      <summary>
            Indicates whether scenario is locked for editing when the sheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.InputCells">
      <summary>
            Gets the input cells of scenario.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ScenarioCollection">
      <summary>
            Represents the list of scenarios.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ScenarioCollection.Add(System.String)">
      <summary>
            Adds a scenario.
            </summary>
      <param name="name">The name of scenario.</param>
      <returns>The index in the list of scanarios.</returns>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.ActiveIndex">
      <summary>
            Gets and sets which scenario is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.LastSelected">
      <summary>
            Indicates which scenario was last selected by the user to be run/shown.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Scenario" /> object by the index.
            </summary>
      <param name="index">The specific index in the list.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.ScenarioInputCell">
      <summary>
            Represents input cell for the scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Row">
      <summary>
            Gets and sets the row index of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Column">
      <summary>
            Gets and sets the column index of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Name">
      <summary>
            Gets and sets the input cell address.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Value">
      <summary>
            Gets and sets value of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.IsDeleted">
      <summary>
            Indiciates whether input cell is deleted.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ScenarioInputCellCollection">
      <summary>
            Represents the list of the scenario's input cells. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.ScenarioInputCellCollection.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds an input cell.
            </summary>
      <param name="row">The row index of input cell.</param>
      <param name="column">The column index of input cell.</param>
      <param name="value">The value of input cell.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCellCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.ScenarioInputCell" /> by index in the list.
            </summary>
      <param name="index">The specific index in the list</param>
      <returns>The <see cref="T:Aspose.Cells.ScenarioInputCell" /> object</returns>
    </member>
    <member name="T:Aspose.Cells.ISmartMarkerCallBack">
      <summary>
            Represents callback interface of processing smartmarker.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ISmartMarkerCallBack.Process(System.Int32,System.Int32,System.Int32,System.String,System.String)">
      <summary>
            Callback for processing a smart marker.
            </summary>
      <param name="sheetIndex">The sheet index.</param>
      <param name="rowIndex">The row index.</param>
      <param name="colIndex">The column index.</param>
      <param name="tableName">The table name of smartmarker.</param>
      <param name="columnName">The table name of smartmarker.</param>
    </member>
    <member name="T:Aspose.Cells.NumberCategoryType">
      <summary>
            Represents category type of cell's number formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.General">
      <summary>
            General
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Text">
      <summary>
            Text
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Number">
      <summary>
            Number
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Date">
      <summary>
            Date or Date and Time
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Time">
      <summary>
            Time
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Fraction">
      <summary>
            Fraction
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Scientific">
      <summary>
            Scientific
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextCapsType">
      <summary>
            This type specifies the cap types of the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.None">
      <summary>
            None caps
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.All">
      <summary>
            Apply all caps on the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.Small">
      <summary>
            Apply small caps to the text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextStrikeType">
      <summary>
            This type specifies the strike type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.Single">
      <summary>
            A single strikethrough applied on the text
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.Double">
      <summary>
            A double strikethrough applied on the text
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.None">
      <summary>
            No strike is applied to the text
            </summary>
    </member>
    <member name="T:Aspose.Cells.UpdateLinksType">
      <summary>
            Represents how to update links to other workbooks when the workbook is opened.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.UserSet">
      <summary>
            Prompt user to update.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.Never">
      <summary>
            Do not update, and do not prompt user.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.Always">
      <summary>
            Always updat.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaModule">
      <summary>
            Represents module that is contained in VBA project.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaModule.Name">
      <summary>
            Gets and sets the name of Module.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaModule.Type">
      <summary>
            Gets the type of module.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaModule.Codes">
      <summary>
            Gets and sets the codes of module.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaModuleCollection">
      <summary>
            Represents the list of <see cref="T:Aspose.Cells.Vba.VbaModule" /></summary>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaModuleCollection.Add(Aspose.Cells.Worksheet)">
      <summary>
            Adds module for a worksheet.
            </summary>
      <param name="sheet">The worksheet</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaModuleCollection.Add(Aspose.Cells.Vba.VbaModuleType,System.String)">
      <summary>
            Adds module.
            </summary>
      <param name="type">The type of module.</param>
      <param name="name">The name of module.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaModuleCollection.Remove(Aspose.Cells.Worksheet)">
      <summary>
            Removes module for a worksheet.
            </summary>
      <param name="sheet">The worksheet</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaModuleCollection.Remove(System.String)">
      <summary>
            Remove the module by the name
            </summary>
      <param name="name">
      </param>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaModuleCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Vba.VbaModule" /> in the list by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaModuleCollection.Item(System.String)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Vba.VbaModule" /> in the list by the name.
            </summary>
      <param name="name">The name of module.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaModuleType">
      <summary>
            Represents the type of VBA module.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaModuleType.Procedural">
      <summary>
            Repesentes a procedural module.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaModuleType.Document">
      <summary>
            Repesentes a document module.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaModuleType.Class">
      <summary>
            Repesentes a class module.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaModuleType.Designer">
      <summary>
            Repesentes a designer module.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaProject">
      <summary>
            Represents the VBA project.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaProject.Sign(Aspose.Cells.DigitalSignatures.DigitalSignature)">
      <summary>
            Sign this VBA project by a DigitalSignature
            </summary>
      <param name="digitalSignature">DigitalSignature</param>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.IsValidSigned">
      <summary>
            Indicates whether the signature of VBA project is valid or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.CertRawData">
      <summary>
            Gets certificate raw data if this VBA project is signed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.Name">
      <summary>
            Gets and sets the name of the VBA project.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.IsSigned">
      <summary>
            Indicates whether VBAcode is signed or not. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.Modules">
      <summary>
            Gets all <see cref="T:Aspose.Cells.Vba.VbaModule" /> objects. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProject.References">
      <summary>
            Gets all references of VBA project.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaProjectReference">
      <summary>
            Represents the refernece of VBA project.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.Type">
      <summary>
            Gets the type of this reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.Name">
      <summary>
            Gets and sets the name of the reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.Libid">
      <summary>
            Gets and sets the Libid of the reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.Twiddledlibid">
      <summary>
            Gets and sets the twiddled Libid of the reference.
            </summary>
      <remarks>
            Only for control refernce.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.ExtendedLibid">
      <summary>
            Gets and sets the extended Libid of the reference.
            </summary>
      <remarks>
            Only for control refernce.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReference.RelativeLibid">
      <summary>
            Gets and sets the referenced VBA project’s identifier with an relative path.
            </summary>
      <remarks>
            Only for project refernce.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaProjectReferenceCollection">
      <summary>
            Represents all referneces of VBA project.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaProjectReferenceCollection.AddRegisteredReference(System.String,System.String)">
      <summary>
            Add a reference to an Automation type library.
            </summary>
      <param name="name">The name of reference.</param>
      <param name="libid">The identifier of an Automation type library.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaProjectReferenceCollection.AddControlRefrernce(System.String,System.String,System.String,System.String)">
      <summary>
             Add a reference to a twiddled type library and its extended type library.
            </summary>
      <param name="name">The name of reference.</param>
      <param name="libid">The identifier of an Automation type library.</param>
      <param name="twiddledlibid">The identifier of a twiddled type library</param>
      <param name="extendedLibid">The identifier of an extended type library</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Vba.VbaProjectReferenceCollection.AddProjectRefrernce(System.String,System.String,System.String)">
      <summary>
            Add a reference to an external VBA project. 
            </summary>
      <param name="name">The name of reference.</param>
      <param name="absoluteLibid">The referenced VBA project’s identifier with an absolute path.</param>
      <param name="relativeLibid">The referenced VBA project’s identifier with an relative path.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Vba.VbaProjectReferenceCollection.Item(System.Int32)">
      <summary>
            Get the reference in the list by the index.
            </summary>
      <param name="i">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Vba.VbaProjectReferenceType">
      <summary>
            Represents the type of VBA project reference.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaProjectReferenceType.Registered">
      <summary>
            Specifies a reference to an Automation type library.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaProjectReferenceType.Control">
      <summary>
            Specifies a reference to a twiddled type library and its extended type library.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Vba.VbaProjectReferenceType.Project">
      <summary>
            Specifies a reference to an external VBA project.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WarningInfo">
      <summary>
            Warning info
            </summary>
    </member>
    <member name="P:Aspose.Cells.WarningInfo.WarningType">
      <summary>
            Get warning type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WarningInfo.Description">
      <summary>
            Get description of warning info.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WarningType">
      <summary>
            WaringType
            </summary>
    </member>
    <member name="F:Aspose.Cells.WarningType.FontSubstitution">
      <summary>
            Font substitution warning type
            when a font has not been found, this warning type can be get.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WriteProtection">
      <summary>
            Specifies write protection settings for a workbook. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.WriteProtection.ValidatePassword(System.String)">
      <summary>
            Returns true if the specified password is the same as the write-protection password the file was protected with. 
            </summary>
      <param name="password">The specified password.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.RecommendReadOnly">
      <summary>
            Indicates if the Read Only Recommended option is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.IsWriteProtected">
      <summary>
            Indicates whether this workbook is write protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.Password">
      <summary>
            Sets the proected password to modify the file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ICustomParser">
      <summary>
            Allows users to add their custom value parser for parsing string values to other proper cell value object. 	
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICustomParser.ParseObject(System.String)">
      <summary>
            Parses given string to proper value object.
            </summary>
      <param name="value">The string value to be parsed</param>
      <returns>
            Parsed value object from given string. If given string cannot be parsed to proper value object, returns null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.ICustomParser.GetFormat">
      <summary>
            Gets the formatting pattern for last invocation of <see cref="M:Aspose.Cells.ICustomParser.ParseObject(System.String)" />.
            </summary>
      <remarks>
            The formatting pattern should be same with Style.Custom of InvariantCulture to be used for formatting corresponding cell in ms excel.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.HtmlCrossType">
      <summary>
            Represents three types of html corss string.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlCrossType.Default">
      <summary>
            Display like MS Excel,depends on the next cell. 
            If the next cell is null,the string will cross,or it will be truncated
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlCrossType.Cross">
      <summary>
            Display HTML cross string, this performance for creating large html files will be more than ten times faster than setting the value to Deault or FitToCell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlCrossType.FitToCell">
      <summary>
            Only displaying the string within the width of cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.DrawObject">
      <summary>
            DrawObject will be initalized and returned when rendering
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.Cell">
      <summary>
            Cell will be returned when rendering.
            All properties of cell can be accessed. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.Image">
      <summary>
            Chart,shape will be returned when rendering.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.ImageBytes">
      <summary>
            image bytes of Chart,shape  will be returned when rendering.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.Type">
      <summary>
            Indicate Cell or Image of DrawObject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.CurrentPage">
      <summary>
            Indicate the page index of DrawObject. 
            Page index is based on zero.
            One Sheet contains several pages when rendering.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.TotalPages">
      <summary>
            Indicate total pages in current rendering. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.DrawObject.SheetIndex">
      <summary>
            Indicate current sheet index of DrawObject
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.DrawObjectEnum">
      <summary>
            Indicate Cell or Image of DrawObject.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.DrawObjectEnum.Image">
      <summary>
            Indicate DrawObject is an Image
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.DrawObjectEnum.Cell">
      <summary>
            indicate DrawObject is an Cell
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.DrawObjectEventHandler">
      <summary>    
            Interface to get DrawObject and Bound when rendering.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Rendering.DrawObjectEventHandler.Draw(Aspose.Cells.Rendering.DrawObject,System.Single,System.Single,System.Single,System.Single)">
      <summary>       
            Implements this interface to get DrawObject and Bound when rendering.
            </summary>
      <param name="drawObject"> DrawObject will be initalized and returned when rendering</param>
      <param name="x">Left of DrawObject</param>
      <param name="y">Top of DrawObject</param>
      <param name="width">Width of DrawObject</param>
      <param name="height">Height of DrawObject</param>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoFillFormatHelper">
      <summary>
            Represents fill formatting for a shape. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.MsoFillFormatHelper.SetOneColorGradient(System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a one-color gradient.
            </summary>
      <param name="color">One gradient color.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.ForeColor">
      <summary>
            Gets and sets the fill fore color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.ForeColorTransparency">
      <summary>
            Returns or sets the degree of fore color of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.BackColor">
      <summary>
            Gets and sets the file back color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.ImageData">
      <summary>
            Gets and sets the Texture and Picture fill data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.Texture">
      <summary>
            Gets the texture fill type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormatHelper.IsVisible">
      <summary>
            Indicats whether there is fill. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.ParameterType">
      <summary>
            Reprents all parameters' type or return value type  of fuction.
             </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Reference">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Value">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Array">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ImportTableOptions">
      <summary>
            Represents the options of importing data into cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ImportTableOptions.#ctor">
      <summary>
            Creates the default imporing options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ConvertGridStyle">
      <summary>
            Indicates whether apply the style of the grid view to cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string value should be converted to numeric or date value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.InsertRows">
      <summary>
            Gets or sets a value that indicates whether new rows should be added for importing data records.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.IsFieldNameShown">
      <summary>
            Gets or sets a value that indicates whether field name should be imported to the first row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.DateFormat">
      <summary>
            Gets or sets date format string for cells with imported datetime values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.NumberFormats">
      <summary>
            Gets or sets the number formats
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.TotalRows">
      <summary>
            Gets or sets total row count to import from data source. -1 means all rows of given data source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.TotalColumns">
      <summary>
            Gets or sets total column count to import from data source. -1 means all rows of given data source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ColumnIndexes">
      <summary>
            Gets or sets the columns(0-based) to import from data source. null means all columns should be imported.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.DefaultValues">
      <summary>
            Default value for the value in the table is null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.IsHtmlString">
      <summary>
            Indicates whether the value contains html tags.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ICellsDataTable">
      <summary>
            Represents data table.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.ICellsDataTable.BeforeFirst">
      <summary>
            Move the cursor to the front of this object, just before the first row.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICellsDataTable.Next">
      <summary>
            Moves the cursor down one row from its current position.
            </summary>
      <returns> if the new current row is valid; false if there are no more rows </returns>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Columns">
      <summary>
            Gets the columns' name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Count">
      <summary>
            Gets the count of the records. -1 for unknown records count.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Item(System.Int32)">
      <summary>
             Gets the data stored in the column specified by index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Item(System.String)">
      <summary>
            Gets the data stored in the column specified by column name.
            </summary>
      <param name="columnName">The column name.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Charts.ErrorBarDisplayType">
      <summary>
            Represents error bar display type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Both">
      <summary>
            Both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Minus">
      <summary>
            Minus
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Plus">
      <summary>
            Plus
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FormatSetType">
      <summary>
            Fill format set type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.None">
      <summary>
            No Fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsGradientSet">
      <summary>
            Gradient fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsTextureSet">
      <summary>
            Texture fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsPatternSet">
      <summary>
            Pattern fill format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientStopCollection">
      <summary>
            Represents the gradient stop collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientStopCollection.Add(System.Double,Aspose.Cells.CellsColor,System.Int32)">
      <summary>
            Add a gradient stop.
            </summary>
      <param name="position">The position of the stop,in unit of percentage.</param>
      <param name="color">The color of the stop.</param>
      <param name="alpha">The alpha of the color.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientStopCollection.Add(System.Double,System.Drawing.Color,System.Int32)">
      <summary>
            Add a gradient stop.
            </summary>
      <param name="position">The position of the stop,in unit of percentage.</param>
      <param name="color">The color of the stop.</param>
      <param name="alpha">The alpha of the color.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientStopCollection.Item(System.Int32)">
      <summary>
            Gets the gradient stop by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>The gradient stop.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.LabelPositionType">
      <summary>
            Represents data label position type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Center">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.InsideBase">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.InsideEnd">
      <summary>
            Applies only to bar charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.OutsideEnd">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Above">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Below">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Left">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Right">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.BestFit">
      <summary>
            Applies only to 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Moved">
      <summary>
            User moved the data labels, Only for reading chart from template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MirrorType">
      <summary>
            Represents mirror type of textrue fill
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Horizonal">
      <summary>
            Horizonal
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Vertical">
      <summary>
            Vertical
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Both">
      <summary>
            Both
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PicFormatOption">
      <summary>
            Represents pictrue format option
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Type">
      <summary>
            Gets or sets the picture fill type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Scale">
      <summary>
            Gets or sets how many the picture stack and scale with. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Left">
      <summary>
            Gets or sets the left offset for stretching picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Top">
      <summary>
            Gets or sets the top offset for stretching picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Bottom">
      <summary>
            Gets or sets the bottom offset for stretching picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PicFormatOption.Right">
      <summary>
            Gets or sets the right offset for stretching picture.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TilePicOption">
      <summary>
            Represents tile picture as texture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.OffsetX">
      <summary>
            Gets or sets the X offset for tiling picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.OffsetY">
      <summary>
            Gets or sets the Y offset for tiling picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.ScaleX">
      <summary>
            Gets or sets the X scale for tiling picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.ScaleY">
      <summary>
            Gets or sets the Y scale for tiling picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.MirrorType">
      <summary>
            Gets or sets the mirror type for tiling.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TilePicOption.AlignmentType">
      <summary>
            Gets or sets the alignment for tiling.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePath">
      <summary>
            Represents a creation path consisting of a series of moves, lines and curves that when combined will form a geometric shape.
             </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePath.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Drawing.ShapePath" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePath.PathSegementList">
      <summary>
            Gets <see cref="T:Aspose.Cells.Drawing.ShapeSegmentPathCollection" /> list
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePathCollection">
      <summary>
            Represents path collection information in NotPrimitive autoshape
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePathCollection.Add">
      <summary>
            Add a creation path.
            </summary>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.ShapePath" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePathCollection.Count">
      <summary>
            Gets the count of paths
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePathCollection.Item(System.Int32)">
      <summary>
            Gets a creation path.
            </summary>
      <param name="index">The index.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.ShapePath" /> object.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeSegmentPath">
      <summary>
            Represents a segment path in a path of the freeform.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeSegmentPath.Type">
      <summary>
            Gets the path segment type
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeSegmentPath.Points">
      <summary>
            Gets the points in path segment
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePathType">
      <summary>
            Represents path segment type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.LineTo">
      <summary>
            Straight line segment
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.CubicBezierCurveTo">
      <summary>
            Cubic Bezier curve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.MoveTo">
      <summary>
            Start a new path
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Close">
      <summary>
            If the starting POINT and the end POINT are not the same, a single 
            straight line is drawn to connect the starting POINT and ending POINT of the path.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.End">
      <summary>
            The end of the current path
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Escape">
      <summary>
            Escape
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.ArcTo">
      <summary>
            An arc
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckOptionCollection">
      <summary>
            Represents all erorr check option.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOptionCollection.Add">
      <summary>
            Add an error check option.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ErrorCheckOptionCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.ErrorCheckOption" /> object by the given index.
            </summary>
      <param name="index">The index</param>
      <returns>Return <see cref="T:Aspose.Cells.ErrorCheckOption" /> object </returns>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckOption">
      <summary>
            Error check setting applied on certain ranges.
            </summary>
      <example>
        <code>
            
            [C#]
            
              Workbook workbook = new Workbook();
              ErrorCheckOptionCollection opts = workbook.Worksheets[0].ErrorCheckOptions;
              int optionIdx = opts.Add();
              ErrorCheckOption opt = opts[optionIdx];
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistFormula, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistRange, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextDate, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextNumber, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.Validation, false);
              opt.AddRange(CellArea.CreateCellArea("A1", "B10"));
              workbook.Save(@"D:\Filetemp\Book1.xlsx");
              
            [Visual Basic]
            
               Dim workbook As Workbook = New Workbook()
               Dim opts As ErrorCheckOptionCollection = workbook.Worksheets(0).ErrorCheckOptions
               Dim optionIdx As Integer = opts.Add()
               Dim opt As ErrorCheckOption = opts(optionIdx)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistFormula, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistRange, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextDate, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextNumber, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.Validation, False)
               opt.AddRange(CellArea.CreateCellArea("A1", "B10"))
               workbook.Save("D:\Filetemp\Book1.xlsx")
               
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.IsErrorCheck(Aspose.Cells.ErrorCheckType)">
      <summary>
            Checks whether given error type will be checked.
            </summary>
      <param name="errorCheckType">error type can be checked</param>
      <returns>return true if given error type will be checked.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.SetErrorCheck(Aspose.Cells.ErrorCheckType,System.Boolean)">
      <summary>
            Sets whether given error type will be checked.
            </summary>
      <param name="errorCheckType">error type can be checked.</param>
      <param name="isCheck">true if given error type needs to be checked.</param>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.GetCountOfRange">
      <summary>
            Gets the count of ranges that influenced by this setting.
            </summary>
      <returns>the count of ranges that influenced by this setting.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.AddRange(Aspose.Cells.CellArea)">
      <summary>
            Adds one influenced range by this setting.
            </summary>
      <param name="ca">the range to be added.</param>
      <returns>the index of the added range in the range list of this setting.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.GetRange(System.Int32)">
      <summary>
             Gets the influenced range of this setting by given index.
            </summary>
      <param name="index">the index of range</param>
      <returns>return influenced range at given index.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.RemoveRange(System.Int32)">
      <summary>
            Removes one range by given index.
            </summary>
      <param name="index">the index of the range to be removed.</param>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckType">
      <summary>
            Represents all error check type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.Calc">
      <summary>
             check for calculation errors
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.EmptyCellRef">
      <summary>
             check for references to empty cells
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.TextNumber">
      <summary>
             check the format of numeric values
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.InconsistRange">
      <summary>
             check formulas with references to less than the entirety
             of a range containing continuous data
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.InconsistFormula">
      <summary>
             check formulas that are inconsistent with formulas in neighboring cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.TextDate">
      <summary>
             check the format of date/time values
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.UnproctedFormula">
      <summary>
             check for unprotected formulas
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.Validation">
      <summary>
             whether to perform data validation
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.CalculatedColumn">
      <summary>
            Ignore errors when cells contain a value different from a calculated column formula.
            </summary>
    </member>
    <member name="T:Aspose.Cells.InterruptMonitor">
      <summary>
            Represents all operator about the interrupt.
            </summary>
    </member>
    <member name="M:Aspose.Cells.InterruptMonitor.Interrupt">
      <summary>
            Interrupt the current operator.
            </summary>
    </member>
    <member name="T:Aspose.Cells.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder that contains the Aspose component assembly.</p>
        <p>3. The folder that contains the client's calling assembly.</p>
        <p>4. The folder that contains the entry (startup) assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code><param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.Cell">
      <summary>
             Encapsulates the object that represents a single Workbook cell.
             </summary>
      <example>
        <code>
            	[C#]
            	
            	Workbook excel = new Workbook();
            	Cells cells = excel.Worksheets[0].Cells;
            	
            	//Put a string into a cell
            	Cell cell = cells[0, 0];
            	cell.PutValue("Hello");
            	
            	string first = cell.StringValue;
            		
            	//Put an integer into a cell
            	cell = cells["B1"];
            	cell.PutValue(12);
            	
            	int second = cell.IntValue;
            	
            	//Put a double into a cell
            	cell = cells[0, 2];
            	cell.PutValue(-1.234);
            	
            	double third = cell.DoubleValue;
            	
            	//Put a formula into a cell
            	cell = cells["D1"];
            	cell.Formula = "=B1 + C1";
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells["b2"];
            	cell.Formula = "=sum(average(b1,c1), b1)";
            	
            	//Set style of a cell
            	Style style = cell.GetStyle();
            	//Set background color
            	style.BackgroundColor = Color.Yellow;
            	//Set format of a cell
            	style.Font.Name = "Courier New";
            	style.VerticalAlignment = TextAlignmentType.Top;
             cell.SetStyle(style);
            
            
             
             [Visual Basic]
             
            	Dim excel as Workbook = new Workbook()
            	Dim cells as Cells = exce.Worksheets(0).Cells
            	
            	'Put a string into a cell
            	Dim cell as Cell = cells(0, 0)
            	cell.PutValue("Hello")
            	
            	Dim first as String = cell.StringValue
            		
            	//Put an integer into a cell
            	cell = cells("B1")
            	cell.PutValue(12)
            	
            	Dim second as Integer = cell.IntValue
            	
            	//Put a double into a cell
            	cell = cells(0, 2)
            	cell.PutValue(-1.234)
            	
            	Dim third as Double = cell.DoubleValue
            	
            	//Put a formula into a cell
            	cell = cells("D1")
            	cell.Formula = "=B1 + C1"
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells("b2")
            	cell.Formula = "=sum(average(b1,c1), b1)"
            		
            	//Set style of a cell
            	Dim style as Style = cell.GetStyle()
            	
            	//Set background color
            	style.BackgroundColor = Color.Yellow
            	//Set font of a cell
            	style.Font.Name = "Courier New"
            	style.VerticalAlignment = TextAlignmentType.Top
            	cell.SetStyle(style)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.Calculate(Aspose.Cells.CalculationOptions)">
      <summary>
            Calcaulate the formula of the cell.
            </summary>
      <param name="options">Options for calculation</param>
    </member>
    <member name="M:Aspose.Cells.Cell.Calculate(System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calcaulate the formula of the cell.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Boolean)">
      <summary>
            Puts an boolean value into the cell.
            </summary>
      <param name="boolValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Int32)">
      <summary>
            Puts an integer value into the cell.
            </summary>
      <param name="intValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Double)">
      <summary>
            Puts a double value into the cell.
            </summary>
      <param name="doubleValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the cell, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String,System.Boolean)">
      <summary>
            Puts a string value into the cell and converts the value to other data type if appropriate.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String)">
      <summary>
            Puts a string value into the cell.
            </summary>
      <param name="stringValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.DateTime)">
      <summary>
            Puts a DateTime value into the cell.
            </summary>
      <param name="dateTime">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Object)">
      <summary>
            Puts an object value into the cell.
            </summary>
      <param name="objectValue">input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStringValue(Aspose.Cells.CellValueFormatStrategy)">
      <summary>
            Gets the string value by specific formatted strategy.
            </summary>
      <param name="formatStrategy">The formatted strategy.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetDisplayStyle">
      <summary>
            Gets the display style of the cell.
            If the cell is conditional formated, the display style is not same as the cell.GetStyle().
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetConditionalStyle">
      <summary>
            Gets the conditional formated style when the cell value fits the condition.
            </summary>
      <returns>Returns <see cref="T:Aspose.Cells.Style" /> object.</returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cell.GetConditionalFormattingResult() method.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetFormatConditions">
      <summary>
            Gets format conditions which applies to this cell.
            </summary>
      <returns>Returns <see cref="T:Aspose.Cells.FormatConditionCollection" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStyle">
      <summary>
             Gets the cell style.
             </summary>
      <returns>Style object.</returns>
      <remarks>To change the style of the cell, please call Cell.SetStyle() method after changing the style.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStyle(System.Boolean)">
      <summary>
            If checkBorders is true, Check whether other cells' borders will effect the style of this cell.
            </summary>
      <param name="checkBorders">Check other cells' borders</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style)">
      <summary>
            Sets the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <remarks>
            If the border settings are changed, the border of adjact cells will be updated too.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style,System.Boolean)">
      <summary>
            Apply the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <param name="explicitFlag">True, only overwriting formatting which is explicitly set.
            </param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Apply the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <param name="flag">The style flag.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetFormula(System.String,System.Object)">
      <summary>
            Set the formula and the value of the formula.
            </summary>
      <param name="formula">The formula.</param>
      <param name="value">The value of the formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.GetPrecedents">
      <summary>
            Gets all cells or ranges which this cell's formula depends on.
            </summary>
      <returns>
            Returns all cells or ranges.
            </returns>
      <remarks>Returns null if this is not a formula cell.</remarks>
      <example>
        <code>
            
            [C#]
            
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            cells["A1"].Formula = "= B1 + SUM(B1:B10) + [Book1.xls]Sheet1!A1";
             ReferredAreas areas = cells["A1"].GetPrecedents();
            for (int i = 0; i &lt; areas.Count; i++)
            {
                ReferredArea area = areas[i];
                 StringBuilder stringBuilder = new StringBuilder();
                 if (area.IsExternalLink)
                 {
                     stringBuilder.Append("[");
                      stringBuilder.Append(area.ExternalFileName);
                      stringBuilder.Append("]");
                  }
                  stringBuilder.Append(area.SheetName);
                  stringBuilder.Append("!");
                  stringBuilder.Append(CellsHelper.CellIndexToName(area.StartRow, area.StartColumn));
                  if (area.IsArea)
                   {
                       stringBuilder.Append(":");
                       stringBuilder.Append(CellsHelper.CellIndexToName(area.EndRow, area.EndColumn));
                   }
                   Console.WriteLine(stringBuilder.ToString());
                }
             workbook.Save(@"C:\Book2.xls");
            
            [Visual Basic]
            
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            cells("A1").Formula = "= B1 + SUM(B1:B10) + [Book1.xls]Sheet1!A1"
             Dim areas As ReferredAreas = cells("A1").GetPrecedents()
            For i As Integer = 0 To areas.Count - 1
                Dim area As ReferredArea = areas(i)
                Dim stringBuilder As StringBuilder = New StringBuilder()
                If (area.IsExternalLink) Then
                    stringBuilder.Append("[")
                    stringBuilder.Append(area.ExternalFileName)
                   stringBuilder.Append("]")
                End If
                stringBuilder.Append(area.SheetName)
                stringBuilder.Append("!")
                stringBuilder.Append(CellsHelper.CellIndexToName(area.StartRow, area.StartColumn))
                If (area.IsArea) Then
                    stringBuilder.Append(":")
                    stringBuilder.Append(CellsHelper.CellIndexToName(area.EndRow, area.EndColumn))
                 End If
                Console.WriteLine(stringBuilder.ToString())
             Next
             workbook.Save("C:\Book2.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.GetDependents(System.Boolean)">
      <summary>
            Get all cells which refer to the specific cell.
            </summary>
      <param name="isAll">Indicates whether check other worksheets</param>
    </member>
    <member name="M:Aspose.Cells.Cell.GetLeafs">
      <summary>
            Get all cells which will be updated when this cell is modified.
            This method can only work after calling Workbook.CalculateFormula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetWidthOfValue">
      <summary>
            Gets the width of the value in unit of pixels.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetHeightOfValue">
      <summary>
            Gets the height of the value in unit of pixels.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetArrayRange">
      <summary>
            Gets the array range if the cell's formula is an array formula.
            </summary>
      <returns>
            The array range.
            </returns>
      <remarks>Only applies when the cell's formula is an array formula</remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.SetArrayFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets an array formula to a range of cells.
            </summary>
      <param name="arrayFormula">Array formula.</param>
      <param name="rowNumber">Number of rows to populate result of the array formula.</param>
      <param name="columnNumber">Number of columns to populate result of the array formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.RemoveArrayFormula(System.Boolean)">
      <summary>
            Remove array formula.
            </summary>
      <param name="leaveNormalFormula">True represents converting the array formula to normal formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetAddInFormula(System.String,System.String)">
      <summary>
             Sets an Add-In formula to the cell.
             </summary>
      <param name="addInFileName">Add-In file name.</param>
      <param name="addInFunction">Add-In function name.</param>
      <example>
        <code>
             [C#]
             cells["h11"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)");
             cells["h12"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()"); 
            
             [Visual Basic]
             cells("h11").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)")
             cells("h12").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()")
             </code>
      </example>
      <remarks>
             Add-In file should be placed in the directory or sub-directory of Workbook Add-In library.
             For example, file name can be "Eurotool.xla" or "solver\solver.xla". 
             </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.Copy(Aspose.Cells.Cell)">
      <summary>
            Copies data from a source cell.
            </summary>
      <param name="cell">Source <see cref="T:Aspose.Cells.Cell" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the cell text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
      <remarks>This method only works on cell with string value.</remarks>
      <example>
        <code>
            [C#]
            excel.Worksheets[0].Cells["A1"].PutValue("Helloworld");
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.IsBold = true;
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.Color = Color.Blue;
            
            [Visual Basic]
            excel.Worksheets(0).Cells("A1").PutValue("Helloworld")
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.IsBold = True
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.Color = Color.Blue
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.IsRichText">
      <summary>
            Indicates whether the cell string value is a rich text.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetCharacters">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the cell text.
            </summary>
      <returns>All Characters objects </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetCharacters(System.Boolean)">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the cell text.
            </summary>
      <param name="flag">Indicates whether applying table style to the cell if the cell is in the table.</param>
      <returns>All Characters objects </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.SetCharacters(Aspose.Cells.FontSetting[])">
      <summary>
            Sets rich text format of the cell.
            </summary>
      <param name="characters">All Characters objects.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.GetMergedRange">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Range" /> object which represents a merged range.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Range" /> object. Null if this cell is not merged.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.SetSharedFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets a formula to a range of cells.
            </summary>
      <param name="sharedFormula">Shared formula.</param>
      <param name="rowNumber">Number of rows to populate the formula.</param>
      <param name="columnNumber">Number of columns to populate the formula.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.ToString">
      <summary>
            Returns a string represents the current Cell object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.Equals(System.Object)">
      <summary>
            Checks whether this object refers to the same cell with another.
            </summary>
      <param name="obj">another object</param>
      <returns>true if two objects refers to the same cell.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetHashCode">
      <summary>
            Serves as a hash function for a particular type.
            </summary>
      <returns>A hash code for current Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.Equals(Aspose.Cells.Cell)">
      <summary>
            Checks whether this object refers to the same cell with another cell object.
            </summary>
      <param name="cell">another cell object</param>
      <returns>true if two cell objects refers to the same cell.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetConditionalFormattingResult">
      <summary>
            Get the result of the conditional formatting.
            </summary>
      <remarks>
            Returns null if no conditional formatting is applied to this cell, 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetValidation">
      <summary>
            Gets the validation applied to this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetValidationValue">
      <summary>
            Gets the value of validation which applied to this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetTable">
      <summary>
            Gets the table which contains this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Cell.Worksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DateTimeValue">
      <summary>
            Gets the DateTime value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Row">
      <summary>
            Gets row number (zero based) of the cell.
            </summary>
      <value>Cell row number</value>
    </member>
    <member name="P:Aspose.Cells.Cell.Column">
      <summary>
            Gets column number (zero based) of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsFormula">
      <summary>
            Represents if the specified cell contains formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Type">
      <summary>
            Represents cell value type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Name">
      <summary>
            Gets the name of the cell. 
            </summary>
      <remarks>
            A cell name includes its column letter and row number. For example, the name of a cell in row 0 and column 0 is A1.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsErrorValue">
      <summary>
            Checks if a formula can properly evaluate a result.
            </summary>
      <remarks>Only applies to formula cell.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.StringValue">
      <summary>
            Gets the string value contained in the cell. If the type of this cell is string, then return the string value itself.
            For other cell types, the formatted string value(formatted with the specified style of this cell) will be returned.
            The formatted cell value is same with what you can get from excel when copying a cell as text(such as
            copying cell to text editor or exporting to csv).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.StringValueWithoutFormat">
      <summary>
            Gets cell's value as string without any format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.NumberCategoryType">
      <summary>
            Represents the category type of this cell's number formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DisplayStringValue">
      <summary>
            Gets the formatted string value of this cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IntValue">
      <summary>
            Gets the integer value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DoubleValue">
      <summary>
            Gets the double value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.FloatValue">
      <summary>
            Gets the float value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.BoolValue">
      <summary>
            Gets the boolean value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.SharedStyleIndex">
      <summary>
            Gets cell's shared style index in the style pool.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Formula">
      <summary>
             Gets or sets a formula of the <see cref="T:Aspose.Cells.Cell" />.
             </summary>
      <remarks>A formula string always begins with an equal sign (=). 
            And please always use comma(,) as parameters delimeter, such as "=SUM(A1, E1, H2)".<p></p>
            User can set any formula in Workbook designer file. Aspose.Cells will keep all the formulas.
            If user use this property to set a formula to a cell, major part of Workbook built-in functions
            is supported. And more is coming. If you have any special need for Workbook built-in functions, 
            please let us know.		
            </remarks>
      <example>
        <code>
            [C#]
            
            Workbook excel = new Workbook();
            Cells cells = excel.Worksheets[0];
            cells["B6"].Formula = "=SUM(B2:B5, E1) + sheet2!A1";
            
            [Visual Basic]
            
            Dim excel As Workbook =  New Workbook() 
            Dim cells As Cells =  excel.Worksheets(0) 
            cells("B6").Formula = "=SUM(B2:B5, E1) + sheet2!A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cell.R1C1Formula">
      <summary>
            Gets or sets a R1C1 formula of the <see cref="T:Aspose.Cells.Cell" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.ContainsExternalLink">
      <summary>
            Indicates wether this cell contains an external link.
            Only applies when the cell is a formula cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsArrayHeader">
      <summary>
            Inidicates the cell's formula is and array formula 
            and it is the first cell of the array.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsInArray">
      <summary>
            Indicates whether the cell formula is an array formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsInTable">
      <summary>
            Indicates whethe this cell is part of table formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Value">
      <summary>
            Gets the value contained in this cell.
            </summary>
      <remarks>Possible type:
            <p>null,</p><p>Boolean,</p><p>DateTime,</p><p>Double,</p><p>Integer</p><p>String.</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsStyleSet">
      <summary>
            Indicates if the cell's style is set. If return false, it means this cell has a default cell format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsMerged">
      <summary>
            Checks if a cell is part of a merged range or not. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.HtmlString">
      <summary>
            Gets and sets the html string which contains data and some formattings in this cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LightCellsDataProvider">
      <summary>
            Represents Data provider for saving large spreadsheet files in light weight mode. 	
            </summary>
      <remarks>
            When saving a workbook by this mode, <see cref="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)" /> will be checked when saving every worksheet in the workbook.
            For one sheet, if <see cref="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)" /> gives true, then all data and properties of rows/cells of this sheet to be saved
            will be provided by the implementation of this interface. In the first place, <see cref="M:Aspose.Cells.LightCellsDataProvider.NextRow" /> will be called to get the next row index to be saved.
            If a valid row index is returned(the row index must be in ascending order for the rows to be saved),
            then a Row object representing this row will be provided for implementation to set its properties by <see cref="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)" />.
            For one row, <see cref="M:Aspose.Cells.LightCellsDataProvider.NextCell" /> will be checked firstly. If a valid column index be returned(the column index must be in ascending order for all cells of one row to be saved),
            then a Cell object representing this cell will be provided for implementation to set its data and properties by <see cref="M:Aspose.Cells.LightCellsDataProvider.StartCell(Aspose.Cells.Cell)" />.
            After data of this cell is set, this cell will be saved directy to the generated spreadsheet file and the next cell will be checked and processed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)">
      <summary>
            Starts to save a worksheet.
            </summary>
      <remarks>
            It will be called at the beginning of saving a worksheet during saving a workbook.
            If the provider needs to refer to <i><code>sheetIndex</code></i> later
            in startRow(Row) or startCell(Cell) method,
            that is, if the process needs to know which worksheet is being processed, 
            the implementation should retain the <i><code>sheetIndex</code></i> value here.
            </remarks>
      <param name="sheetIndex">index of current sheet to be saved.</param>
      <returns>
            true if this provider will provide data for the given sheet; false if given sheet should use its normal data model(Cells).
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.NextRow">
      <summary>
            Gets the next row to be saved.
            </summary>
      <remarks>
            It will be called at the beginning of saving a row and its cells data(before <see cref="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)" />).
            </remarks>
      <returns>
            the next row index to be saved. -1 means the end of current sheet data has been reached and no further row of current sheet to be saved.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)">
      <summary>
            Starts to save data of one row.
            </summary>
      <remarks>
            It will be called at the beginning of saving a row and its cells data.
            If current row has some custom properties such as height, style, ...etc.,
            implementation should set those properties to given Row object here.
            </remarks>
      <param name="row">
            Row object for implementation to fill data. Its row index is the returned value of latest call of <see cref="M:Aspose.Cells.LightCellsDataProvider.NextRow" />.
            If the row has been initialized in the inner cells model, the existing row object will be used.
            Otherwise a temporary Row object will be used for implementation to fill data.
            </param>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.NextCell">
      <summary>
            Gets next cell to be saved.
            </summary>
      <remarks>
            It will be called at the beginning of saving one cell.
            </remarks>
      <returns>
            column index of the next cell to be saved. -1 means the end of current row data has been reached and no further cell of current row to be saved.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartCell(Aspose.Cells.Cell)">
      <summary>
            Starts to save data of one cell.
            </summary>
      <remarks>
      </remarks>
      <param name="cell">
            Cell object for implementation to fill data. Its column index is the returned value of latest call of <see cref="M:Aspose.Cells.LightCellsDataProvider.NextCell" />.
            If the cell has been initialized in the inner cells model, the existed cell object will be used.
            Otherwise a temporary Cell object will be used for implementation to fill data.
            </param>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.IsGatherString">
      <summary>
            Checks whether the current string value of cell needs to be gathered into a global pool.
            </summary>
      <remarks>
            Gathering string values will take advantage only when there are many duplicated string values for the cells provided by this implementation.
            In this situation gathering string will save much memory and generate smaller resultant file.
            If there are many string values for the cells provided by LightCellsDataProvider but few of them are same,
            gathering string will cost more memory and time and has no advantage for the resultant file.
            </remarks>
      <returns>
            true if string value need to be gathered into a global pool for the resultant file.
            </returns>
    </member>
    <member name="T:Aspose.Cells.HTMLLoadOptions">
      <summary>
            Represents options when importing a html file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LoadOptions">
      <summary>
            Represents the options of loading the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.#ctor">
      <summary>
            Creates an options of loading the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.#ctor(Aspose.Cells.LoadFormat)">
      <summary>
            Creates an options of loading the file.
            </summary>
      <param name="loadFormat">The loading format.</param>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.SetPaperSize(Aspose.Cells.PaperSizeType)">
      <summary>
            Sets the default print paper size from default printer's setting.
            </summary>
      <param name="type">The default paper size.</param>
      <remarks>
            If there is no setting about paper size,MS Excel will use default printer's setting.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadFormat">
      <summary>
            Gets and set the load format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.Password">
      <summary>
            Gets and set the password of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.ParsingFormulaOnOpen">
      <summary>
            Indicates whether parsing the formula when reading the file.
            </summary>
      <remarks>
            Only applies for Excel Xlsx,Xltx, Xltm,Xlsm file
            because the formulas in the files are stored with a string formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataAndFormatting">
      <summary>
            If true, only loads data , formulas and formatting from the file,other contents and settings are all discarded. 
            For example : shapes ,validation,conditional formatting,pivotables are not loaded.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataOnly">
      <summary>
            If true, only loads data and formulas from the file,other contents and settings are all discarded. 
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use LoadDataAndFormatting property.
            This property will be removed 12 months later since June 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.OnlyLoadDocumentProperties">
      <summary>
            If true, only loads document properties
            </summary>
      <remarks>
            Only for excel 97- 2003 xls file.
            If the file is encrypted, we still can get the document properties without password
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataOptions">
      <summary>
            Only effects when OnlyLoadData is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LanguageCode">
      <summary>
            Gets or sets the user interface language of the Workbook version based on CountryCode that has saved the file. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.Region">
      <summary>
            Gets or sets the system regional settings based on CountryCode at the time the file was saved. 
            </summary>
      <remarks>If you do not want to use the region  saved in the file, 
            please reset it after reading the file.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, please use HTMLLoadOptions.ConvertNumericData or HTMLLoadOptions.ConvertNumericData property.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.StandardFont">
      <summary>
            Sets the default standard font name
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.StandardFontSize">
      <summary>
            Sets the default standard font size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.InterruptMonitor">
      <summary>
            Gets and sets the interrupt monitor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.IgnoreNotPrinted">
      <summary>
            Ignore the data which are not printed if directly printing the file
            </summary>
      <remarks>
            Only for xlsx file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.CheckExcelRestriction">
      <summary>
            Whether check restriction of excel file when user modify cells related objects.
            For example, excel does not allow inputting string value longer than 32K.
            When you input a value longer than 32K such as by Cell.PutValue(string), if this property is true, you will get an Exception.
            If this property is false, we will accept your input string value as the cell's value so that later
            you can output the complete string value for other file formats such as CSV.
            However, if you have set such kind of value that is invalid for excel file format,
            you should not save the workbook as excel file format later. Otherwise there may be unexpected error for the generated excel file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataFilterOptions">
      <summary>
            The filter options to denote what data should be loaded.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LightCellsDataHandler">
      <summary>
            The data handler for processing cells data when reading template file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.MemorySetting">
      <summary>
            Gets or sets the memory usage options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.HTMLLoadOptions.#ctor">
      <summary>
            Creates an options of loading the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.HTMLLoadOptions.#ctor(Aspose.Cells.LoadFormat)">
      <summary>
            Creates an options of loading the file.
            </summary>
      <param name="loadFormat">The loading format.</param>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.AttachedFilesDirectory">
      <summary>
            The directory that the attached files will be saved to.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use HTMLLoadOptions.StreamProvider property.
            This property will be removed 12 months later since December 2014. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.LoadFormulas">
      <summary>
            Indicates whether importing formulas if the orignal html file contains falmulas
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.SupportDivTag">
      <summary>
            Indicates whether support the layout of &lt;div&gt; tag when the html file contains &lt;div&gt; tags.The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.DeleteRedundantSpaces">
      <summary>
            Indicates whether delete redundant spaces when the text wraps lines using &lt;br&gt;tag.The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.Encoding">
      <summary>
            If not set,use Encoding.Default as default enconding type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.KeepPrecision">
      <summary>
            Inidicates whether not parsing a string value if the length is 15.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.ConvertFormulasData">
      <summary>
            if true, convert string to formula when string value starts with character '=',the default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.StreamProvider">
      <summary>
            Gets or sets the StreamProviderImportHtmlFile for importing objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HTMLLoadOptions.ConvertDateTimeData">
      <summary>
            if set true, do format, default is true
            </summary>
    </member>
    <member name="T:Aspose.Cells.LoadDataOption">
      <summary>
             The load data options.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataOption.SheetIndexes">
      <summary>
            Indicates which sheets to be imported.
            </summary>
      <remarks>If SheetNames is not null, this property will no effect.</remarks>
    </member>
    <member name="F:Aspose.Cells.LoadDataOption.SheetNames">
      <summary>
            Indicates which sheets to be imported.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadDataOption.Formula">
      <summary>
            Indicates whether to import the formulas.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use LoadDataOption.ImportFormula property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadDataOption.ImportFormula">
      <summary>
            Indicates whether to import the formulas.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadDataOption.OnlyCreateWorksheet">
      <summary>
            Indicates that only creating all worksheet instances without loading data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadDataOption.OnlyVisibleWorksheet">
      <summary>
            Inidcates only loading the data of the visible worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LoadFormat">
      <summary>
            Represents the load file format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Auto">
      <summary>
            Represents recognizing the format automatically. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Xlsx">
      <summary>
            Represents Office Open XML spreadsheetML workbook or template, with or without macros. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.SpreadsheetML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Unknown">
      <summary>
            Represents unrecognized format, cannot be loaded. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtLoadOptions">
      <summary>
            Represents the options for loading text file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtLoadOptions.#ctor">
      <summary>
            Creates the options for loading text file.
            </summary>
      <remarks>The default load file type is CSV .</remarks>
    </member>
    <member name="M:Aspose.Cells.TxtLoadOptions.#ctor(Aspose.Cells.LoadFormat)">
      <summary>
            Creates the options for loading text file.
            </summary>
      <param name="loadFormat">The loading format</param>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.Separator">
      <summary>
            Gets and sets char Delimiter of text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.SeparatorString">
      <summary>
            Gets and sets the a string value as separator.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.Encoding">
      <summary>
            Gets and sets the default encoding.Only applies for csv file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.IsMultiEncoded">
      <summary>
            True means that the file contains several encoding.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.PreferredParsers">
      <summary>
            Gets and sets preferred value parsers for loading text file.
            </summary>
      <remarks>
            parsers[0] is the parser will be used for the first column in text template file,
            parsers[1] is the parser will be used for the second column, ...etc.
            The last one(parsers[parsers.length-1]) will be used for all other columns start from parsers.length-1.
            If one item is null, the corresponding column will be parsed by the default parser of Aspose.Cells.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.ConvertDateTimeData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to date data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.LoadStyleStrategy">
      <summary>
            Indicates the strategy to apply style for parsed values when converting string value to number or datetime.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.HasFormula">
      <summary>
            Indicates whether the text is formula if it starts with "=". 
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.KeepExactFormat">
      <summary>
            Indicates whether the exact formatting should be kept for the cell when converting string value to number or datetime.
            When ms excel loading datetime or numeric values from csv file, the formatting of those values may be changed, such as
            leading/tailing zeros of number, year/month/day order of datetime, ...etc.
            To simulate ms excel's behavior, please set this property to false.
            Default value of this property is true, so the cell value will be formatted as the same string value in csv template file.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please set LoadStyleStrategy property to TxtLoadStyleStrategy.BuiltIn to get same result with this property's false value
            and TxtLoadStyleStrategy.ExactFormat to get same result with this property's true value.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotConditionFormatScopeType">
      <summary>
            Represents PivotTable condition formatting scope type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Data">
      <summary>
            Indicates that conditional formatting is applied to the selected data fields. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Field">
      <summary>
            Indicates that conditional formatting is applied to the selected PivotTable field intersections.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Selection">
      <summary>
            Indicates that conditional formatting is applied to the selected cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilter">
      <summary>
            Represents a PivotFilter in PivotFilter Collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.AutoFilter">
      <summary>
            Gets the autofilter of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.FilterType">
      <summary>
            Gets the autofilter type of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.FieldIndex">
      <summary>
            Gets the field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Value1">
      <summary>
            Gets the string value1 of the label pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Value2">
      <summary>
            Gets the string value2 of the label pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.MeasureFldIndex">
      <summary>
            Gets the measure field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.MemberPropertyFieldIndex">
      <summary>
            Gets the member property field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Name">
      <summary>
            Gets the name of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.EvaluationOrder">
      <summary>
            Gets the Evaluation Order of the pivot filter.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilterCollection">
      <summary>
            Represents a collection of all the PivotFilter objects 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFilterCollection.Add(System.Int32,Aspose.Cells.Pivot.PivotFilterType)">
      <summary>
            Adds a PivotFilter Object to the specific type 
            </summary>
      <param name="fieldIndex">the PivotField index </param>
      <param name="type">the PivotFilter type </param>
      <returns>the index of  the PivotFilter Object in this PivotFilterCollection.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFilterCollection.ClearFilter(System.Int32)">
      <summary>
            Clear PivotFilter from the specific PivotField 
            </summary>
      <param name="fieldIndex">the PivotField index </param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilterCollection.Item(System.Int32)">
      <summary>
            Gets the pivotfilter object at the specific index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilterType">
      <summary>
            Represents PivotTable Filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionBeginsWith">
      <summary>
            Indicates the "begins with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionBetween">
      <summary>
            Indicates the "is between" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionContains">
      <summary>
            Indicates the "contains" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionEndsWith">
      <summary>
            Indicates the "ends with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionEqual">
      <summary>
            Indicates the "equal" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionGreaterThan">
      <summary>
            Indicates the "is greater than" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionGreaterThanOrEqual">
      <summary>
            Indicates the "is greater than or equal to" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionLessThan">
      <summary>
            Indicates the "is less than" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionLessThanOrEqual">
      <summary>
            Indicates the "is less than or equal to" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotBeginsWith">
      <summary>
            Indicates the "does not begin with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotBetween">
      <summary>
            Indicates the "is not between" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotContains">
      <summary>
            Indicates the "does not contain" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotEndsWith">
      <summary>
            Indicates the "does not end with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotEqual">
      <summary>
            Indicates the "not equal" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Count">
      <summary>
            Indicates the "count" filter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateBetween">
      <summary>
            Indicates the "between" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateEqual">
      <summary>
            Indicates the "equals" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNewerThan">
      <summary>
            Indicates the "newer than" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNewerThanOrEqual">
      <summary>
            Indicates the "newer than or equal to" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNotBetween">
      <summary>
            Indicates the "not between" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNotEqual">
      <summary>
            Indicates the "does not equal" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateOlderThan">
      <summary>
            Indicates the "older than" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateOlderThanOrEqual">
      <summary>
            Indicates the "older than or equal to" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastMonth">
      <summary>
            Indicates the "last month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastQuarter">
      <summary>
            Indicates the "last quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastWeek">
      <summary>
            Indicates the "last week" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastYear">
      <summary>
            Indicates the "last year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M1">
      <summary>
            Indicates the "January" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M2">
      <summary>
            Indicates the "February" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M3">
      <summary>
            Indicates the "March" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M4">
      <summary>
            Indicates the "April" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M5">
      <summary>
            Indicates the "May" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M6">
      <summary>
            Indicates the "June" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M7">
      <summary>
            Indicates the "July" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M8">
      <summary>
            Indicates the "August" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M9">
      <summary>
            Indicates the "September" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M10">
      <summary>
            Indicates the "October" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M11">
      <summary>
            Indicates the "November" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M12">
      <summary>
            Indicates the "December" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextMonth">
      <summary>
            Indicates the "next month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextQuarter">
      <summary>
            Indicates the "next quarter" for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextWeek">
      <summary>
            Indicates the "next week" for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextYear">
      <summary>
            Indicates the "next year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Percent">
      <summary>
            Indicates the "percent" filter for numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q1">
      <summary>
            Indicates the "first quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q2">
      <summary>
            Indicates the "second quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q3">
      <summary>
            Indicates the "third quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q4">
      <summary>
            Indicates the "fourth quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Sum">
      <summary>
            Indicates the "sum" filter for numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisMonth">
      <summary>
            Indicates the "this month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisQuarter">
      <summary>
            Indicates the "this quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisWeek">
      <summary>
            Indicates the "this week" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisYear">
      <summary>
            Indicate the "this year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Today">
      <summary>
            Indicates the "today" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Tomorrow">
      <summary>
            Indicates the "tomorrow" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Unknown">
      <summary>
            Indicates the PivotTable filter is unknown to the application.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueBetween">
      <summary>
            Indicates the "Value between" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueEqual">
      <summary>
            Indicates the "value equal" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueGreaterThan">
      <summary>
            Indicates the "value greater than" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueGreaterThanOrEqual">
      <summary>
            Indicates the "value greater than or equal to" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueLessThan">
      <summary>
            Indicates the "value less than" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueLessThanOrEqual">
      <summary>
            Indicates the "value less than or equal to" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueNotBetween">
      <summary>
            Indicates the "value not between" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueNotEqual">
      <summary>
            Indicates the "value not equal" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.YearToDate">
      <summary>
            Indicates the "year-to-date" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Yesterday">
      <summary>
            Indicates the "yesterday" filter for date values.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFormatCondition">
      <summary>
            Represents a PivotTable Format Condition in PivotFormatCondition Collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.ScopeType">
      <summary>
            Get and set scope type for the pivot talbe condition format .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.RuleType">
      <summary>
            Get and set rule type for the pivot talbe condition format .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.FormatConditions">
      <summary>
            Get formatconditions for the pivot talbe condition format .
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFormatConditionCollection">
      <summary>
            Represents PivotTable Format Conditions.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFormatConditionCollection.Add">
      <summary>
            Adds a pivot FormatCondition to the collection.
            </summary>
      <returns>pivot FormatCondition object index.</returns>
      <remarks>not supported</remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatConditionCollection.Item(System.Int32)">
      <summary>
            Gets the pivot FormatCondition object at the specific index.
            </summary>
      <returns>pivot FormatCondition object.</returns>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotMissingItemLimitType">
      <summary>
            Represents number of items to retain per field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.Automatic">
      <summary>
            The default number of unique items per PivotField allowed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.Max">
      <summary>
            The maximum number of unique items per PivotField allowed (&gt;32,500).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.None">
      <summary>
            No unique items per PivotField allowed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DifSaveOptions">
      <summary>
            Represents the options of saving dif file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SaveOptions">
      <summary>
            Represents all save options
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.SaveFormat">
      <summary>
            Gets the save file format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.ClearData">
      <summary>
            Make the workbook empty after saving the file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.CachedFileFolder">
      <summary>
            The cached file folder is used to store some large data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.ValidateMergedAreas">
      <summary>
            Indicates whether validate merged cells before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.MergeAreas">
      <summary>
            Indicates whether merge the areas of conditional formatting and validation before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.CreateDirectory">
      <summary>
            If true and the directory does not exist, the directory will be automatically created before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.SortNames">
      <summary>
            Indicates whether sorting defined names before saving file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.RefreshChartCache">
      <summary>
            Indicates whether refreshing chart cache data
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.PdfExportImagesFolder">
      <summary>
            The physical folder where images will be saved when exporting a workbook to Aspose.Pdf XML format.
            Default is an empty string. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.EnableHTTPCompression">
      <summary>
            Indicates if http compression is to be used in user's IIS.
            </summary>
      <remarks>Please specify this property to true if http compression is used.</remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.WarningCallback">
      <summary>
            Gets or sets warning callback.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DifSaveOptions.#ctor">
      <summary>
            Creates the options for saving DIF file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ImageSaveOptions">
      <summary>
            Represents image save options
            </summary>
    </member>
    <member name="M:Aspose.Cells.ImageSaveOptions.#ctor">
      <summary>
            Creates the options for saving image file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ImageSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving image file.
            </summary>
      <param name="saveFormat">The file format.
            It must be tiff or svg.</param>
    </member>
    <member name="P:Aspose.Cells.ImageSaveOptions.ImageOrPrintOptions">
      <summary>
            Addtional image creation options
            </summary>
    </member>
    <member name="T:Aspose.Cells.SvgSaveOptions">
      <summary>
            Represents Svg save options
            </summary>
    </member>
    <member name="M:Aspose.Cells.SvgSaveOptions.#ctor">
      <summary>
            Creates the options for saving svg file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.SvgSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving svg file.
            </summary>
      <param name="saveFormat">The file format.
            It must be svg.</param>
    </member>
    <member name="P:Aspose.Cells.SvgSaveOptions.SheetIndex">
      <summary>
            Gets and sets which worksheet should be exported.
            If the value is -1, the active  worksheet will be exported.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WorkbookDesigner">
      <summary>
            Encapsulates the object that represents a designer spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Create a connection object, specify the provider info and set the data source.
            OleDbConnection con = new OleDbConnection("provider=microsoft.jet.oledb.4.0;data source=d:\\test\\Northwind.mdb");
            //Open the connection object.
            con.Open();
            //Create a command object and specify the SQL query.
            OleDbCommand cmd = new OleDbCommand("Select * from [Order Details]", con);
            //Create a data adapter object.
            OleDbDataAdapter da = new OleDbDataAdapter();
            //Specify the command.
            da.SelectCommand = cmd;
            //Create a dataset object.
            DataSet ds = new DataSet();
            //Fill the dataset with the table records.
            da.Fill(ds, "Order Details");
            //Create a datatable with respect to dataset table.
            DataTable dt = ds.Tables["Order Details"];
            //Create WorkbookDesigner object.
            WorkbookDesigner wd = new WorkbookDesigner();
            //Open the template file (which contains smart markers).
            wd.Open("D:\\test\\SmartMarker_Designer.xls");
            //Set the datatable as the data source.
            wd.SetDataSource(dt);
            //Process the smart markers to fill the data into the worksheets.
            wd.Process(true);
            //Save the excel file.
            wd.Workbook.Save("D:\\test\\outSmartMarker_Designer.xls");
            
            [Visual Basic]
            
            'Create a connection object, specify the provider info and set the data source.
            Dim con As OleDbConnection = New OleDbConnection("provider=microsoft.jet.oledb.4.0;data source=d:\test\Northwind.mdb")
            'Open the connection object.
            con.Open()
            'Create a command object and specify the SQL query.
            Dim cmd As OleDbCommand = New OleDbCommand("Select * from [Order Details]", con)
            'Create a data adapter object.
            Dim da As OleDbDataAdapter = New OleDbDataAdapter()
            'Specify the command.
            da.SelectCommand = cmd
            'Create a dataset object.
            Dim ds As DataSet = New DataSet()
            'Fill the dataset with the table records.
            da.Fill(ds, "Order Details")
            'Create a datatable with respect to dataset table.
            Dim dt As DataTable = ds.Tables("Order Details")
            'Create WorkbookDesigner object.
            Dim wd As WorkbookDesigner = New WorkbookDesigner()
            'Open the template file (which contains smart markers).
            wd.Open("D:\test\SmartMarker_Designer.xls")
            'Set the datatable as the data source.
            wd.SetDataSource(dt)
            'Process the smart markers to fill the data into the worksheets.
            wd.Process(True)
            'Save the excel file.
            wd.Workbook.Save("D:\test\outSmartMarker_Designer.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.WorkbookDesigner" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.#ctor(Aspose.Cells.Workbook)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.WorkbookDesigner" /> class.
            </summary>
      <param name="workbook">
            The template workbook file.
            </param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.ClearDataSource">
      <summary>
            Clears all data sources.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataSet)">
      <summary>
            Sets data source of a DataSet object.
            </summary>
      <param name="dataSet">DataSet object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataTable)">
      <summary>
            Sets data source of a DataTable object.
            </summary>
      <param name="dataTable">DataTable object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Data.DataView)">
      <summary>
            Sets data source of a DataView object and binds it to a data source name.
            </summary>
      <param name="dataSourceName">Data source name.</param>
      <param name="dataView">DataView object.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.DataView)">
      <summary>
            Sets data source of a DataView object.
            </summary>
      <param name="dataView">DataView object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Data.IDataReader,System.Int32)">
      <summary>
             Sets data source of a IDataReader object.
            </summary>
      <param name="name">The data source map name.</param>
      <param name="dataReader">IDataReader object</param>
      <param name="rowCount">The number of the data rows.
            If the smart marker does not contains "noadd",
            we have to insert rows by the row count for performance issue and dynamic repeated formulas.
            -1 means the param is useless.
            </param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Object)">
      <summary>
            Sets data binding to a variable.
            </summary>
      <param name="variable">Variable name created using smark marker.</param>
      <param name="data">Source data.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.String,System.Object[])">
      <summary>
            Sets data array binding to a variable.
            </summary>
      <param name="variable">Variable name created using smark marker.</param>
      <param name="dataArray">Source data array.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process(System.Boolean)">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
      <param name="isPreserved">True if the unrecognized smart marker is preserved.</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.Process(System.Int32,System.Boolean)">
      <summary>
            Processes the smart markers and populates the data source values.
            </summary>
      <param name="sheetIndex">Worksheet index.</param>
      <param name="isPreserved">True if the unrecognized smart marker is preserved.</param>
      <remarks>This method works on worksheet level.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.GetSmartMarkers">
      <summary>
            Returns a collection of smart markers in a spreadsheet.
            </summary>
      <returns>A collection of smart markers</returns>
      <remarks>A string array is created on every call. The array is sorted and duplicated values are removed.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.OleDb.OleDbConnection)">
      <summary>
            Sets data source of a OleDbConnection object.
            </summary>
      <param name="connection">OleDbConnection object</param>
    </member>
    <member name="M:Aspose.Cells.WorkbookDesigner.SetDataSource(System.Data.SqlClient.SqlConnection)">
      <summary>
            Sets data source of a SqlConnection object.
            </summary>
      <param name="connection">SqlConnection object</param>
    </member>
    <member name="P:Aspose.Cells.WorkbookDesigner.Workbook">
      <summary>
            Gets and sets the <see cref="P:Aspose.Cells.WorkbookDesigner.Workbook" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookDesigner.UpdateReference">
      <summary>
            Indicates if references in other worksheets will be updated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookDesigner.CalculateFormula">
      <summary>
            Indicates whether formulas should be calculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookDesigner.CallBack">
      <summary>
            Gets and sets callback interface of processing smartmarker.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingValueCollection">
      <summary>
            Describes a collection of CFValueObject.
            Use only for icon sets.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingValueCollection.Add(Aspose.Cells.FormatConditionValueType,System.String)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingValue" /> object.
            </summary>
      <param name="type">The value type.</param>
      <param name="value">The value.</param>
      <returns>Returns the index of new object in the list.</returns>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValueCollection.Item(System.Int32)">
      <summary>
            Get the CFValueObject element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.FormatConditionValueType">
      <summary>
            Condition value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Formula">
      <summary>
            The minimum/ midpoint / maximum value for the
            gradient is determined by a formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Max">
      <summary>
            Indicates that the maximum value in the range shall be
            used as the maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Min">
      <summary>
            Indicates that the minimum value in the range shall be
            used as the minimum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Number">
      <summary>
            Indicates that the minimum / midpoint / maximum
            value for the gradient is specified by a constant
            numeric value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Percent">
      <summary>
            Value indicates a percentage between the minimum
            and maximum values in the range shall be used as the
            minimum / midpoint / maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Percentile">
      <summary>
            Value indicates a percentile ranking in the range shall
            be used as the minimum / midpoint / maximum value
            for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.AutomaticMax">
      <summary>
            Indicates that the Automatic maximum value in the range shall be
            used as the Automatic maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.AutomaticMin">
      <summary>
            Indicates that the Automatic minimum value in the range shall be
            used as the Automatic minimum value for the gradient.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IconSetType">
      <summary>
            Icon set type for conditional formatting. 
            The threshold values for triggering the different icons within a set are
            configurable, and the icon order is reversible. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows3">
      <summary>
            3 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray3">
      <summary>
            3 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Flags3">
      <summary>
            3 flags icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Signs3">
      <summary>
            3 signs icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Symbols3">
      <summary>
            3 symbols icon set (circled).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Symbols32">
      <summary>
            3 Symbols icon set (uncircled).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights31">
      <summary>
            3 traffic lights icon set (unrimmed).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights32">
      <summary>
            3 traffic lights icon set with thick black border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows4">
      <summary>
            4 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray4">
      <summary>
            4 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Rating4">
      <summary>
            4 ratings icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.RedToBlack4">
      <summary>
            4 'red to black' icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights4">
      <summary>
            4 traffic lights icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows5">
      <summary>
            5 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray5">
      <summary>
            5 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Quarters5">
      <summary>
            5 quarters icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Rating5">
      <summary>
            5 rating icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Stars3">
      <summary>
            3 stars set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Boxes5">
      <summary>
            5 boxes set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Triangles3">
      <summary>
            3 triangles set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.None">
      <summary>
            None 
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.CustomSet">
      <summary>
            CustomSet ,This element is read-only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TimePeriodType">
      <summary>
            Used in a FormatConditionType.TimePeriod conditional formatting rule. 
            These are dynamic time periods, which change based on
            the date the conditional formatting is refreshed / applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Today">
      <summary>
            Today's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Yesterday">
      <summary>
            Yesterday's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Tomorrow">
      <summary>
            Tomorrow's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Last7Days">
      <summary>
            A date in the last seven days.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.ThisMonth">
      <summary>
            A date occuring in this calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.LastMonth">
      <summary>
            A date occuring in the last calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.NextMonth">
      <summary>
            A date occuring in the next calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.ThisWeek">
      <summary>
            A date occuring this week.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.LastWeek">
      <summary>
            A date occuring last week.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.NextWeek">
      <summary>
            A date occuring next week.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Top10">
      <summary>
            Describe the Top10 conditional formatting rule. 
            This conditional formatting rule highlights cells whose
            values fall in the top N or bottom N bracket, as specified.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.IsPercent">
      <summary>
            Get or set the flag indicating whether a "top/bottom n" rule is a "top/bottom n percent" rule.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.IsBottom">
      <summary>
            Get or set the flag indicating whether a "top/bottom n" rule is a "bottom n" rule. '1' indicates 'bottom'.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.Rank">
      <summary>
            Get or set the value of "n" in a "top/bottom n" conditional formatting rule.
            If IsPercent is true, the value must between 0 and 100.
            Otherwise it must between 0 and 1000.
            Default value is 10.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ContentDisposition">
      <summary>
            The content dispostion type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ContentDisposition.Inline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ContentDisposition.Attachment">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.DigitalSignatures.DigitalSignature">
      <summary>
            Signature in file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DigitalSignatures.DigitalSignature.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.DateTime)">
      <summary>
            Constructor of digitalSignature.
            </summary>
      <param name="Certificate">Certificate object that was used to sign the document.</param>
      <param name="Comments">The purpose to signature.</param>
      <param name="SignTime">The time when the document was signed.</param>
    </member>
    <member name="P:Aspose.Cells.DigitalSignatures.DigitalSignature.Certificate">
      <summary>
            Certificate object that was used to sign the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DigitalSignatures.DigitalSignature.Comments">
      <summary>
            The purpose to signature.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DigitalSignatures.DigitalSignature.SignTime">
      <summary>
            The time when the document was signed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DigitalSignatures.DigitalSignature.IsValid">
      <summary>
             If this digital signature is valid and the document has not been tampered with,
             this value will be true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DigitalSignatures.DigitalSignatureCollection">
      <summary>
             Provides a collection of digital signatures attached to a document. 
            </summary>
      <example>
             The following example shows how to create digital signature
             <code>
             [C#]
             internal void ValidateSignature()
             {
                Workbook wb = new Workbook(@"c:\newfile.xlsx");
                //wb.IsDigitallySigned is true when the workbook is signed already.
                System.Console.WriteLine(wb.IsDigitallySigned);
                //get digitalSignature collection from workbook
                DigitalSignatureCollection dsc = wb.GetDigitalSignature();
                foreach (DigitalSignature ds in dsc)
                {
                    System.Console.WriteLine(ds.Comments);
                    System.Console.WriteLine(ds.SignTime);
                    System.Console.WriteLine(ds.IsValid);
                }
             }
             internal void SignSignature()
             {
                //dsc is signature collection contains one or more signature needed to sign
                DigitalSignatureCollection dsc = new DigitalSignatureCollection();
                //cert must contain private key, it can be contructed from cert file or windows certificate collection.
                //123456 is password of cert
                X509Certificate2 cert = new X509Certificate2("c:\\mykey2.pfx", "123456");
                DigitalSignature ds = new DigitalSignature(cert, "test for sign", DateTime.Now);
                dsc.Add(ds);
                Workbook wb = new Workbook();
                //wb.SetDigitalSignature sign all signatures in dsc
                wb.SetDigitalSignature(dsc);
                wb.Save(@"c:\newfile.xlsx");
             }
            
             [Visual Basic]
                Sub ValidateSignature()
                Dim workbook As Workbook = New Workbook("c:\newfile.xlsx")
                'Workbook.IsDigitallySigned is true when the workbook is signed already.
                System.Console.WriteLine(workbook.IsDigitallySigned)
                'get digitalSignature collection from workbook
                Dim dsc As DigitalSignatureCollection = workbook.GetDigitalSignature()
                Dim ds As DigitalSignature
                For Each ds In dsc
                    System.Console.WriteLine(ds.Comments)
                    System.Console.WriteLine(ds.SignTime)
                    System.Console.WriteLine(ds.IsValid)
                Next
             End Sub
            
             Sub SignSignature()
                'dsc is signature collection contains one or more signature needed to sign
                Dim dsc As DigitalSignatureCollection = New DigitalSignatureCollection()
                'cert must contain private key, it can be contructed from cert file or windows certificate collection.
                Dim cert As X509Certificate2 = New X509Certificate2("c:\mykey2.pfx", "123456")
                'create a signature with certificate, sign purpose and sign time
                Dim ds As DigitalSignature = New DigitalSignature(cert, "test for sign", DateTime.Now)
                dsc.Add(ds)
                Dim workbook As Workbook = New Workbook()
                'workbook.SetDigitalSignature sign all signatures in dsc
                workbook.SetDigitalSignature(dsc)
                workbook.Save("c:\newfile.xlsx")
             End Sub
             </code></example>
    </member>
    <member name="M:Aspose.Cells.DigitalSignatures.DigitalSignatureCollection.#ctor">
      <summary>
            The constructor of DigitalSignatureCollection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DigitalSignatures.DigitalSignatureCollection.Add(Aspose.Cells.DigitalSignatures.DigitalSignature)">
      <summary>
            Add one signature to DigitalSignatureCollection.
            </summary>
      <param name="digitalSignature">Digital signature in collection.</param>
    </member>
    <member name="M:Aspose.Cells.DigitalSignatures.DigitalSignatureCollection.GetEnumerator">
      <summary>
            Get the enumerator for DigitalSignatureCollection, 
            this enumerator allows iteration over the collection
            </summary>
      <returns>The enumerator to iteration.</returns>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions">
      <summary>
            Settings of pdf when converting excel to pdf, PDF/A does not allow security setting.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.#ctor">
      <summary>
            The constructor of PdfSecurityOptions
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.UserPassword">
      <summary>
            Gets or sets the user password
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.OwnerPassword">
      <summary>
            Gets or sets the owner password of the document
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.PrintPermission">
      <summary>
            Permission to print pdf document
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.ModifyDocumentPermission">
      <summary>
            Permission to modify pdf document
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.ExtractContentPermissionObsolete">
      <summary>
            Permission to copy or extract content Obsoleted according to PDF reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.AnnotationsPermission">
      <summary>
            Permission to comment on the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.FillFormsPermission">
      <summary>
            Permission to fill the form fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.ExtractContentPermission">
      <summary>
             Permission to copy or extract content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.AssembleDocumentPermission">
      <summary>
            Permission to insert, rotate, or delete pages and create bookmarks or thumbnail images even if ModifyDocumentPermission is not set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfSecurity.PdfSecurityOptions.FullQualityPrintPermission">
      <summary>
            Permission to print in high quality.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HeaderFooterCommandType">
      <summary>
            Represents the command type of header and footer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Text">
      <summary>
            The text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentPage">
      <summary>
            Current page number
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Pagecount">
      <summary>
            Page count
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentDate">
      <summary>
            Current date
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentTime">
      <summary>
            Current time
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.SheetName">
      <summary>
            Sheet name
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.FileName">
      <summary>
            File name without path
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.FilePath">
      <summary>
             File path without file name
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadLength">
      <summary>
            Enumerates the line end width of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Short">
      <summary>
            Short line end length
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Medium">
      <summary>
            Medium line end length
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Long">
      <summary>
            Long line end length
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadWidth">
      <summary>
            Enumerates the line end width of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Narrow">
      <summary>
             Short line end width.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Medium">
      <summary>
            Medium line end width.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Wide">
      <summary>
            Wide line end width.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextOverflowType">
      <summary>
            Represents the way the text vertical or horizontal overflow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Clip">
      <summary>
            Pay attention to top and bottom barriers. 
            Provide no indication that there is text which is not visible.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Ellipsis">
      <summary>
            Pay attention to top and bottom barriers. 
            Use an ellipsis to denote that there is text which is not visible.
            Only for vertical overflow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Overflow">
      <summary>
            Overflow the text and pay no attention to top and bottom barriers.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FileFormatUtil">
      <summary>
            Provides utility methods for conveting file format enums to strings or file extensions and back.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)">
      <summary>
            Detects and returns the information about a format of a excel stored in a stream. 
            </summary>
      <param name="stream">
      </param>
      <returns>A <see cref="T:Aspose.Cells.FileFormatInfo" /> object that contains the detected information.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)">
      <summary>
            Detects and returns the information about a format of a excel stored in a file. 
            </summary>
      <param name="filePath">The file path.</param>
      <returns>A <see cref="T:Aspose.Cells.FileFormatInfo" /> object that contains the detected information.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.ExtensionToSaveFormat(System.String)">
      <summary>
            Converts a file name extension into a SaveFormat value.
            </summary>
      <param name="extension">The file extension. Can be with or without a leading dot. Case-insensitive.</param>
      <returns>
      </returns>
      <remarks>If the extension cannot be recognized, returns <see cref="F:Aspose.Cells.SaveFormat.Unknown" />.</remarks>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.IsTemplateFormat(System.String)">
      <summary>
            Returns true if the extension is .xlt, .xltX, .xltm,.ots.
            </summary>
      <param name="extension">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.LoadFormatToExtension(Aspose.Cells.LoadFormat)">
      <summary>
            Converts a load format enumerated value into a file extension.
            </summary>
      <param name="loadFormat">The loaded file format.</param>
      <returns> The returned extension is a lower-case string with a leading dot.</returns>
      <remarks>If can not convert, returns null.</remarks>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.LoadFormatToSaveFormat(Aspose.Cells.LoadFormat)">
      <summary>
            Converts a LoadFormat value to a SaveFormat value if possible. 
            </summary>
      <param name="loadFormat">The load format.</param>
      <returns>The save format.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.SaveFormatToExtension(Aspose.Cells.SaveFormat)">
      <summary>
            Converts a save format enumerated value into a file extension.
            </summary>
      <param name="format">The save format.</param>
      <returns>The returned extension is a lower-case string with a leading dot. </returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.SaveFormatToLoadFormat(Aspose.Cells.SaveFormat)">
      <summary>
            Converts a SaveFormat value to a LoadFormat value if possible. 
            </summary>
      <param name="saveFormat">The save format.</param>
      <returns>The load format</returns>
    </member>
    <member name="T:Aspose.Cells.PasteType">
      <summary>
            Represents the paste special type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.All">
      <summary>
            Copies all data of the ranage.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Default">
      <summary>
            It works as "All" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.AllExceptBorders">
      <summary>
            Copies all data of the ranage withoutd the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.DefaultExceptBorders">
      <summary>
             It works as "All except borders" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.ColumnWidths">
      <summary>
            Only copies the widths of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.RowHeights">
      <summary>
            Only copies the heights of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Comments">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Formats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Formulas">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.FormulasAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Validation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Values">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.ValuesAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotField">
      <summary>
            Represents a field in a PivotTable report.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetPivotFilterByType(Aspose.Cells.Pivot.PivotFilterType)">
      <summary>
            Gets the pivot filter of the pivot field by type
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetPivotFilters">
      <summary>
            Gets the pivot filters of the pivot field 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.InitPivotItems">
      <summary>
            Init the pivot items of the pivot field
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetCalculatedFieldFormula">
      <summary>
            Get the formula string of the specified calculated field .
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.SetSubtotals(Aspose.Cells.Pivot.PivotFieldSubtotalType,System.Boolean)">
      <summary>
            Sets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <param name="shown">whether the specified field shows that subtotals.</param>
      <see cref="T:Aspose.Cells.Pivot.PivotFieldSubtotalType" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetSubtotals(Aspose.Cells.Pivot.PivotFieldSubtotalType)">
      <summary>
            Gets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <returns>whether the specified field shows that subtotals.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.IsHiddenItem(System.Int32)">
      <summary>
            Indicates whether the specific PivotItem is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <returns>whether the specific PivotItem is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItem(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.IsHiddenItemDetail(System.Int32)">
      <summary>
            Indicates whether the specific PivotItem is hidden detail.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <returns>whether the specific PivotItem is hidden detail</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItemDetail(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a pivot field is hidden detail.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHiddenDetail">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideDetail(System.Boolean)">
      <summary>
             Sets whether the PivotItems in a pivot field is hidden detail.That is collapse/expand this field.
            </summary>
      <param name="isHiddenDetail">whether the PivotItems is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItem(System.String,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="itemValue">the value of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.AddCalculatedItem(System.String,System.String)">
      <summary>
            Add a calculated item to the pivot field.
            </summary>
      <param name="name">The item's name.</param>
      <param name="formula">The item's formula</param>
      <remarks>
            Only supports to add calculated item to Row/Column field.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.PivotItems">
      <summary>
            Gets the pivot items of the pivot field
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Range">
      <summary>
            Gets the group range of the pivot field
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsCalculatedField">
      <summary>
            Indicates whether the specified PivotTable field is calculated field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseIndex">
      <summary>
            Represents the PivotField index in the base PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Position">
      <summary>
            Represents the PivotField index in the PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Name">
      <summary>
            Represents the PivotField name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DisplayName">
      <summary>
            Represents the PivotField display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoSubtotals">
      <summary>
            Indicates whether the specified field shows automatic subtotals. Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToColumn">
      <summary>
            Indicates whether the specified field can be dragged to the column position.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToHide">
      <summary>
             Indicates whether the specified field can be dragged to the hide position.
             The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToRow">
      <summary>
            Indicates whether the specified field can be dragged to the row position.
            The default value is true. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToPage">
      <summary>
            Indicates whether the specified field can be dragged to the page position.
             The default value is true.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToData">
      <summary>
            Indicates whether the specified field can be dragged to the data position.
             The default value is true.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsMultipleItemSelectionAllowed">
      <summary>
            indicates whether the field can have multiple items
            selected in the page field
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsRepeatItemLabels">
      <summary>
            indicates whether the field can repeat items labels
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsIncludeNewItemsInFilter">
      <summary>
            indicates whether the field can include new items in manual filter
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsInsertPageBreaksBetweenItems">
      <summary>
            indicates whether the field can insert page breaks between items
            insert page break after each item
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowAllItems">
      <summary>
            Indicates whether all items in the PivotTable report are displayed, 
            even if they don't contain summary data.
            show items with no data
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoSort">
      <summary>
            Indicates whether the specified PivotTable field is automatically sorted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAscendSort">
      <summary>
            Indicates whether the specified PivotTable field is autosorted ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoSortField">
      <summary>
            Represents auto sort field index. 
            -1 means PivotField itself,others means the position of the data fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoShow">
      <summary>
            Indicates whether the specified PivotTable field is automatically shown,only valid for excel 2003.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAscendShow">
      <summary>
            Indicates whether the specified PivotTable field is autoshown ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoShowCount">
      <summary>
            Represent the number of top or bottom items
            that are automatically shown in the specified PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoShowField">
      <summary>
            Represents auto show field index. -1 means PivotField itself.
            It should be the index of the data fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Function">
      <summary>
            Represents the function used to summarize the PivotTable data field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DataDisplayFormat">
      <summary>
            Represents how to display the values contained in a data field.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseField">
      <summary>
            Represents the base field for a custom calculation.
            Please use PivotField.BaseFieldIndex instead
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseFieldIndex">
      <summary>
            Represents the base field for a custom calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItemPosition">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
             Because PivotItemPosition.Custom is only for read,if you need to set PivotItemPosition.Custom,
             please set PivotField.BaseItemIndex attribute.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotItemPosition" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItem">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
             Please use PivotField.BaseItemIndex for instead.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItemIndex">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.CurrentPageItem">
      <summary>
            Represents the current page item showing for the page field (valid only for page fields). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Number">
      <summary>
            Represents the built-in display format of numbers and dates.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.InsertBlankRow">
      <summary>
            Indicates whether inserting blank line after each item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowSubtotalAtTop">
      <summary>
            when ShowInOutlineForm is true, then display subtotals at the top of the list of items instead of at the bottom
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowInOutlineForm">
      <summary>
            Indicates whether layout this field in outline form on the Pivot Table view
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.NumberFormat">
      <summary>
            Represents the custom display format of numbers and dates.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Items">
      <summary>
            Get all base items;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.OriginalItems">
      <summary>
            Get the original base items;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ItemCount">
      <summary>
            Gets the base item count of this pivot field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowCompact">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldCollection">
      <summary>
            Represents a collection of all the PivotField objects
            in the PivotTable's specific PivotFields type.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.AddByBaseIndex(System.Int32)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="baseFieldIndex">field index in the base PivotFields.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.Add(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="pivotField">a PivotField Object.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.Clear">
      <summary>
            clear all fields of PivotFieldCollection
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Type">
      <summary>
             Gets the PivotFields type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Count">
      <summary>
            Gets the count of the pivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Item(System.Int32)">
      <summary>
            Gets the PivotField Object at the specific index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Item(System.String)">
      <summary>
            Gets the PivotField Object of the specific name.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat">
      <summary>
            Represents data display format in the PivotTable data field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.Normal">
      <summary>
            Represents normal dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.DifferenceFrom">
      <summary>
             Represents difference from dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOf">
      <summary>
            Represents percentage of dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageDifferenceFrom">
      <summary>
            Represents percentage difference from  display format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RunningTotalIn">
      <summary>
            Represents running total in dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfRow">
      <summary>
            Represents percentage of row dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfColumn">
      <summary>
            Represents percentage of column dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfTotal">
      <summary>
            Represents percentage of total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.Index">
      <summary>
            Represents index dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentRowTotal">
      <summary>
            Represents percentage of parent row total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentColumnTotal">
      <summary>
            Represents percentage of parent column total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentTotal">
      <summary>
            Represents percentage of parent total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfRunningTotalIn">
      <summary>
            Represents percentage of running total in dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RankSmallestToLargest">
      <summary>
            Represents smallest to largest dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RankLargestToSmallest">
      <summary>
            Represents largest to smallest dispaly format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldSubtotalType">
      <summary>
            Summary description for PivotFieldSubtotalType.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.None">
      <summary>
            Represents None subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Automatic">
      <summary>
            Represents Automatic subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Sum">
      <summary>
            Represents Sum subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Count">
      <summary>
            Represents Count subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Average">
      <summary>
            Represents Average subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Max">
      <summary>
            Represents Max subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Min">
      <summary>
            Represents Min subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Product">
      <summary>
            Represents Product subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.CountNums">
      <summary>
            Represents Count Nums subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Stdev">
      <summary>
            Represents Stdev subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Stdevp">
      <summary>
            Represents Stdevp subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Var">
      <summary>
            Represents Var subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Varp">
      <summary>
            Represents Varp subtotal type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldType">
      <summary>
            Represents PivotTable field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Undefined">
      <summary>
            Presents base pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Row">
      <summary>
            Presents row pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Column">
      <summary>
            Presents column pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Page">
      <summary>
            Presents page pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Data">
      <summary>
            Presents data pivot field type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotGroupByType">
      <summary>
            Represents PivotTable groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.RangeOfValues">
      <summary>
            Presents rangeofvalues groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Seconds">
      <summary>
            Presents Seconds groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Minutes">
      <summary>
            Presents Minutes groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Hours">
      <summary>
            Presents Hours groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Days">
      <summary>
            Presents Days groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Months">
      <summary>
            Presents Months groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Quarters">
      <summary>
            Presents Quarters groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Years">
      <summary>
            Presents Years groupby type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItem">
      <summary>
            Represents a item in a PivotField report.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.Move(System.Int32,System.Boolean)">
      <summary>
            Moves the item up or down
            </summary>
      <param name="count">
            The number of moving up or down.
            Move the item up if this is less than zero;
            Move the item down if this is greater than zero.
            </param>
      <param name="isSameParent">
            Specifying whether moving operation is in the same parent node or not
            </param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.Move(System.Int32)">
      <summary>
            Moves the item up or down.
            </summary>
      <param name="count">The number of moving up or down.
            Move the item up if this is less than zero;
            Move the item down if this is greater than zero.
            </param>
      <remarks>NOTE: This method is now obsolete. Instead,
            please use Move(int count, bool isSameParent) method.
            This method will be removed 12 months later since December 2014.
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetStringValue">
      <summary>
            Gets the string value of the pivot item
            If the value is null, it will return ""
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetDoubleValue">
      <summary>
            Gets the double value of the pivot item
            If the value is null or not number ,it will return 0
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetDateTimeValue">
      <summary>
            Gets the date time value of the pivot item
            If the value is null ,it will return DateTime.MinValue
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.IsHidden">
      <summary>
            Gets and Sets whether the pivot item is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Position">
      <summary>
            Specifying the position index in all the PivotItems,not the PivotItems under the same parent node.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.PositionInSameParentNode">
      <summary>
            Specifying the position index in the PivotItems under the same parent node.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Value">
      <summary>
            Gets the value of the pivot item
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Name">
      <summary>
            Gets the name of the pivot item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Index">
      <summary>
            Gets the index of the pivot item in the pivot field
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItemCollection">
      <summary>
            Represents a collection of all the PivotItem objects in the PivotField's 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItemCollection.ChangeitemsOrder(System.Int32,System.Int32)">
      <summary>
            Directly chanages the orders of the two items.
            </summary>
      <param name="sourceIndex">The current index</param>
      <param name="destIndex">The dest index</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Item(System.String)">
      <summary>
      </summary>
      <param name="itemValue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Count">
      <summary>
            Gets the count of the pivot items.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItemPosition">
      <summary>
            Represents PivotTable base item Next/Previous/All position in the base field .
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Previous">
      <summary>
            Represents the previous pivot item in the PivotField.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Next">
      <summary>
            Represents the next pivot item in the PivotField.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Custom">
      <summary>
            Represents a pivot item index, as specified by Pivot Items, that specifies a pivot item in the PivotField.
            <remarks>only read</remarks></summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotPageFields">
      <summary>
            Represents the pivot page field items 
            if the pivot table data source is consolidation ranges.
            It only can contain up to 4 fields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.#ctor">
      <summary>
            Represents the pivot page field items.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.AddPageField(System.String[])">
      <summary>
            Adds a page field.
            </summary>
      <param name="pageItems">Page field item label</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.AddIdentify(System.Int32,System.Int32[])">
      <summary>
            Sets which item label in each page field to use to identify the data range.
            The pageItemIndex.Length must be equal to PageFieldCount, so please add the page field first.
            </summary>
      <param name="rangeIndex">The consolidation data range index.</param>
      <param name="pageItemIndex">The page item index in the each page field.
            pageItemIndex[2] = 1 means the seconde item in the third field to use to identify this range.
            pageItemIndex[1] = -1 means no item in the second field to use to identify this range 
            and MS will auto create "blank" item in the second field  to identify this range.
            </param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotPageFields.PageFieldCount">
      <summary>
            Gets the number of page fields.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTable">
      <summary>
            Summary description for PivotTable.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CopyStyle(Aspose.Cells.Pivot.PivotTable)">
      <summary>
            Copies named style from another pivot table.
            </summary>
      <param name="pivotTable">Source pivot table.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,System.String)">
      <summary>
            Removes a field from specific field area
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="fieldName">The name in the base fields.</param>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,System.Int32)">
      <summary>
            Removes a field from specific field area
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)">
      <summary>
            Remove field from specific field area
            </summary>
      <param name="fieldType">the fields area type.It could be one of the following
                      values: <table border="1"><tr><td>PivotFieldType.Row</td></tr><tr><td>PivotFieldType.Column</td></tr><tr><td>PivotFieldType.Data</td></tr><tr><td>PivotFieldType.Page</td></tr></table></param>
      <param name="pivotField">the field in the base fields.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,System.String)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="fieldName">The name in the base fields.</param>
      <returns>The field position in the specific fields.If there is no field named as it, return -1.</returns>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,System.Int32)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <returns>The field position in the specific fields.</returns>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">the fields area type.It could be one of the following
                      values: <table border="1"><tr><td>PivotFieldType.Row</td></tr><tr><td>PivotFieldType.Column</td></tr><tr><td>PivotFieldType.Data</td></tr><tr><td>PivotFieldType.Page</td></tr></table></param>
      <param name="pivotField">the field in the base fields.</param>
      <returns>the field position in the specific fields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddCalculatedField(System.String,System.String,System.Boolean)">
      <summary>
            Adds a calclulated field to pivot field.
            </summary>
      <param name="name">The name of the calculated field</param>
      <param name="formula">The formula of the calculated field.</param>
      <param name="dragToDataArea">True,drag this field to data area immediately</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddCalculatedField(System.String,System.String)">
      <summary>
            Adds a calclulated field to pivot field and drag it to data area.
            </summary>
      <param name="name">The name of the calculated field</param>
      <param name="formula">The formula of the calculated field.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Fields(Aspose.Cells.Pivot.PivotFieldType)">
      <summary>
            Gets the specific fields by the field type.
            </summary>
      <param name="fieldType">the field type.</param>
      <returns>the specific fields</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Move(System.Int32,System.Int32)">
      <summary>
             Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="row">row index.</param>
      <param name="column">column index.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Move(System.String)">
      <summary>
            Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="destCellName">the dest cell name.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ChangeDataSource(System.String[])">
      <summary>
            Set pivottable's source data.
            Sheet1!$A$1:$C$3
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetSource">
      <summary>
            Get pivottable's source data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RefreshData">
      <summary>
            Refreshes pivottable's data and setting from it's data source.
            </summary>
      <remarks>
            We will gather data from data source to a pivot cache ,then calcualte the data in the cache to the cells.
            This method is only used to gather all data to a pivot cache.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CalculateData">
      <summary>
            Calculates pivottable's data to cells.
            </summary>
      <remarks>
            Cell.Value in the pivot range could not return the correct result if the method is not been called.
            This method caclulates data with an inner pivot cache,not original data source.
            So if the data source is changed, please call RefreshData() method first.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ClearData">
      <summary>
            Clear PivotTable's data and formatting
            </summary>
      <remarks>
            If this method is not callled before you add or delete PivotField, Maybe the PivotTable data is not corrected
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CalculateRange">
      <summary>
             Calculates pivottable's range.
             </summary>
      <remarks>
             If this method is not been called,maybe the pivottable range is not corrected.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.FormatAll(Aspose.Cells.Style)">
      <summary>
            Format all the cell in the pivottable area
            </summary>
      <param name="style">Style which is to format</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Format(System.Int32,System.Int32,Aspose.Cells.Style)">
      <summary>
            Format the cell in the pivottable area
            </summary>
      <param name="row">RowIndex of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style which is to format the cell</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetAutoGroupField(System.Int32)">
      <summary>
            Sets auto field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetAutoGroupField(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Sets auto field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the specific fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(System.Int32,System.Double,System.Double,System.Collections.ArrayList,System.Double)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
      <param name="startVal">Specifies the starting value for numeric grouping.</param>
      <param name="endVal">Specifies the ending value for numeric grouping. </param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by  numeric grouping.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(Aspose.Cells.Pivot.PivotField,System.Double,System.Double,System.Collections.ArrayList,System.Double)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
      <param name="startVal">Specifies the starting value for numeric grouping.</param>
      <param name="endVal">Specifies the ending value for numeric grouping. </param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by numeric grouping.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(System.Int32,System.DateTime,System.DateTime,System.Collections.ArrayList,System.Int32)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
      <param name="startVal">Specifies the starting value for date grouping. </param>
      <param name="endVal">Specifies the ending value for date grouping.</param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by in days grouping.The number of days must be positive integer of nonzero</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(Aspose.Cells.Pivot.PivotField,System.DateTime,System.DateTime,System.Collections.ArrayList,System.Int32)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
      <param name="startVal">Specifies the starting value for date grouping.</param>
      <param name="endVal">Specifies the ending value for date grouping.</param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by in days grouping.The number of days must be positive integer of nonzero</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetUngroup(System.Int32)">
      <summary>
            Sets ungroup by the PivotTable
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetUngroup(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Sets ungroup by the PivotTable
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetHorizontalBreaks">
      <summary>
            get pivot table row index list of horizontal pagebreaks
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInCompactForm">
      <summary>
            Layouts the PivotTable in compact form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInOutlineForm">
      <summary>
            Layouts the PivotTable in outline form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInTabularForm">
      <summary>
            Layouts the PivotTable in tabular form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetCellByDisplayName(System.String)">
      <summary>
            Gets the Cell object by the DisplayName of PivotField
            </summary>
      <param name="displayName">the DisplayName of PivotField</param>
      <returns>the Cell object</returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsExcel2003Compatible">
      <summary>
            Specifies whether the PivotTable is compatible for Excel2003 when refreshing PivotTable,
            if true, a string must be less than or equal to 255 characters, so if the string is greater than 255 characters,
            it will be truncated. if false, a string will not have the aforementioned restriction.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotTableStyleName">
      <summary>
            Gets and sets the pivottable style name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotTableStyleType">
      <summary>
            Gets and sets the built-in pivot table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnFields">
      <summary>
            Returns a PivotFields object that are currently shown as column fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowFields">
      <summary>
            Returns a PivotFields object that are currently shown as row fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFields">
      <summary>
            Returns a PivotFields object that are currently shown as page fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataFields">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataField">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.BaseFields">
      <summary>
            Returns a PivotFields object that includes all fields in the PivotTable report
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotFilters">
      <summary>
            Returns a PivotFilterCollection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnRange">
      <summary>
            Returns a CellArea object that represents the range
            that contains the column area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowRange">
      <summary>
            Returns a CellArea object that represents the range
            that contains the row area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataBodyRange">
      <summary>
            Returns a CellArea object that represents the range that contains the data area
            in the list between the header row and the insert row. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.TableRange1">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            but doesn't include page fields. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.TableRange2">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            includes page fields. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnGrand">
      <summary>
            Indicates whether the PivotTable report shows grand totals for columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsGridDropZones">
      <summary>
            Indicates whether the PivotTable report displays classic pivottable layout.
            (enables dragging fields in the grid)
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowGrand">
      <summary>
             Indicates whether the PivotTable report shows grand totals for rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayNullString">
      <summary>
            Indicates whether the PivotTable report displays a custom string
            in cells that contain null values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.NullString">
      <summary>
            Gets the string displayed in cells that contain null values
            when the DisplayNullString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayErrorString">
      <summary>
            Indicates whether the PivotTable report displays a custom string in cells that contain errors.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ErrorString">
      <summary>
            Gets the string displayed in cells that contain errors
            when the DisplayErrorString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsAutoFormat">
      <summary>
            Indicates whether the PivotTable report is automatically formatted.
            Checkbox "autoformat table "which in pivottable option for Excel 2003
            Checkbox "autofit column width on update"which in pivot table Options :Layout Format for Excel 2007
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AutoFormatType">
      <summary>
            Gets the PivotTable auto format type.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotTableAutoFormatType" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.HasBlankRows">
      <summary>
            Indicates whether to add blank rows.
            This property only applies for the PivotTable auto format types which needs to add blank rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.MergeLabels">
      <summary>
            Indicates whether the specified PivotTable report's outer-row item, column item, subtotal,
            and grand total labels use merged cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PreserveFormatting">
      <summary>
            Indicates whether formatting is preserved when the PivotTable is refreshed or recalculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowDrill">
      <summary>
            Gets whether expand/collapse buttons is shown.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableDrilldown">
      <summary>
            Gets whether drilldown is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableFieldDialog">
      <summary>
            Indicates whether the PivotTable Field dialog box is available
            when the user double-clicks the PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableFieldList">
      <summary>
            Gets whether enable the field list for the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableWizard">
      <summary>
            Indicates whether the PivotTable Wizard is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.SubtotalHiddenPageItems">
      <summary>
             Indicates whether hidden page field items in the PivotTable report
             are included in row and column subtotals, block totals, and grand totals.
             The default value is False.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.GrandTotalName">
      <summary>
            Returns the text string label that is displayed in the grand total column or row heading.
            The default value is the string "Grand Total".
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ManualUpdate">
      <summary>
            Indicates whether the PivotTable report is recalculated only at the user's request.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsMultipleFieldFilters">
      <summary>
            Specifies a boolean value that indicates whether the fields of a PivotTable can have multiple filters set on them.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.MissingItemsLimit">
      <summary>
            Specifies a boolean value that indicates whether the fields of a PivotTable can have multiple filters set on them.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableDataValueEditing">
      <summary>
            Specifies a boolean value that indicates whether the user is allowed to edit the cells in the data area of the pivottable.
            Enable cell editing in the values area
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowDataTips">
      <summary>
            Specifies a boolean value that indicates whether tooltips should be displayed for PivotTable data cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowMemberPropertyTips">
      <summary>
             Specifies a boolean value that indicates whether member property information should be omitted from PivotTable tooltips.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowValuesRow">
      <summary>
             Specifies a boolean value that indicates whether show values row.
             show the values row
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowEmptyCol">
      <summary>
            Specifies a boolean value that indicates whether to include empty columns in the table
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowEmptyRow">
      <summary>
            Specifies a boolean value that indicates whether to include empty rows in the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.FieldListSortAscending">
      <summary>
            Specifies a boolean value that indicates whether fields in the PivotTable are sorted in non-default order in the field list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PrintDrill">
      <summary>
            Specifies a boolean value that indicates whether drill indicators should be printed.
            print expand/collapse buttons when displayed on pivottable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AltTextTitle">
      <summary>
             Gets the title of the alttext
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AltTextDescription">
      <summary>
             Gets the description of the alt text
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Name">
      <summary>
             Gets the name of the PivotTable
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnHeaderCaption">
      <summary>
             Gets the Column Header Caption of the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Indent">
      <summary>
             Specifies the indentation increment for compact axis and can be used to set the Report Layout to Compact Form.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowHeaderCaption">
      <summary>
             Gets the Row Header Caption of the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowRowHeaderCaption">
      <summary>
             Indicates whether row header caption is shown in the PivotTable report
             Indicates whether Display field captions and filter drop downs
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.CustomListSort">
      <summary>
            Indicates whether consider built-in custom list when sort data
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotFormatConditions">
      <summary>
            Gets the Format Conditions of the pivot table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFieldOrder">
      <summary>
            Gets the order in which page fields are added to the PivotTable report's layout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFieldWrapCount">
      <summary>
            Gets the number of page fields in each column or row in the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Tag">
      <summary>
            Gets a string saved with the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.SaveData">
      <summary>
            Indicates whether data for the PivotTable report is saved with the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RefreshDataOnOpeningFile">
      <summary>
            Indicates whether Refresh Data when Opening File.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RefreshDataFlag">
      <summary>
            Indicates whether Refresh Data or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataSource">
      <summary>
            Gets and sets the data source of the pivot table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ItemPrintTitles">
      <summary>
            A bit that specifies whether pivot item captions on the row axis
            are repeated on each printed page for pivot fields in tabular form.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PrintTitles">
      <summary>
            Indicates whether the print titles for the worksheet are set based
            on the PivotTable report. The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayImmediateItems">
      <summary>
            Indicates whether items in the row and column areas are visible
            when the data area of the PivotTable is empty. The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsSelected">
      <summary>
             Indicates whether the PivotTable is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleRowHeader">
      <summary>
            Inidicates whether the row header in the pivot table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleColumnHeader">
      <summary>
            Indicates whether the column header in the pivot table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleRowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleLastColumn">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableAutoFormatType">
      <summary>
            Represents PivotTable auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.None">
      <summary>
            Represents None format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Classic">
      <summary>
            Represents Classic auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report1">
      <summary>
            Represents Report1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report2">
      <summary>
            Represents Report2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report3">
      <summary>
            Represents Report3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report4">
      <summary>
            Represents Report4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report5">
      <summary>
            Represents Report5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report6">
      <summary>
            Represents Report6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report7">
      <summary>
            Represents Report7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report8">
      <summary>
            Represents Report8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report9">
      <summary>
            Represents Report9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report10">
      <summary>
            Represents Report10 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table1">
      <summary>
            Represents Table1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table2">
      <summary>
            Represents Table2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table3">
      <summary>
            Represents Table3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table4">
      <summary>
            Represents Table4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table5">
      <summary>
            Represents Table5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table6">
      <summary>
            Represents Table6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table7">
      <summary>
            Represents Table7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table8">
      <summary>
            Represents Table8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table9">
      <summary>
            Represents Table9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table10">
      <summary>
            Represents Table10 format type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableCollection">
      <summary>
            Represents the collection of all the PivotTable objects on the specified worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data for the new PivotTable cache.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.String,System.String,System.Boolean)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data for the new PivotTable cache.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <param name="useSameSource">Indicates whether using same data source when another existing pivot table has used this data source.
            If the property is true, it will save memory.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <param name="useSameSource">Indicates whether using same data source when another existing pivot table has used this data source.
            If the property is true, it will save memory.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(Aspose.Cells.Pivot.PivotTable,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(Aspose.Cells.Pivot.PivotTable,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String[],System.Boolean,Aspose.Cells.Pivot.PivotPageFields,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored.
            </param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="destCellName">destCellName The name of the new PivotTable report.</param>
      <param name="tableName">the name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String[],System.Boolean,Aspose.Cells.Pivot.PivotPageFields,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored</param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Clear">
      <summary>
            Clear all pivot tables.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Remove(Aspose.Cells.Pivot.PivotTable)">
      <summary>
            Deletes the specified PivotTable
            </summary>
      <param name="pivotTable">PivotTable object</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.RemoveAt(System.Int32)">
      <summary>
            Deletes the PivotTable at the specified index
            </summary>
      <param name="index">the position index in PivotTable collection</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.Int32)">
      <summary>
            Gets the PivotTable report by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.String)">
      <summary>
            Gets the PivotTable report by pivottable's name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.Int32,System.Int32)">
      <summary>
            Gets the PivotTable report by pivottable's position.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableStyleType">
      <summary>
            Represents the pivot table style type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.SxRng">
      <summary>
            Represents Group Range in a PivotField.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.IsAutoStart">
      <summary>
            Specifies a boolean value that indicates whether the application will use the source data to set the beginning range value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.IsAutoEnd">
      <summary>
            Specifies a boolean value that indicates whether the application will use the source data to set the endding range value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.Start">
      <summary>
            Represents the start object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.End">
      <summary>
            Represents the end object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.By">
      <summary>
            Represents the interval object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.GroupByTypes">
      <summary>
            Represents the group type for the group range.
            rangeofvalue Seconds Minutes Hours Days Months Quarters Years
            </summary>
    </member>
    <member name="T:Aspose.Cells.ColorScale">
      <summary>
            Describe the ColorScale conditional formatting rule. 
            This conditional formatting rule creates a gradated color scale on the cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.Is3ColorScale">
      <summary>
            Indicates whether conditional formatting is 3 color scale.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MinCfvo">
      <summary>
            Get or set this ColorScale's min value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Max to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MidCfvo">
      <summary>
            Get or set this ColorScale's mid value object.
            Cannot set CFValueObject with type FormatConditionValueType.Max or FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MaxCfvo">
      <summary>
            Get or set this ColorScale's max value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MinColor">
      <summary>
            Get or set the min value object's corresponding color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MidColor">
      <summary>
            Get or set the mid value object's corresponding color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MaxColor">
      <summary>
            Get or set the max value object's corresponding color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingValue">
      <summary>
            Describes the values of the interpolation points in a gradient scale, dataBar or iconSet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.Value">
      <summary>
            Get or set the value of this conditional formatting value object.
            It should be used in conjunction with Type. 
            </summary>
      <remarks>
            If the value is string  and start with "=", it will be processed as a formula,
            otherwise we will process it as a simple value. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.Type">
      <summary>
            Get or set the type of this conditional formatting value object.
            Setting the type to FormatConditionValueType.Min or FormatConditionValueType.Max 
            will auto set "Value" to null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.IsGTE">
      <summary>
            Get or set the Greater Than Or Equal flag. 
            Use only for icon sets, determines whether this threshold value uses 
            the greater than or equal to operator. 
            'false' indicates 'greater than' is used instead of 'greater than or equal to'.
            Default value is true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBar">
      <summary>
            Describe the DataBar conditional formatting rule. 
            This conditional formatting rule displays a gradated
            data bar in the range of cells.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            
            FormatConditions fcs = sheet.ConditionalFormattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 2;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            //Adds condition.
            int idx = fcs.AddCondtion(FormatConditionType.DataBar);
            
            fcs.AddArea(ca);
            
            FormatCondition cond = fcs[idx];
            
            //Get Databar
            DataBar dataBar = cond.DataBar;
            
            dataBar.Color = Color.Orange;
            
            //Set Databar properties
            dataBar.MinCfvo.Type = FormatConditionValueType.Percentile;
            
            dataBar.MinCfvo.Value = 30;
            
            dataBar.ShowValue = false;
            
            dataBar.BarBorder.Type = DataBarBorderType.DataBarBorderSolid;
            
            dataBar.BarBorder.Color = Color.Plum;
            
             dataBar.BarFillType = DataBarFillType.DataBarFillSolid;
              
             dataBar.AxisColor = Color.Red;
             
             dataBar.AxisPosition = DataBarAxisPosition.DataBarAxisMidpoint;
             
             dataBar.NegativeBarFormat.ColorType = DataBarNegativeColorType.DataBarColor;
             
             dataBar.NegativeBarFormat.Color = Color.White;
             
             dataBar.NegativeBarFormat.BorderColorType = DataBarNegativeColorType.DataBarColor;
             
             dataBar.NegativeBarFormat.BorderColor = Color.Yellow;
             
            //Put Cell Values
            Aspose.Cells.Cell cell1 = sheet.Cells["A1"];
            
            cell1.PutValue(10);
            
            Aspose.Cells.Cell cell2 = sheet.Cells["A2"];
            
            cell2.PutValue(120);
            
            Aspose.Cells.Cell cell3 = sheet.Cells["A3"];
            
            cell3.PutValue(260);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xlsx");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            
            Dim fcs As FormatConditions = sheet.ConditionalFormattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 2
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            'Adds condition.
            Dim idx As Integer = fcs.AddCondtion(FormatConditionType.DataBar)
            
            fcs.AddArea(ca)
            
            Dim cond As FormatCondition = fcs(idx)
            
            'Get Databar
            Dim dataBar As DataBar = cond.DataBar
            
            dataBar.Color = Color.Orange
            
            'Set Databar properties
            dataBar.MinCfvo.Type = FormatConditionValueType.Percentile
            
            dataBar.MinCfvo.Value = 30
            
            dataBar.ShowValue = False
            
            dataBar.BarBorder.Type = DataBarBorderType.DataBarBorderSolid
            
            dataBar.BarBorder.Color = Color.Plum
            
             dataBar.BarFillType = DataBarFillType.DataBarFillSolid
              
             dataBar.AxisColor = Color.Red
             
             dataBar.AxisPosition = DataBarAxisPosition.DataBarAxisMidpoint
             
             dataBar.NegativeBarFormat.ColorType = DataBarNegativeColorType.DataBarColor
             
             dataBar.NegativeBarFormat.Color = Color.White
             
             dataBar.NegativeBarFormat.BorderColorType = DataBarNegativeColorType.DataBarColor
             
             dataBar.NegativeBarFormat.BorderColor = Color.Yellow
            
            'Put Cell Values
            Dim cell1 As Aspose.Cells.Cell = sheet.Cells("A1")
            
            cell1.PutValue(10)
            
            Dim cell2 As Aspose.Cells.Cell = sheet.Cells("A2")
            
            cell2.PutValue(120)
            
            Dim cell3 As Aspose.Cells.Cell = sheet.Cells("A3")
            
            cell3.PutValue(260)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xlsx")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.DataBar.ToImage(Aspose.Cells.Cell,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Render data bar in cell to image byte array.
            </summary>
      <param name="cell">Indicate the data bar in which cell to be rendered</param>
      <param name="imgOpts">ImageOrPrintOptions contains some property of output image</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.DataBar.AxisColor">
      <summary>
            Gets the color of the axis for cells with conditional formatting as data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.AxisPosition">
      <summary>
            Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.BarFillType">
      <summary>
            Gets or sets how a data bar is filled with color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.Direction">
      <summary>
            Gets or sets the direction the databar is displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.BarBorder">
      <summary>
            Gets an object that specifies the border of a data bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.NegativeBarFormat">
      <summary>
            Gets the NegativeBarFormat object associated with a data bar conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MinCfvo">
      <summary>
            Get or set this DataBar's min value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Max to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MaxCfvo">
      <summary>
            Get or set this DataBar's max value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.Color">
      <summary>
            Get or set this DataBar's Color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MinLength">
      <summary>
            Represents the min length of data bar . 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MaxLength">
      <summary>
            Represents the max length of data bar . 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.ShowValue">
      <summary>
            Get or set the flag indicating whether to show the values of the cells on which this data bar is applied.
            Default value is true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IconSet">
      <summary>
            Describe the IconSet conditional formatting rule. 
            This conditional formatting rule applies icons to cells
            according to their values.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            
            FormatConditions fcs = sheet.ConditionalFormattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 2;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            //Adds condition.
            int idx = fcs.AddCondtion(FormatConditionType.IconSet);
            
            fcs.AddArea(ca);
            
            FormatCondition cond = fcs[idx];
            
            //Get Icon Set
            IconSet iconSet = cond.IconSet;
            
            //Set Icon Type
            iconSet.Type = IconSetType.Arrows3;
            
            //Put Cell Values
            Aspose.Cells.Cell cell1 = sheet.Cells["A1"];
            
            cell1.PutValue(10);
            
            Aspose.Cells.Cell cell2 = sheet.Cells["A2"];
            
            cell2.PutValue(120);
            
            Aspose.Cells.Cell cell3 = sheet.Cells["A3"];
            
            cell3.PutValue(260);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xlsx");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            
            Dim fcs As FormatConditions = sheet.ConditionalFormattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 2
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            'Adds condition.
            Dim idx As Integer = fcs.AddCondtion(FormatConditionType.IconSet)
            
            fcs.AddArea(ca)
            
            Dim cond As FormatCondition = fcs(idx)
            
            'Get Icon Set
            Dim iconSet As IconSet = cond.IconSet
            
            'Set Icon Type
            iconSet.Type = IconSetType.Arrows3
            
            'Put Cell Values
            Dim cell1 As Aspose.Cells.Cell = sheet.Cells("A1")
            
            cell1.PutValue(10)
            
            Dim cell2 As Aspose.Cells.Cell = sheet.Cells("A2")
            
            cell2.PutValue(120)
            
            Dim cell3 As Aspose.Cells.Cell = sheet.Cells("A3")
            
            cell3.PutValue(260)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xlsx") 
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.IconSet.CfIcons">
      <summary>
            Get the<see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> from the collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Cfvos">
      <summary>
            Get the CFValueObjects instance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Type">
      <summary>
            Get or Set the icon set type to display.
            Setting the type will auto check if the current Cfvos's count is
            accord with the new type. If not accord, old Cfvos will be cleaned and 
            default Cfvos will be added.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.IsCustom">
      <summary>
            Indicates whether the icon set is custom.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.ShowValue">
      <summary>
            Get or set the flag indicating whether to show the values of the cells on which this icon set is applied.
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Reverse">
      <summary>
            Get or set the flag indicating whether to reverses the default order of the icons in this icon set.
            Default value is false.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ProtectedRange">
      <summary>
            A specified range to be allowed to edit when the sheet protection is ON. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.ProtectedRange.GetAreas">
      <summary>
            Gets all referred areas.
            </summary>
      <returns>Returns all referred areas.</returns>
    </member>
    <member name="M:Aspose.Cells.ProtectedRange.AddArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a referred area to this 
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column.</param>
      <param name="endRow">The end row.</param>
      <param name="endColumn">The end column.</param>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.Name">
      <summary>
            Gets the Range title. This is used as a descriptor, not as a named range definition.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.CellArea">
      <summary>
            Gets the <see cref="P:Aspose.Cells.ProtectedRange.CellArea" /> object represents the cell area to be protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.Password">
      <summary>
            Represents the password to protect the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.SecurityDescriptor">
      <summary>
            The security descriptor defines user accounts who may edit this range without providing a password to access the range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ProtectedRangeCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.ProtectedRange" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ProtectedRangeCollection.Add(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.ProtectedRange" /> item to the collection.
            </summary>
      <param name="name">Range title. This is used as a descriptor, not as a named range definition.</param>
      <param name="startRow">Start row index of the range.</param>
      <param name="startColumn">Start column index of the range.</param>
      <param name="endRow">End row index of the range.</param>
      <param name="endColumn">End column index of the range.</param>
      <returns>object index.</returns>
    </member>
    <member name="P:Aspose.Cells.ProtectedRangeCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ProtectedRange" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ColorFilter">
      <summary>
            Represents the color filter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ColorFilter.GetColor(Aspose.Cells.WorksheetCollection)">
      <summary>
      </summary>
      <param name="sheets">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ColorFilter.FilterByFillColor">
      <summary>
            Flag indicating whether or not to filter by the cell's fill color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CustomFilter">
      <summary>
            Represents the custom filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilter.FilterOperatorType">
      <summary>
            Gets and sets the filter operator type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilter.Criteria">
      <summary>
            Gets and sets the criteria.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CustomFilterCollection">
      <summary>
            Represents the custom filters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilterCollection.And">
      <summary>
            Indicates whether the two criterias have an "and" relationship. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilterCollection.Item(System.Int32)">
      <summary>
            Gets the custom filter in the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.DateTimeGroupItem">
      <summary>
            Represents the datetime's group setting.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DateTimeGroupItem.#ctor(Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="type">
      </param>
      <param name="year">
      </param>
      <param name="month">
      </param>
      <param name="day">
      </param>
      <param name="hour">
      </param>
      <param name="minute">
      </param>
      <param name="second">
      </param>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.MinValue">
      <summary>
            Gets the min value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.DateTimeGroupingType">
      <summary>
            Gets and sets the group type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Year">
      <summary>
            Gets and sets the year of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Month">
      <summary>
            Gets and sets the month of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Day">
      <summary>
            Gets and sets the day of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Hour">
      <summary>
            Gets and sets the hour of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Minute">
      <summary>
            Gets and sets the minute of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Second">
      <summary>
            Gets and sets the second of the grouped date time.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DateTimeGroupingType">
      <summary>
            Specifies how to group dateTime values. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Day">
      <summary>
            Group by day. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Hour">
      <summary>
            Group by hour. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Minute">
      <summary>
            Group by Minute.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Month">
      <summary>
            Group by Month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Second">
      <summary>
            Group by Second.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Year">
      <summary>
            Group by Year.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DynamicFilter">
      <summary>
            Represents the dynamic filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.DynamicFilterType">
      <summary>
            Gets and sets the dynamic filter type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.Value">
      <summary>
            Gets and sets the dynamic filter value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.MaxValue">
      <summary>
            Gets and sets the dynamic filter max value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DynamicFilterType">
      <summary>
            Dynamic filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.AboveAverage">
      <summary>
            Shows values that are above average. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.BelowAverage">
      <summary>
            Shows values that are below average. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastMonth">
      <summary>
            Shows last month's dates.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastQuarter">
      <summary>
            Shows last quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastWeek">
      <summary>
            Shows last week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastYear">
      <summary>
            Shows last year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.January">
      <summary>
            Shows the dates that are in January, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.October">
      <summary>
            Shows the dates that are in October, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.November">
      <summary>
            Shows the dates that are in November, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.December">
      <summary>
            Shows the dates that are in December, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Februray">
      <summary>
            Shows the dates that are in Februray, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.March">
      <summary>
            Shows the dates that are in March, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.April">
      <summary>
            Shows the dates that are in April, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.May">
      <summary>
            Shows the dates that are in May, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.June">
      <summary>
            Shows the dates that are in June, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.July">
      <summary>
            Shows the dates that are in July, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.August">
      <summary>
            Shows the dates that are in August, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.September">
      <summary>
            Shows the dates that are in September, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextMonth">
      <summary>
            Shows next month's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextQuarter">
      <summary>
            Shows next quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextWeek">
      <summary>
            Shows next week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextYear">
      <summary>
            Shows next year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter1">
      <summary>
            Shows the dates that are in the 1st quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter2">
      <summary>
            Shows the dates that are in the 2nd quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter3">
      <summary>
            Shows the dates that are in the 3rd quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter4">
      <summary>
            Shows the dates that are in the 4th quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisMonth">
      <summary>
            Shows this month's dates.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisQuarter">
      <summary>
            Shows this quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisWeek">
      <summary>
            Shows this week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisYear">
      <summary>
            Shows this year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Today">
      <summary>
            Shows today's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Tomorrow">
      <summary>
            Shows tomorrow's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.YearToDate">
      <summary>
            Shows the dates between the beginning of the year and today, inclusive. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Yesterday">
      <summary>
            Shows yesterday's dates. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.MultipleFilterCollection">
      <summary>
            Represents the multiple filte collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MultipleFilterCollection.MatchBlank">
      <summary>
            Indicates whether to filter by blank. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.MultipleFilterCollection.Item(System.Int32)">
      <summary>
            DateTimeGroupItem or a simple object.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FilterType">
      <summary>
            The filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.ColorFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.CustomFilters">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.DynamicFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.MultipleFilters">
      <summary>
            When multiple values are chosen to filter by, or when a group of date values are chosen to filter by, 
            this element groups those criteria together. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.IconFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.Top10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.None">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.IconFilter">
      <summary>
            Reprents icon filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconFilter.IconSetType">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.IconFilter.IconId">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Top10Filter">
      <summary>
            Represents the top 10 filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.IsTop">
      <summary>
            Indicates whether it's top filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.IsPercent">
      <summary>
            Indicates whether the items is percent.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.Items">
      <summary>
            Gets and sets the items of the filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.Criteria">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.AutoFitterOptions">
      <summary>
            Represents all auto fitter options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFitterOptions.AutoFitMergedCells">
      <summary>
            Indicates whether auto fit row height when the cells is merged in a row.
            The default value is false.
            </summary>
      <remarks>
            If the cells in merged in a row and auto fit the rows in MS Excel,
            MS Excel do not expand the row height.
            If this option is true, Aspose.Cells will expand the row height to fit the cells' data.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.AutoFitterOptions.OnlyAuto">
      <summary>
            Indicates whether only fit the rows which height are not customed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFitterOptions.IgnoreHidden">
      <summary>
            Ingores the hidden rows/columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFitterOptions.MaxRowHeight">
      <summary>
            Gets and sets the max row height(in unit of Point) when autofitting rows.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfCompliance">
      <summary>
            Allowing user to set PDF convertion's Compatibility
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompliance.None">
      <summary>
            Normal pdf format
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompliance.PdfA1b">
      <summary>
            Pdf format compatible with PDFA-1b
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.WorkbookRender">
      <summary>
            Represents a Workbook render. 
            The constructor of this class , must be used after modification of pagesetup, cell style.    
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.#ctor(Aspose.Cells.Workbook,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            The construct of WorkbookRender
            </summary>
      <param name="workbook">Indicate which workbook to be rendered.</param>
      <param name="options">ImageOrPrintOptions contains some property of output kiimage</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.GetPageSize(System.Int32)">
      <summary>
            Get page size of output image. The size unit is in pixel.
            </summary>
      <param name="pageIndex">The page index is based on zero.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToImage(System.IO.Stream)">
      <summary>
            Render whole workbook as Tiff Image to stream.
            </summary>
      <param name="stream">the stream of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToImage(System.String)">
      <summary>
            Render whole workbook as Tiff Image to a file.
            </summary>
      <param name="filename">the filename of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToPrinter(System.String)">
      <summary>
            Render workbook to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToPrinter(System.String,System.Int32,System.Int32)">
      <summary>
            Render workbook to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
      <param name="PrintPageIndex">the 0-based index of the first page to print, it must be in Range [0, WorkbookRender.PageCount-1]</param>
      <param name="PrintPageCount">the number of pages to print, it must be greater than zero</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToPrinter(System.String,System.String)">
      <summary>
            Render workbook to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
      <param name="DocumentName">set the print job name </param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.ToPrinter(System.Drawing.Printing.PrinterSettings)">
      <summary>
            Render workbook to Printer
            </summary>
      <param name="PrinterSettings"> the settings of printer, e.g. PrinterName, Duplex</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.WorkbookRender.CustomPrint(System.Boolean,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
            Client can control page setting of printer when print each page using this function.
            </summary>
      <param name="nextPageAfterPrint">If true , printer will go to next page after print current page</param>
      <param name="printPageEventArgs">System.Drawing.Printing.PrintPageEventArgs</param>
      <returns>Indirects next page index,  based on zero</returns>
    </member>
    <member name="P:Aspose.Cells.Rendering.WorkbookRender.PageCount">
      <summary>
            Indicate the total page count of current worksheet
            </summary>
    </member>
    <member name="T:Aspose.Cells.DirectoryType">
      <summary>
            Represents the directory  type of the file name.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.Volume">
      <summary>
            Represents an MS-DOS drive letter. It is followed by the drive letter.
            Or UNC file names, such as \\server\share\myfile.xls
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.SameVolume">
      <summary>
            Indicates that the source workbook is on the same drive as the dependent workbook (the drive letter is omitted)
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.DownDirectory">
      <summary>
            Indicates that the source workbook is in a subdirectory of the current directory.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.UpDirectory">
      <summary>
            Indicates that the source workbook is in the parent directory of the current directory.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LightRigType">
      <summary>
            Represents a preset light right that can be applied to a shape
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Balanced">
      <summary>
            Balanced
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.BrightRoom">
      <summary>
            Bright room
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Chilly">
      <summary>
            Chilly
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Contrasting">
      <summary>
            Contrasting
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Flat">
      <summary>
            Flat
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Flood">
      <summary>
            Flood
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Freezing">
      <summary>
            Freezing
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Glow">
      <summary>
            Glow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Harsh">
      <summary>
            Harsh
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyFlat1">
      <summary>
            LegacyFlat1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyFlat2">
      <summary>
            LegacyFlat2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyFlat3">
      <summary>
            LegacyFlat3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyFlat4">
      <summary>
            LegacyFlat4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyHarsh1">
      <summary>
            LegacyHarsh1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyHarsh2">
      <summary>
            LegacyHarsh2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyHarsh3">
      <summary>
            LegacyHarsh3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyHarsh4">
      <summary>
            LegacyHarsh4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyNormal1">
      <summary>
            LegacyNormal1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyNormal2">
      <summary>
            LegacyNormal2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyNormal3">
      <summary>
            LegacyNormal3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.LegacyNormal4">
      <summary>
            LegacyNormal4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Morning">
      <summary>
            Morning
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Soft">
      <summary>
            Soft
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Sunrise">
      <summary>
            Sunrise
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.Sunset">
      <summary>
            Sunset
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.ThreePoint">
      <summary>
            Three point
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LightRigType.TwoPoint">
      <summary>
            Two point
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExportTableOptions">
      <summary>
            Represents all export table options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.DataTable">
      <summary>
            Gets and sets the DataTable which columns's data type is assigned. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.ExportColumnName">
      <summary>
            Indicates whether the data in the first row are exported to the column name of the DataTable.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.SkipErrorValue">
      <summary>
            Indicates whether skip invalid value for the column.
             For example,if the column type is decimal ,the value is greater than decimal.MaxValue 
             and this property is true,we will not throw exception again.
             The default value is false.
             </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleCells">
      <summary>
            Only exports visible cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleRows">
      <summary>
            Only exports visible rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleColumns">
      <summary>
            Only exports visible columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.ExportAsString">
      <summary>
            Exported the string value of the cells to the DataTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.FormatStrategy">
      <summary>
            Gets and sets the format strategy when exporting the value as string value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.CheckMixedValueType">
      <summary>
            False, Aspose.Cells will set the DataColumn's type by the value type of the first row for performance.
            True, Aspose.Cells will check whether the value type in the column are mixed before set the DataColumn's type 
            And the value type are mixed, the DataColumn's type will be string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.IsVertical">
      <summary>
            True if a row in Workbook file represents a row in DataTable. False if a column in Workbook file represents a row in DataTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.Indexes">
      <summary>
            The indexes of columns/rows which shoudl be exported out.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HtmlSaveOptions">
      <summary>
            Represents the options for saving html file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.HtmlSaveOptions.#ctor">
      <summary>
            Creates options for saving html file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.HtmlSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates options for saving htm file.
            </summary>
      <param name="format">The saving file format.</param>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.PageTitle">
      <summary>
            The title of the html page.
            Only for saving to html stream.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.AttachedFilesDirectory">
      <summary>
            The directory that the attached files will be saved to.
            Only for saving to html stream.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.AttachedFilesUrlPrefix">
      <summary>
            Specify the Url prefix of attached files such as image in the html file.
            Only for saving to html stream.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.DefaultFontName">
      <summary>
            Specify the default font name for exporting html, the default font will be used  when the font of style is not existing,
            If this property is null, Aspose.Cells will use universal font which have the same family with the original font,
            the default value is null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.IsExpImageToTempDir">
      <summary>
            Indicates if export image files to temp directory.
            Only for saving to html stream.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportImagesAsBase64">
      <summary>
            Specifies whether images are saved in Base64 format to HTML, MHTML or EPUB.
            </summary>
      <remarks>
            When this property is set to true image data is exported directly on the
                img elements and separate files are not created.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportActiveWorksheetOnly">
      <summary>
            Indicates if exporting the whole workbook to html file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ParseHtmlTagInCell">
      <summary>
            Parse html tag in cell,like <div></div>,as cell value,or as html tag,default is true
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.HtmlCrossStringType">
      <summary>
            Indicates if a cross-cell string will be displayed in the same way as MS Excel when saving an Excel file in html format.
            By default the value is Default, so, for cross-cell strings, there is little difference between the html files created by Aspose.Cells and MS Excel.
            But the performance for creating large html files,setting the value to Cross would be several times faster than setting it to Default or Fit2Cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.HiddenColDisplayType">
      <summary>
            Hidden column(the width of this column is 0) in excel,before save this into html format,
            if HtmlHiddenColDisplayType is "Remove",the hidden column would ont been output,
            if the value is "Hidden", the column would been output,but was hidden,the default value is "Hidden"
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.HiddenRowDisplayType">
      <summary>
            Hidden row(the height of this row is 0) in excel,before save this into html format,
            if HtmlHiddenRowDisplayType is "Remove",the hidden row would ont been output,
            if the value is "Hidden", the row would been output,but was hidden,the default value is "Hidden"
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.Encoding">
      <summary>
            If not set,use Encoding.UTF8 as default enconding type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportObjectListener">
      <summary>
            Gets or sets the ExportObjectListener for exporting objects.
            </summary>
      <remarks>
            NOTE: This property is now obsolete. Instead, 
            please use HtmlSaveOptions.IStreamProvider property.
            This property will be removed 12 months later since August 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.StreamProvider">
      <summary>
            Gets or sets the IStreamProvider for exporting objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ImageOptions">
      <summary>
            Get the ImageOrPrintOptions object before exporting
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportHiddenWorksheet">
      <summary>
            Indicating if exporting the hidden worksheet content.The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.PresentationPreference">
      <summary>
            Indicating if html or mht file is presentation preference.The default value is false.if you want to get
            more beautiful presentation,please set the value to true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.CellCssPrefix">
      <summary>
            Gets and sets the prefix of the css name,the default value is "".
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.IsFullPathLink">
      <summary>
            Indicating whether using full path link in sheet00x.htm,filelist.xml and tabstrip.htm.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportGridLines">
      <summary>
            Indicating whether export the gridlines.The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportBogusRowData">
      <summary>
            Indicating whether exporting bogus bottom row data. The default value is true.If you want to import the html or mht file
            to excel, please keep the default value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportFrameScriptsAndProperties">
      <summary>
            Indicating whether exporting frame scripts and document properties. The default value is true.If you want to import the html or mht file
            to excel, please keep the default value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.ExportDataOptions">
      <summary>
            Indicating the rule of exporting html file data.The default value is All.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HtmlSaveOptions.LinkTargetType">
      <summary>
            Indicating the type of  target attribute in &lt;a&gt; link,The default value is HtmlLinkTargetType.Parent.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTag">
      <summary>
            Represents a smart tag.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTag.SetLink(System.String,System.String)">
      <summary>
            Change the name and  the namespace URI of the smart tag.
            </summary>
      <param name="uri">The namespace URI of the smart tag.</param>
      <param name="name">The name of the smart tag.</param>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Deleted">
      <summary>
            Indicates whether the smart tag is deleted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Properties">
      <summary>
            Gets and set the properties of the smar tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Uri">
      <summary>
            Gets the namespace URI of the smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Name">
      <summary>
            Gets the name of the smart tag. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagCollection">
      <summary>
            Represents all smart tags in the cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagCollection.Add(System.String,System.String)">
      <summary>
            Adds a smart tag.
            </summary>
      <param name="uri">Specifies the namespace URI of the smart tag</param>
      <param name="name">Specifies the name of the smart tag. </param>
      <returns>The index of smart tag in the list.</returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Row">
      <summary>
            Gets the row of the cell smart tags.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Column">
      <summary>
            Gets the column of the cell smart tags.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTag" /> object at the specific index
            </summary>
      <param name="index">The index.</param>
      <returns>returns a <see cref="T:Aspose.Cells.Markup.SmartTag" /> object. </returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagOptions">
      <summary>
            Represents the options of the smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagOptions.EmbedSmartTags">
      <summary>
            Indicates whether saving smart tags with the workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagOptions.ShowType">
      <summary>
            Repesents the show type of smart tag.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagSetting">
      <summary>
            Represents all <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagSetting.Add(System.Int32,System.Int32)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object to a cell.
            </summary>
      <param name="row">The row of the cell.</param>
      <param name="column">The column of the cell.</param>
      <returns>Returns index of a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagSetting.Add(System.String)">
      <summary>
            Add a cell smart tags.
            </summary>
      <param name="cellName">The name of the cell.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object by the index.
            </summary>
      <param name="index">The index of the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the list.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell</param>
      <returns>Returns the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            Returns null if there is no any smart tags on the cell.
            </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            </summary>
      <param name="cellName">The name of the cell.</param>
      <returns>Returns the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            Returns null if there is no any smart tags on the cell.
            </returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagProperty">
      <summary>
            Represents the property of the cell smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagProperty.Name">
      <summary>
            Gets and sets the name of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagProperty.Value">
      <summary>
            Gets and sets the value of the property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagPropertyCollection">
      <summary>
            Represents all properties of cell smart tag.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagPropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds a property of cell's smart tag.
            </summary>
      <param name="name">The name of the propery</param>
      <param name="value">The value of the property.</param>
      <returns>return <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /></returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagPropertyCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.
            </summary>
      <param name="index">The index</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagPropertyCollection.Item(System.String)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object by the name of the property.
            </summary>
      <param name="name">The name of the proerty.</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.</returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagShowType">
      <summary>
            Represents the show type of the smart tag.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.All">
      <summary>
            Indicates that smart tags are enabled and shown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.NoSmartTagIndicator">
      <summary>
            Indicates that the smart tags are enabled but the indicator not be shown. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.None">
      <summary>
            Indicates that smart tags are disabled and not displayed. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.OdsSaveOptions">
      <summary>
            Represents the options of saving ods file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OdsSaveOptions.#ctor">
      <summary>
            Creates the options of saving ods file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OdsSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options of saving ods file.
            </summary>
      <param name="saveFormat">
      </param>
    </member>
    <member name="P:Aspose.Cells.OdsSaveOptions.IsStrictSchema11">
      <summary>
            Indicates whether the ods file should be saved as ODF format version 1.1. Default is false.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PasteOptions">
      <summary>
            Represents the paste special options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.PasteType">
      <summary>
            The paste special type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.SkipBlanks">
      <summary>
            Indicates whether skips blank cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.OnlyVisibleCells">
      <summary>
            True means only copying visible cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.Transpose">
      <summary>
             True to transpose rows and columns when the range is pasted. The default value is False.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PdfSaveOptions">
      <summary>
            Represents the options for saving pdf file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PdfSaveOptions.#ctor">
      <summary>
            Creates the options for saving pdf file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PdfSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving pdf file.
            </summary>
      <param name="saveFormat">The save format.It must be pdf.</param>
    </member>
    <member name="M:Aspose.Cells.PdfSaveOptions.SetImageResample(System.Int32,System.Int32)">
      <summary>
            Set desired PPI(pixels per inch) of resample images and jpeg quality  
            All images will be converted to JPEG with the specified quality setting, 
            and images that are greater than the specified PPI (pixels per inch) will be resampled.
            </summary>
      <param name="desiredPPI">Desired pixels per inch. 220 high quality. 150 screen quality. 96 email quality.</param>
      <param name="jpegQuality">0 - 100% JPEG quality.</param>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.PrintingPageType">
      <summary>
            Indicates which pages will not be printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.EmbedStandardWindowsFonts">
      <summary>
            True to embed true type fonts. 
            Affects only ASCII characters 32-127.
            Fonts for character codes greater than 127 are always embedded.
            PDFA1B must embeded font.
            Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.Bookmark">
      <summary>
            Gets and sets the <see cref="T:Aspose.Cells.Rendering.PdfBookmarkEntry">PdfBookmarkEntry</see> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.Compliance">
      <summary>
            Workbook converts to pdf will according to PdfCompliance in this property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.DefaultFont">
      <summary>
            When characters in the Excel are unicode and not be set with correct font in cell style,
            They may appear as block in pdf,image.
            Set the DefaultFont such as MingLiu or MS Gothic to show these characters.
            If this property is not set, Aspose.Cells will use system default font to show these unicode characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.SecurityOptions">
      <summary>
            Set this options, when security is need in xls2pdf result.      
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.OnePagePerSheet">
      <summary>
            If OnePagePerSheet is true , all content of one sheet will output to only one page in result. 
            The paper size of pagesetup will be invalid, and the other settings of pagesetup 
            will still take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.AllColumnsInOnePagePerSheet">
      <summary>
            If AllColumnsInOnePagePerSheet is true , all column content of one sheet will output to only one page in result. 
            The width of paper size of pagesetup will be ignored, and the other settings of pagesetup 
            will still take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.ImageType">
      <summary>
            Represents the image type when converting the chart and shape .
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.CalculateFormula">
      <summary>
            Indicates whether calculate formulas before saving pdf file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.PdfCompression">
      <summary>
            Indcate the compression algorithm 
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.CheckFontCompatibility">
      <summary>
            Indicates whether check font compatibility for every character in text.
            </summary>
      <remarks>
            The default value is true.
            Disable this property may give better performance.
            But when the default or specified font of text/character cannot be used to render it,
            unreadable characters(such as block) maybe occur in the generated pdf.
            For such situation user should keep this property as true so that
            alternative font can be searched and used to render the text instead;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.PageIndex">
      <summary>
             Gets or sets the 0-based index of the first page to save.
            </summary>
      <remarks>
            Default is 0.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.PageCount">
      <summary>
             Gets or sets the number of pages to save.
            </summary>
      <remarks>
             Default is System.Int32.MaxValue which means all pages will be rendered..
             </remarks>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.CreatedTime">
      <summary>
             Gets and sets the time of generating the pdf document.
            </summary>
      <remarks>
             if it is not be set, it will be the time of generating the pdf.
             </remarks>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.OptimizationType">
      <summary>
            Gets and sets pdf optimization type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PdfSaveOptions.IsFontSubstitutionCharGranularity">
      <summary>
            Indicates whether only substitute the font of character when the cell font is not compatibility for it.
            </summary>
      <remarks>
            Default is false. We will try default font of Workbook and PdfSaveOption/system for cell font first.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.Bevel">
      <summary>
            Represents a bevel of a shape
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Bevel.Width">
      <summary>
            Gets and sets the width of the bevel, or how far into the shape it is applied.
            In unit of Points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Bevel.Height">
      <summary>
            Gets and sets the height of the bevel, or how far above the shape it is applied.
            In unit of Points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Bevel.Type">
      <summary>
            Gets and sets the preset bevel type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.BevelPresetType">
      <summary>
            Represents a preset for a type of bevel which can be applied to a shape in 3D.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.None">
      <summary>
            No bevel
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Angle">
      <summary>
            Angle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.ArtDeco">
      <summary>
            Art deco
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Circle">
      <summary>
            Circle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Convex">
      <summary>
            Convex
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.CoolSlant">
      <summary>
            Cool slant
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Cross">
      <summary>
            Cross
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Divot">
      <summary>
            Divot
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.HardEdge">
      <summary>
            Hard edge
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.RelaxedInset">
      <summary>
            Relaxed inset
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Riblet">
      <summary>
            Riblet
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.Slope">
      <summary>
            Slope
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.BevelPresetType.SoftRound">
      <summary>
            Soft round
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Format3D">
      <summary>
            This class specifies the 3D shape properties for a chart element or shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Format3D.HasTopBevelData">
      <summary>
            Indicates if the shape has top bevel data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Format3D.TopBevel">
      <summary>
            Gets the <seealso cref="T:Aspose.Cells.Drawing.Bevel" /> object that holds the properties associated with defining a bevel on the top or front face of a shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Format3D.SurfaceMaterialType">
      <summary>
            Gets and sets the material type which is combined with the lighting properties to give the final look and feel of a shape.
            Default value is PresetMaterialType.WarmMatte.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Format3D.SurfaceLightingType">
      <summary>
            Gets and sets the lighting type which is to be applied to the scene of the shape.
            Default value is LightRigType.ThreePoint.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Format3D.LightingAngle">
      <summary>
            Gets and sets the lighting angle. Range from 0 to 359.9 degrees.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GlowEffect">
      <summary>
            This class specifies a glow effect, in which a color blurred outline 
            is added outside the edges of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GlowEffect.Radius">
      <summary>
            Gets and sets the radius of the glow, in unit of points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PresetShadowType">
      <summary>
            Represents preset shadow type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.NoShadow">
      <summary>
            No shadow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.Custom">
      <summary>
            Custom shadow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetDiagonalBottomRight">
      <summary>
            Outer shadow offset diagonal bottom right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetBottom">
      <summary>
            Outer shadow offset bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetDiagonalBottomLeft">
      <summary>
            Outer shadow offset diagonal bottom left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetRight">
      <summary>
            Outer shadow offset right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetCenter">
      <summary>
            Outer shadow offset center.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetLeft">
      <summary>
            Outer shadow offset left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetDiagonalTopRight">
      <summary>
            Outer shadow offset diagonal top right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetTop">
      <summary>
            Outer shadow offset top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.OffsetDiagonalTopLeft">
      <summary>
            Outer shadow offset diagonal top left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideDiagonalTopLeft">
      <summary>
            Inner shadow inside diagonal top Left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideTop">
      <summary>
            Inner shadow inside top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideDiagonalTopRight">
      <summary>
            Inner shadow inside diagonal top right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideLeft">
      <summary>
            Inner shadow inside left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideCenter">
      <summary>
            Inner shadow inside center.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideRight">
      <summary>
            Inner shadow inside right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideDiagonalBottomLeft">
      <summary>
            Inner shadow inside diagonal bottom left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideBottom">
      <summary>
            Inner shadow inside bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.InsideDiagonalBottomRight">
      <summary>
            Inner shadow inside diagonal bottom right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.PerspectiveDiagonalUpperLeft">
      <summary>
            Outer shadow perspective diagonal upper left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.PerspectiveDiagonalUpperRight">
      <summary>
            Outer shadow perspective diagonal upper right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.Below">
      <summary>
            Outer shadow below.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.PerspectiveDiagonalLowerLeft">
      <summary>
            Outer shadow perspective diagonal lower left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetShadowType.PerspectiveDiagonalLowerRight">
      <summary>
            Outer shadow perspective diagonal lower right.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShadowEffect">
      <summary>
            This class specifies the shadow effect of the chart element or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.PresetType">
      <summary>
            Gets and sets the preset shadow type of the shadow.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Color">
      <summary>
            Gets and sets the color of the shadow.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Transparency">
      <summary>
            Gets and sets the degree of transparency of the shadow. Range from 0.0 (opaque) to 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Size">
      <summary>
            Gets and sets the size of the shadow. Range from 0 to 2.0. 
            Meaningless in inner shadow.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Blur">
      <summary>
            Gets and sets the blur of the shadow. Range from 0 to 100 points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Angle">
      <summary>
            Gets and sets the lighting angle. Range from 0 to 359.9 degrees.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShadowEffect.Distance">
      <summary>
            Gets and sets the distance of the shadow. Range from 0 to 200 points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PresetMaterialType">
      <summary>
            Describes surface appearance of a shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Clear">
      <summary>
            Clear
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.DarkEdge">
      <summary>
            Dark edge
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Flat">
      <summary>
            Flat
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.LegacyMatte">
      <summary>
            Legacy matte
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.LegacyMetal">
      <summary>
            Legacy metal
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.LegacyPlastic">
      <summary>
            Legacy plastic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.LegacyWireframe">
      <summary>
            Legacy wireframe
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Matte">
      <summary>
            Matte
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Metal">
      <summary>
            Metal
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Plastic">
      <summary>
            Plastic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.Powder">
      <summary>
            Powder
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.SoftEdge">
      <summary>
            Soft edge
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.SoftMetal">
      <summary>
            Soft metal
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.TranslucentPowder">
      <summary>
            Translucent powder
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetMaterialType.WarmMatte">
      <summary>
            Warm matte
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.RectangleAlignmentType">
      <summary>
            Represents how to position two rectangles relative to each other.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.Bottom">
      <summary>
            Bottom
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.BottomLeft">
      <summary>
            BottomLeft
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.BottomRight">
      <summary>
            BottomRight
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.Center">
      <summary>
            Center
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.Left">
      <summary>
            Left
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.Right">
      <summary>
            Right
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.Top">
      <summary>
            Top
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.TopLeft">
      <summary>
            TopLeft
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.RectangleAlignmentType.TopRight">
      <summary>
            TopRight
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePropertyCollection">
      <summary>
            This class specifies the visual shape properties for a chart element or shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.ClearGlowEffect">
      <summary>
            Clears the glow effect of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.HasGlowEffect">
      <summary>
            Indicates if the shape has glow effect data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.HasFormat3D">
      <summary>
            Indicates if the shape has 3d format data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.ClearFormat3D">
      <summary>
            Clears the 3D shape properties of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.ClearShadowEffect">
      <summary>
            Clears the shadow effect of the chart element or shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapePropertyCollection.HasShadowEffect">
      <summary>
            Indicates if the shape has shadow effect data.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePropertyCollection.GlowEffect">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.ShapePropertyCollection.GlowEffect" /> object that specifies glow effect for the chart element or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePropertyCollection.Format3D">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.ShapePropertyCollection.Format3D" /> object that specifies 3D shape properties for the chart element or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePropertyCollection.SoftEdgeRadius">
      <summary>
            Gets and sets the radius of blur to apply to the edges, in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapePropertyCollection.ShadowEffect">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.ShapePropertyCollection.ShadowEffect" /> object that specifies shadow effect for the chart element or shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReferredAreaCollection">
      <summary>
            Represents all referred cells and areas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredAreaCollection.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.SaveFormat">
      <summary>
            Represents the format in which the workbook is saved.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsx">
      <summary>
            Represents an xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xltx">
      <summary>
            Represents an xltx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xltm">
      <summary>
            Represents an xltm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlam">
      <summary>
            Represents an xltm file which enable addin macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.SpreadsheetML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Auto">
      <summary>
            If saving the file to the disk,the file format format accords to the extesion of the file name.
            If saving the file to the stream, the file format is xlsx.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Unknown">
      <summary>
            Represents unrecognized format, cannot be saved. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Pdf">
      <summary>
            Represents a Pdf file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.XPS">
      <summary>
            Represents an XPS file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.TIFF">
      <summary>
            Represents an TIFF file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.SVG">
      <summary>
            Represents an SVG file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Dif">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Sparkline">
      <summary>
            A sparkline represents a tiny chart or graphic in a worksheet cell that provides a visual representation of data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Sparkline.ToImage(Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Converts a sparkline to an image.
            </summary>
      <param name="options">The image options</param>
      <returns>Returns a <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.Sparkline.ToImage(System.String,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Converts a sparkline to an image.
            </summary>
      <param name="fileName">The image file name.</param>
      <param name="options">The image options</param>
    </member>
    <member name="M:Aspose.Cells.Charts.Sparkline.ToImage(System.IO.Stream,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Converts a sparkline to an image.
            </summary>
      <param name="stream">The image stream.</param>
      <param name="options">The image options.</param>
    </member>
    <member name="P:Aspose.Cells.Charts.Sparkline.DataRange">
      <summary>
            Represents the data range of the sparkline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Sparkline.Row">
      <summary>
            Gets the row index of the sparkline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Sparkline.Column">
      <summary>
            Gets the column index of the sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineAxisMinMaxType">
      <summary>
            Represents the minimum and maximum value types for the sparkline vertical axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.AutoIndividual">
      <summary>
            Automatic for each sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.Group">
      <summary>
            Same for all sparklines in the group.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.Custom">
      <summary>
            Custom value for sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Charts.Sparkline" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineCollection.Add(System.String,System.Int32,System.Int32)">
      <summary>
            Add a sparkline.
            </summary>
      <param name="dataRange">Specifies the new data range of the sparkline.</param>
      <param name="row">The row index of the location.</param>
      <param name="column">The column index of the location.</param>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineCollection.Remove(System.Object)">
      <summary>
            Removes the sparkline
            </summary>
      <param name="o">
      </param>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Charts.Sparkline" /> element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineGroup">
      <summary>
        <see cref="T:Aspose.Cells.Charts.Sparkline" /> is organized into sparkline group. A SparklineGroup contains a variable number of sparkline items.
            A sparkline group specifies the type, display settings and axis settings for the sparklines.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineGroup.ResetRanges(System.String,System.Boolean,Aspose.Cells.CellArea)">
      <summary>
            Resets the data range and location range of the sparkline group. 
            This method will clear original sparkline items in the group and creates new sparkline items for the new ranges.
            </summary>
      <param name="dataRange">Specifies the new data range of the sparkline group.</param>
      <param name="isVertical">Specifies whether to plot the sparklines from the new data range by row or by column.</param>
      <param name="locationRange">Specifies where the sparklines to be placed.</param>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.PresetStyle">
      <summary>
            Gets and sets the preset style type of the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.SparklineCollection">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.SparklineGroup.SparklineCollection" /> object of the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.Type">
      <summary>
            Indicates the sparkline type of the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.PlotEmptyCellsType">
      <summary>
            Indicates how to plot empty cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.DisplayHidden">
      <summary>
            Indicates whether to show data in hidden rows and columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowHighPoint">
      <summary>
            Indicates whether to highlight the highest points of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.HighPointColor">
      <summary>
            Gets and sets the color of the highest points of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowLowPoint">
      <summary>
            Indicates whether to highlight the lowest points of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.LowPointColor">
      <summary>
            Gets and sets the color of the lowest points of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowNegativePoints">
      <summary>
            Indicates whether to highlight the negative values on the sparkline group with a different color or marker.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.NegativePointsColor">
      <summary>
            Gets and sets the color of the negative values on the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowFirstPoint">
      <summary>
            Indicates whether to highlight the first point of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.FirstPointColor">
      <summary>
            Gets and sets the color of the first point of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowLastPoint">
      <summary>
            Indicates whether to highlight the last point of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.LastPointColor">
      <summary>
            Gets and sets the color of the last point of data in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowMarkers">
      <summary>
            Indicates whether to highlight each point in each line sparkline in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.MarkersColor">
      <summary>
            Gets and sets the color of points in each line sparkline in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.SeriesColor">
      <summary>
            Gets and sets the color of the sparklines in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.PlotRightToLeft">
      <summary>
            Indicates whether the plot data is right to left.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.LineWeight">
      <summary>
            Gets and sets the line weight in each line sparkline in the sparkline group, in the unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.HorizontalAxisColor">
      <summary>
            Gets and sets the color of the horizontal axis in the sparkline group.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.ShowHorizontalAxis">
      <summary>
            Indicates whether to show the sparkline horizontal axis.
            The horizontal axis appears if the sparkline has data that crosses the zero axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.HorizontalAxisDateRange">
      <summary>
            Represents the range that contains the date values for the sparkline data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.VerticalAxisMaxValueType">
      <summary>
            Represents the vertical axis maximum value type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.VerticalAxisMaxValue">
      <summary>
            Gets and sets the custom maximum value for the vertical axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.VerticalAxisMinValueType">
      <summary>
            Represents the vertical axis minimum value type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroup.VerticalAxisMinValue">
      <summary>
            Gets and sets the custom minimum value for the vertical axis.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineGroupCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Charts.SparklineGroup" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineGroupCollection.Add(Aspose.Cells.Charts.SparklineType,System.String,System.Boolean,Aspose.Cells.CellArea)">
      <summary>
            Adds an <see cref="T:Aspose.Cells.Charts.SparklineGroup" /> item to the collection.
            </summary>
      <param name="type">Specifies the type of the Sparkline group.</param>
      <param name="dataRange">Specifies the data range of the sparkline group.</param>
      <param name="isVertical">Specifies whether to plot the sparklines from the data range by row or by column.</param>
      <param name="locationRange">Specifies where the sparklines to be placed.</param>
      <returns>
        <see cref="T:Aspose.Cells.Charts.SparklineGroup" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineGroupCollection.ClearSparklines(Aspose.Cells.CellArea)">
      <summary>
            Clears the sparklines that is inside an area of cells.
            </summary>
      <param name="cellArea">Specifies the area of cells</param>
    </member>
    <member name="M:Aspose.Cells.Charts.SparklineGroupCollection.ClearSparklineGroups(Aspose.Cells.CellArea)">
      <summary>
            Clears the sparkline groups that overlaps an area of cells.
            </summary>
      <param name="cellArea">Specifies the area of cells</param>
    </member>
    <member name="P:Aspose.Cells.Charts.SparklineGroupCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Charts.SparklineGroup" /> element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklinePresetStyleType">
      <summary>
            Represents the preset style types for sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style1">
      <summary>
            Style 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style2">
      <summary>
            Style 2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style3">
      <summary>
            Style 3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style4">
      <summary>
            Style 4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style5">
      <summary>
            Style 5
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style6">
      <summary>
            Style 6
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style7">
      <summary>
            Style 7
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style8">
      <summary>
            Style 8
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style9">
      <summary>
            Style 9
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style10">
      <summary>
            Style 10
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style11">
      <summary>
            Style 11
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style12">
      <summary>
            Style 12
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style13">
      <summary>
            Style 13
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style14">
      <summary>
            Style 14
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style15">
      <summary>
            Style 15
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style16">
      <summary>
            Style 16
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style17">
      <summary>
            Style 17
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style18">
      <summary>
            Style 18
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style19">
      <summary>
            Style 19
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style20">
      <summary>
            Style 20
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style21">
      <summary>
            Style 21
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style22">
      <summary>
            Style 22
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style23">
      <summary>
            Style 23
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style24">
      <summary>
            Style 24
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style25">
      <summary>
            Style 25
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style26">
      <summary>
            Style 26
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style27">
      <summary>
            Style 27
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style28">
      <summary>
            Style 28
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style29">
      <summary>
            Style 29
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style30">
      <summary>
            Style 30
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style31">
      <summary>
            Style 31
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style32">
      <summary>
            Style 32
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style33">
      <summary>
            Style 33
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style34">
      <summary>
            Style 34
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style35">
      <summary>
            Style 35
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style36">
      <summary>
            Style 36
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Custom">
      <summary>
            No preset style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineType">
      <summary>
            Represents the sparkline types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Line">
      <summary>
            Line sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Column">
      <summary>
            Column sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Stacked">
      <summary>
            Win/Loss sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SpreadsheetML2003SaveOptions">
      <summary>
            Represents the options for saving Excel 2003 spreadml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.SpreadsheetML2003SaveOptions.#ctor">
      <summary>
            Creates the options for saving Excel 2003 spreadml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.SpreadsheetML2003SaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving Excel 2003 spreadml file.
            </summary>
      <param name="saveFormat">The save format.</param>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.IsIndentedFormatting">
      <summary>
            Causes child elements to be indented.
            </summary>
      <remarks>
            The default value is true.
            If the value is false, it will reduce the size of the xml file 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.LimitAsXls">
      <summary>
            Limit as xls, the max row index is 65535 and the max column index is 255.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.ExportColumnIndexOfCell">
      <summary>
            The default value is false, it means that column index  will be ignored if the cell is contiguous to the previous cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BuiltinStyleType">
      <summary>
            Represents all builit style type
            </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Bad">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Calculation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.CheckCell">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Comma1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Currency">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Currency1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.ExplanatoryText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Good">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Hyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Input">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.LinkedCell">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Neutral">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Note">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Output">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Title">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Total">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.WarningText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.RowLevel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.ColumnLevel">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.CellsColor">
      <summary>
            Represents all types of color.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsColor.SetTintOfShapeColor(System.Double)">
      <summary>
            Set the tint of the shape color
            </summary>
      <param name="tint">
      </param>
    </member>
    <member name="P:Aspose.Cells.CellsColor.IsShapeColor">
      <summary>
            Gets and set the color which should apply to cell or shape.
            </summary>
      <remarks>
            The expression of the color of the cell and the shape is different.
            For exampe :the theme color with same tint value will be not same in the cell and the shape.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Type">
      <summary>
            The color type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.ThemeColor">
      <summary>
            Gets the theme color. Only applies for theme color type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.ColorIndex">
      <summary>
            Gets and sets the color index in the color palette. Only applies of indexed color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Color">
      <summary>
            Gets and sets the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Argb">
      <summary>
            Gets and sets the color from a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Transparency">
      <summary>
            Gets and sets transparency as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.AxisType">
      <summary>
            Represents the axis type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Category">
      <summary>
            Category axis 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Value">
      <summary>
            Value axis
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Series">
      <summary>
            Series axis
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.CategoryType">
      <summary>
            Represents the category axis type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.AutomaticScale">
      <summary>
            AutomaticScale
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.CategoryScale">
      <summary>
            CategoryScale
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.TimeScale">
      <summary>
            TimeScale
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.CrossType">
      <summary>
            Represents the axis cross type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Automatic">
      <summary>
            Microsoft Excel sets the axis crossing point.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Maximum">
      <summary>
            The axis crosses at the maximum value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Custom">
      <summary>
            The axis crosses at the custom value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.PlotArea">
      <summary>
            Encapsulates the object that represents the plot area in a chart. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartFrame">
      <summary>
            Encapsulates the object that represents the frame object in a chart. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartFrame.SetPositionAuto">
      <summary>
            Set position of the frame to automatic
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.IsInnerMode">
      <summary>
            Indicates whether the size of the plot area size includes the tick marks, and the axis labels.
            False specifies that the size shall determine the size of the plot area, the tick marks, and the axis labels.
            </summary>
      <remarks>
            Only for Xlsx file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Border">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Drawing.Line">border</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Area">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.ChartFrame.Area">area</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.TextFont">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.ChartFrame.Font" /> object of the specified ChartFrame object.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ChartFrame.Font property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.ChartFrame.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.BackgroundMode">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ChartFrame.BackgroundMode property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.IsAutomaticSize">
      <summary>
            Indicates whether the chart frame is automatic sized.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.X">
      <summary>
            Gets or sets the x coordinate of the upper left corner in units of 1/4000 of the chart area.
            </summary>
      <remarks>
            How to convert units of 1/4000 to pixels? 
            X In Pixels = X * Chart.ChartObject.Width / 4000;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Y">
      <summary>
            Gets or sets the y coordinate of the upper left corner in units of 1/4000 of the chart area.		
            </summary>
      <remarks>
            How to convert units of 1/4000 to pixels? 
            Y In Pixels = Y * Chart.ChartObject.Height / 4000;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Height">
      <summary>
            Gets or sets the height of frame in units of 1/4000 of the chart area.
            </summary>
      <remarks>
            How to convert units of 1/4000 to pixels? 
            Height In Pixels = Y * Chart.ChartObject.Height / 4000;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Width">
      <summary>
            Gets or sets the width of frame in units of 1/4000 of the chart area.
            </summary>
      <remarks>
            How to convert units of 1/4000 to pixels? 
            Width In Pixels = Width * Chart.ChartObject.Height / 4000;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.Shadow">
      <summary>
            True if the frame has a shadow. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.ShapeProperties">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.ChartFrame.ShapeProperties" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.IsDefaultPosBeSet">
      <summary>
            Indicates whether default position(DefaultX, DefaultY, DefaultWidth and DefaultHeight) are set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.DefaultX">
      <summary>
            Represents x of default position
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.DefaultY">
      <summary>
            Represents y of default position
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.DefaultWidth">
      <summary>
            Represents width of default position
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartFrame.DefaultHeight">
      <summary>
            Represents height of default position
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.PlotArea.SetPositionAuto">
      <summary>
            Set position of the plot area to automatic
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.X">
      <summary>
            Gets or gets the x coordinate of the upper left corner of plot-area bounding box in units of 1/4000 of the chart area.
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.Y">
      <summary>
            Gets or gets the y coordinate of the upper top corner  of plot-area bounding box in units of 1/4000 of the chart area.	
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.Height">
      <summary>
            Gets or sets the height of plot-area bounding box in units of 1/4000 of the chart area.		
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.Width">
      <summary>
            Gets or sets the width of plot-area bounding box in units of 1/4000 of the chart area.	
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.InnerX">
      <summary>
            Gets or gets the x coordinate of the upper top corner of plot area in units of 1/4000 of the chart area.
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.InnerY">
      <summary>
            Gets or gets the x coordinate of the upper top corner of plot area in units of 1/4000 of the chart area.		
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.InnerHeight">
      <summary>
            Gets or sets the height of plot area in units of 1/4000 of the chart area.		
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.PlotArea.InnerWidth">
      <summary>
            Gets or sets the width  of plot area in units of 1/4000 of the chart area.		
            </summary>
      <remarks>
        <p>The plot-area bounding box includes the plot area, tick marks(tick labels), and a small border around the tick marks.
            If the value is not created by MS Excel, please call Chart.Calculate() method before calling this method. </p>
        <p>The <b>X</b>, <b>Y</b>, <b>Width</b> and <b>Height</b> of <b>PlotArea</b> represents the plot-area 
            bounding box that includes the plot area, tick marks(tick labels), and a small border around the tick marks. 
            If you want to get actual size of plot area, you should call <b>InnerX</b>, <b>InnerY</b>, <b>InnerWidth</b> and 
            <b>InnerHeight</b> properties.</p>
        <p>For excel 2007 or latter, the defaut value is zero. you should call get the value after calling Chart.Calculate().</p>
      </remarks>
    </member>
    <member name="T:Aspose.Cells.Charts.TimeUnit">
      <summary>
            Represents the base unit for the category axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Days">
      <summary>
            Days
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Months">
      <summary>
            Months
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Years">
      <summary>
            Years
            </summary>
    </member>
    <member name="T:Aspose.Cells.ColorType">
      <summary>
            Represents all color type 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.Automatic">
      <summary>
            Automatic color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.AutomaticIndex">
      <summary>
            It's automatic color,but the displayed color depends the setting of the OS System.
            </summary>
      <remarks>
            Not supported.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.ColorType.RGB">
      <summary>
            The RGB color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.IndexedColor">
      <summary>
            The color index in the color palette.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.Theme">
      <summary>
            The theme color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DxfCollection">
      <summary>
            Represents the master differential formatting records.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DxfCollection.Item(System.Int32)">
      <summary>
             Gets the element at the specified index.
            </summary>
      <param name="index">The specified index. </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.LookAtType">
      <summary>
            Represents look at type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.Contains">
      <summary>
            Cell value Contains the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.StartWith">
      <summary>
            Cell value Starts with the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.EndWith">
      <summary>
            Cell value ends with the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.EntireContent">
      <summary>
            Cell value is same as the find object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LookInType">
      <summary>
            Represents look in type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Formulas">
      <summary>
            If the cell contains a formula, find it from formula.
            Else find object from the formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Values">
      <summary>
            Only find object from the formatted values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.ValuesExcludeFormulaCell">
      <summary>
            Only find object from the values of cells which do not contains formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Comments">
      <summary>
            Only find object from the comments.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.OnlyFormulas">
      <summary>
            Only find object from formulas.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.OriginalValues">
      <summary>
            Only find object from the original values.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReplaceOptions">
      <summary>
            Represent the replace options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.IsCaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ReplaceOptions.CaseSensitive property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.CaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.MatchEntireCellContents">
      <summary>
            Indicates whether to match entire cells contents
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReferredArea">
      <summary>
            Represents a referred objcet by the formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ReferredArea.GetValues">
      <summary>
            Gets cell values in this area.
            </summary>
      <returns>If this area is invalid, "#REF!" will be returned;
            If this area is one single cell, then return the cell value object;
            Otherwise return one array for all values in this area.</returns>
    </member>
    <member name="M:Aspose.Cells.ReferredArea.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets cell value with given offset from the top-left of this area.
            </summary>
      <param name="rowOffset">row offset from the start row of this area</param>
      <param name="colOffset">column offset from the start row of this area</param>
      <returns>"#REF!" if this area is invalid;
            "#N/A" if given offset out of this area;
            Otherwise return the cell value at given position.</returns>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.IsExternalLink">
      <summary>
            Indicates whether this is an external link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.ExternalFileName">
      <summary>
             this.KeepedRels = source.KeepedRels;
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.SheetName">
      <summary>
            Indicates which sheet this is in
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.IsArea">
      <summary>
            Indicates whether this is an area.
            </summary>
      <remarks>
            If this is not an area, only StartRow and StartColumn effect.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.EndColumn">
      <summary>
            The end column of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.StartColumn">
      <summary>
            The start column of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.EndRow">
      <summary>
            The end row of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.StartRow">
      <summary>
            The start row of the area.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ArcShape">
      <summary>
             Represents the arc shape.
             </summary>
      <example>
        <code>
             
             [C#]
             //Instantiate a new Workbook.
            Workbook excelbook = new Workbook();
             
             //Add an arc shape.
            Aspose.Cells.ArcShape arc1 = excelbook.Worksheets[0].Shapes.AddArc(2, 0, 2, 0, 130, 130);
             
             //Set the placement of the arc.
            arc1.Placement = PlacementType.FreeFloating;
             
             //Set the fill format.
            arc1.FillFormat.ForeColor = Color.Blue;
             
             //Set the line style.
            arc1.LineFormat.Style = MsoLineStyle.Single;
             
             //Set the line weight.
            arc1.LineFormat.Weight = 1;
             
             //Set the color of the arc line.
            arc1.LineFormat.ForeColor = Color.Blue;
             
             //Set the dash style of the arc.
            arc1.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
             //Add another arc shape.
            Aspose.Cells.ArcShape arc2 = excelbook.Worksheets[0].Shapes.AddArc(9, 0, 2, 0, 130, 130);
             
             //Set the placement of the arc.
            arc2.Placement = PlacementType.FreeFloating;
             
             //Set the line style.
            arc2.LineFormat.Style = MsoLineStyle.Single;
             
             //Set the line weight.
            arc2.LineFormat.Weight = 1;
             
             //Set the color of the arc line.
            arc2.LineFormat.ForeColor = Color.Blue;
             
             //Set the dash style of the arc.
            arc2.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
             //Save the excel file.
            excelbook.Save("d:\\test\\tstarcs.xls");
             
             [VB..NET]
            
            'Instantiate a new Workbook.
            Dim excelbook As Workbook = New Workbook()
             
            'Add an arc shape.
            Dim arc1 As Aspose.Cells.ArcShape = excelbook.Worksheets(0).Shapes.AddArc(2, 0, 2, 0, 130, 130)
             
            'Set the placement of the arc.
            arc1.Placement = PlacementType.FreeFloating
             
            'Set the fill format.
            arc1.FillFormat.ForeColor = Color.Blue
             
            'Set the line style.
            arc1.LineFormat.Style = MsoLineStyle.Single
             
            'Set the line weight.
            arc1.LineFormat.Weight = 1
             
            'Set the color of the arc line.
            arc1.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the arc.
            arc1.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Add another arc shape.
            Dim arc2 As Aspose.Cells.ArcShape = excelbook.Worksheets(0).Shapes.AddArc(9, 0, 2, 0, 130, 130)
             
            'Set the placement of the arc.
            arc2.Placement = PlacementType.FreeFloating
             
            'Set the line style.
            arc2.LineFormat.Style = MsoLineStyle.Single
             
            'Set the line weight.
            arc2.LineFormat.Weight = 1
             
            'Set the color of the arc line.
            arc2.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the arc.
            arc2.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Save the excel file.
            excelbook.Save("d:\test\tstarcs.xls")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.BeginArrowheadStyle">
      <summary>
            Gets and sets the begin arrow head style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.BeginArrowheadWidth">
      <summary>
            Gets and sets the begin arrow head width of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.BeginArrowheadLength">
      <summary>
            Gets and sets the begin arrow head length of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.EndArrowheadStyle">
      <summary>
            Gets and sets the end arrow head style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.EndArrowheadWidth">
      <summary>
            Gets and sets the end arrow head width of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ArcShape.EndArrowheadLength">
      <summary>
            Gets and sets the end arrow head length of the line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Area">
      <summary>
            Encapsulates the object that represents an area format.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Workbook object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            //Setting the foreground color of the plot area
            chart.PlotArea.Area.ForegroundColor = Color.Blue;
            //Setting the foreground color of the chart area
            chart.ChartArea.Area.ForegroundColor = Color.Yellow;
            //Setting the foreground color of the 1st NSeries area
            chart.NSeries[0].Area.ForegroundColor = Color.Red;
            //Setting the foreground color of the area of the 1st NSeries point
            chart.NSeries[0].Points[0].Area.ForegroundColor = Color.Cyan;
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Workbook object
            Dim sheetIndex As Integer = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            'Setting the foreground color of the plot area
            chart.PlotArea.Area.ForegroundColor = Color.Blue
            'Setting the foreground color of the chart area
            chart.ChartArea.Area.ForegroundColor = Color.Yellow
            'Setting the foreground color of the 1st NSeries area
            chart.NSeries(0).Area.ForegroundColor = Color.Red
            'Setting the foreground color of the area of the 1st NSeries point
            chart.NSeries(0).Points(0).Area.ForegroundColor = Color.Cyan
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.BackgroundColor">
      <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color" /> of the <see cref="T:Aspose.Cells.Drawing.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.ForegroundColor">
      <summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.Formatting">
      <summary>
            Represents the formatting of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.InvertIfNegative">
      <summary>
            If the property is true and the value of chart point is a negative number,
            the foreground color and background color will be exchanged.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Workbook object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(-100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "A3"
            chart.NSeries.Add("A1:A3", true);
            chart.NSeries[0].Area.InvertIfNegative = true;
            //Setting the foreground color of the 1st NSeries area
            chart.NSeries[0].Area.ForegroundColor = Color.Red;
            //Setting the background color of the 1st NSeries area.
            //The displayed area color of second chart point will be the background color.
            chart.NSeries[0].Area.BackgroundColor = Color.Yellow;
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Workbook object
            Dim sheetIndex As Integer = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(-100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "A3"
            chart.NSeries.Add("A1:A3", True)
            chart.NSeries(0).Area.InvertIfNegative = True
            'Setting the foreground color of the 1st NSeries area
            chart.NSeries(0).Area.ForegroundColor = Color.Red
            'Setting the background color of the 1st NSeries area.
            'The displayed area color of second chart point will be the background color.
            chart.NSeries(0).Area.BackgroundColor = Color.Yellow
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.FillFormat">
      <summary>
            Represents a <seealso cref="P:Aspose.Cells.Drawing.Area.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Area.Transparency">
      <summary>
            Returns or sets the degree of transparency of the area as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Series">
      <summary>
            Encapsulates the object that represents a single data series in a chart.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Excel object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "A4" cell
            worksheet.Cells["A4"].PutValue(200);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a sample value to "B4" cell
            worksheet.Cells["B4"].PutValue(40);
            //Adding a sample value to "C1" cell as category data
            worksheet.Cells["C1"].PutValue("Q1");
            //Adding a sample value to "C2" cell as category data
            worksheet.Cells["C2"].PutValue("Q2");
            //Adding a sample value to "C3" cell as category data
            worksheet.Cells["C3"].PutValue("Y1");
            //Adding a sample value to "C4" cell as category data
            worksheet.Cells["C4"].PutValue("Y2");
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", true);
            //Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4";
            Series series = chart.NSeries[1];
            //Setting the values of the series.
            series.Values = "=B1:B4";
            //Changing the chart type of the series.
            series.Type = ChartType.Line;
            //Setting marker properties.
            series.MarkerStyle = ChartMarkerType.Circle;
            series.MarkerForegroundColorSetType = FormattingType.Automatic;
            series.MarkerForegroundColor = System.Drawing.Color.Black;
            series.MarkerBackgroundColorSetType = FormattingType.Automatic;
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Excel object
            Dim sheetIndex As Int32 = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "A4" cell
            worksheet.Cells("A4").PutValue(200)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a sample value to "B4" cell
            worksheet.Cells("B4").PutValue(40)
            'Adding a sample value to "C1" cell as category data
            worksheet.Cells("C1").PutValue("Q1")
            'Adding a sample value to "C2" cell as category data
            worksheet.Cells("C2").PutValue("Q2")
            'Adding a sample value to "C3" cell as category data
            worksheet.Cells("C3").PutValue("Y1")
            'Adding a sample value to "C4" cell as category data
            worksheet.Cells("C4").PutValue("Y2")
            'Adding a chart to the worksheet
            Dim chartIndex As Int32 = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", True)
            'Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4"
            Dim series As Series = chart.NSeries(1)
            'Setting the values of the series.
            series.Values = "=B1:B4"
            'Changing the chart type of the series.
            series.Type = ChartType.Line
            'Setting marker properties.
            series.MarkerStyle = ChartMarkerType.Circle
            series.MarkerForegroundColorSetType = FormattingType.Automatic
            series.MarkerForegroundColor = System.Drawing.Color.Black
            series.MarkerBackgroundColorSetType = FormattingType.Automatic
            'Saving the Excel file
            workbook.Save("C:\\book1.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.Series.Move(System.Int32)">
      <summary>
            Moves the series up or down.
            </summary>
      <param name="count">The number of moving up or down.
            Move the series up if this is less than zero;
            Move the series down if this is greater than zero.
            </param>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Points">
      <summary>
            Gets the collection of points in a series in a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Area">
      <summary>
            Represents the background area of Series object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Line">
      <summary>
            Represents border of Series object.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Border property. 
            This property will be removed 12 months later since Mar. 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Border">
      <summary>
            Represents border of Series object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Name">
      <summary>
            Gets or sets the name of the data series.
            </summary>
      <example>
        <code>
            [C#]
            
            //Reference name to a cell
            chart.NSeries[0].Name = "=A1";
            
            //Set a string to name
            chart.NSeries[0].Name = "First Series";
            [Visual Basic]
            
            'Reference name to a cell
            chart.NSeries[0].Name = "=A1"
            
            'Set a string to name
            chart.NSeries[0].Name = "First Series"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.DisplayName">
      <summary>
            Gets the series's name that displays on the chart graph.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.CountOfDataValues">
      <summary>
            Gets the number of the data values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.IsVerticalValues">
      <summary>
            Indicates whether the data source is vertical.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Values">
      <summary>
            Represents the data of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.XValues">
      <summary>
            Represents the x values of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.BubbleSizes">
      <summary>
            Gets or sets the bubble sizes values of the chart series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.TrendLines">
      <summary>
            Returns an object that represents a collection of all the trendlines for the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Smooth">
      <summary>
            Represents curve smoothing. 
            True if curve smoothing is turned on for the line chart or scatter chart.
            Applies only to line and scatter connected by lines charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Shadow">
      <summary>
            True if the series has a shadow. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Has3DEffect">
      <summary>
            True if the series has a three-dimensional appearance. 
            Applies only to bubble charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Bar3DShapeType">
      <summary>
            Gets or sets the 3D shape type used with the 3-D bar or column chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.BarShape">
      <summary>
            Gets or sets the 3D shape type used with the 3-D bar or column chart.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ASeries.Bar3DShapeType property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.DataLabels">
      <summary>
            Represents the DataLabels object for the specified ASeries. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Type">
      <summary>
            Gets or sets a data series' type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Marker">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.Series.Marker">marker</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerStyle">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerStyle property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerSize">
      <summary>
            Represents the marker size in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerSize property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerForegroundColor">
      <summary>
            Represents the marker foreground color in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerForegroundColor property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerForegroundColorSetType">
      <summary>
            Gets or sets the marker foreground color set type.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerForegroundColorSetType property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.
            FormattingType.Automatic is same as ChartLineFormattingType.Automatic.
            FormattingType.None is same as ChartLineFormattingType.None.
            FormattingType.Custom is same as ChartLineFormattingType.Solid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerBackgroundColor">
      <summary>
            Represents the marker background color in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerBackgroundColor property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.MarkerBackgroundColorSetType">
      <summary>
            Gets or sets the marker background color set type.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerBackgroundColorSetType property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.
            FormattingType.Automatic is same as ChartLineFormattingType.Automatic.
            FormattingType.None is same as ChartLineFormattingType.None.
            FormattingType.Custom is same as ChartLineFormattingType.Solid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.PlotOnSecondAxis">
      <summary>
            Indicates if this series is plotted on second value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.XErrorBar">
      <summary>
            Represents X direction error bar of the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.YErrorBar">
      <summary>
            Represents Y direction error bar of the series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasHiLoLines">
      <summary>
            True if the line chart has high-low lines. 
             Applies only to line charts.
             </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HiLoLines">
      <summary>
            Returns a HiLoLines object that represents the high-low lines for a series on a line chart. 
            Applies only to line charts.
             </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasSeriesLines">
      <summary>
            True if a stacked column chart or bar chart has series lines or
            if a Pie of Pie chart or Bar of Pie chart has connector lines between the two sections. 
            Applies only to stacked column charts, bar charts, Pie of Pie charts, or Bar of Pie charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.SeriesLines">
      <summary>
            Returns a SeriesLines object that represents the series lines for a stacked bar chart or a stacked column chart.
            Applies only to stacked bar and stacked column charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasDropLines">
      <summary>
            True if the chart has drop lines.
            Applies only to line chart or area charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.DropLines">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.Series.Line" /> object that represents the drop lines for a series on the line chart or area chart.
            Applies only to line chart or area charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasUpDownBars">
      <summary>
            True if a line chart has up and down bars.
            Applies only to line charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.UpBars">
      <summary>
            Returns an DropBars object that represents the up bars on a line chart.
            Applies only to line charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.DownBars">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Charts.DropBars" /> object that represents the down bars on a line chart.
            Applies only to line charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.IsColorVaried">
      <summary>
            Represents if the color of points is varied. 
            The chart must contain only one series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.GapWidth">
      <summary>
            Returns or sets the space between bar or column clusters, as a percentage of the bar or column width.
            The value of this property must be between 0 and 500.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.FirstSliceAngle">
      <summary>
            Gets or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). 
            Applies only to pie, 3-D pie, and doughnut charts, 0 to 360. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Overlap">
      <summary>
            Specifies how bars and columns are positioned.
            Can be a value between ¨C 100 and 100. 
            Applies only to 2-D bar and 2-D column charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.SecondPlotSize">
      <summary>
            Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, 
            as a percentage of the size of the primary pie.
            Can be a value from 5 to 200. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.SplitType">
      <summary>
            Gets or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.SplitValue">
      <summary>
            Returns or sets the threshold value separating the two sections of either a pie of pie chart or a bar of pie chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.IsAutoSplit">
      <summary>
            Indicates whether the threshold value is automatic.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.BubbleScale">
      <summary>
            Gets or sets the scale factor for bubbles in the specified chart group. 
            It can be an integer value from 0 (zero) to 300, 
            corresponding to a percentage of the default size.
            Applies only to bubble charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.SizeRepresents">
      <summary>
            Gets or sets what the bubble size represents on a bubble chart.
            </summary>
      <remarks>
            BubbleSizeRepresents.SizeIsArea means the value <see cref="P:Aspose.Cells.Charts.Series.BubbleSizes" /> is the area of the bubble.
            BubbleSizeRepresents.SizeIsWidth means the value <see cref="P:Aspose.Cells.Charts.Series.BubbleSizes" /> is the width of the bubble.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.ShowNegativeBubbles">
      <summary>
            True if negative bubbles are shown for the chart group. Valid only for bubble charts. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.DoughnutHoleSize">
      <summary>
            Returns or sets the size of the hole in a doughnut chart group. 
            The hole size is expressed as a percentage of the chart size, between 10 and 90 percent.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.Explosion">
      <summary>
            The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasRadarAxisLabels">
      <summary>
            True if a radar chart has category axis labels. Applies only to radar charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.HasLeaderLines">
      <summary>
            True if the series has leader lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.LeaderLines">
      <summary>
            Represents leader lines on a chart. Leader lines connect data labels to data points. 
            This object isn¡¯t a collection; there¡¯s no object that represents a single leader line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.LegendEntry">
      <summary>
            Gets the legend entry according to this series.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Series.ShapeProperties">
      <summary>
            Gets the <seealso cref="T:Aspose.Cells.Drawing.ShapePropertyCollection" /> object that holds the visual shape properties of the Series.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfBookmarkEntry">
      <summary>
             PdfBookmarkEntry is an entry in pdf bookmark.
             if Text property of current instance is null or "",
             current instance will be hidden and children will be inserted on current level.
             </summary>
      <example>
        <code>
             [C#]    
            Workbook workbook = new Workbook();
            workbook.Worksheets.Add();
            workbook.Worksheets.Add();
            Cell cellInPage1 = workbook.Worksheets[0].Cells["A0"];
            Cell cellInPage2 = workbook.Worksheets[1].Cells["A0"];
            Cell cellInPage3 = workbook.Worksheets[2].Cells["A0"];
            cellInPage1.PutValue("page1");
            cellInPage2.PutValue("page2");
            cellInPage3.PutValue("page3");
            
            PdfBookmarkEntry pbeRoot = new PdfBookmarkEntry();
            pbeRoot.Text = "root";  // if pbeRoot.Text = null, all children of pbeRoot will be inserted on the top level in the bookmark.
            pbeRoot.Destination = cellInPage1;
            pbeRoot.SubEntry = new ArrayList();
            pbeRoot.IsOpen = false;
            
            PdfBookmarkEntry subPbe1 = new PdfBookmarkEntry();
            subPbe1.Text = "section1";
            subPbe1.Destination = cellInPage2;
            
            PdfBookmarkEntry subPbe2 = new PdfBookmarkEntry();
            subPbe2.Text = "section2";
            subPbe2.Destination = cellInPage3;
            
            pbeRoot.SubEntry.Add(subPbe1);
            pbeRoot.SubEntry.Add(subPbe2);
            
            workbook.SaveOptions.PdfBookmark = pbeRoot;
            workbook.Save("c:\\Test.pdf");
             
             [VB]    
            Dim workbook As Workbook = New Workbook
            workbook.Worksheets.Add("sheet2")
            workbook.Worksheets.Add("sheet3")
            
            Dim cells As Cells = workbook.Worksheets(0).Cells
            Dim cellInPage1 As Cell = cells("A0")
            cellInPage1.PutValue("Page1")
            
            cells = workbook.Worksheets(1).Cells
            Dim cellInPage2 As Cell = cells("A0")
            cellInPage2.PutValue("Page2")
            
            cells = workbook.Worksheets(2).Cells
            Dim cellInPage3 As Cell = cells("A0")
            cellInPage3.PutValue("Page3")
            
            Dim pbeRoot As PdfBookmarkEntry = New PdfBookmarkEntry()
            pbeRoot.Text = "root"
            pbeRoot.Destination = cellInPage1
            pbeRoot.SubEntry = New ArrayList
            pbeRoot.IsOpen = False
            
            Dim subPbe1 As PdfBookmarkEntry = New PdfBookmarkEntry()
            subPbe1.Text = "section1"
            subPbe1.Destination = cellInPage2
            
            Dim subPbe2 As PdfBookmarkEntry = New PdfBookmarkEntry()
            subPbe2.Text = "section2"
            subPbe2.Destination = cellInPage3
            
            pbeRoot.SubEntry.Add(subPbe1)
            pbeRoot.SubEntry.Add(subPbe2)
            
            workbook.SaveOptions.PdfBookmark = pbeRoot
            workbook.Save("c:\\Test.pdf")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfBookmarkEntry.Text">
      <summary>
            Title of a bookmark.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfBookmarkEntry.Destination">
      <summary>
            The cell to which the bookmark link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfBookmarkEntry.SubEntry">
      <summary>
            SubEntry of a bookmark.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfBookmarkEntry.IsOpen">
      <summary>
            When this property is true, the bookmarkentry will expand, otherwise it will collapse.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.PdfBookmarkEntry.IsCollapse">
      <summary>
            When this property is true, the bookmarkentry will collapse, otherwise it will expand.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.SheetRender">
      <summary>
            Represents a worksheet render which can render worksheet to various images such as (BMP, PNG, JPEG, TIFF..)
            The constructor of this class , must be used after modification of pagesetup, cell style.    
            </summary>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.#ctor(Aspose.Cells.Worksheet,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            the construct of SheetRender, need worksheet and ImageOrPrintOptions as params
            </summary>
      <param name="worksheet">Indicate which spreadsheet to be rendered.</param>
      <param name="options">ImageOrPrintOptions contains some property of output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.GetPageSize(System.Int32)">
      <summary>
            Get page size of output image. The size unit is in pixel.
            </summary>
      <param name="pageIndex">The page index is based on zero.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToImage(System.Int32,System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Render certain page to a Graphics
            </summary>
      <param name="pageIndex">indicate which page is to be converted</param>
      <param name="g">The object where to render to.</param>
      <param name="x">The X coordinate (in pixels) of the top left corner of the rendered page.</param>
      <param name="y">The Y coordinate (in pixels) of the top left corner of the rendered page.</param>
      <param name="width">The maximum width (in pixels) that can be occupied by the rendered page.</param>
      <param name="height">The maximum height (in pixels) that can be occupied by the rendered page.</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToImage(System.Int32,System.Drawing.Graphics,System.Single,System.Single)">
      <summary>
            Render certain page to a Graphics
            </summary>
      <param name="pageIndex">indicate which page is to be converted</param>
      <param name="g">The object where to render to.</param>
      <param name="x">The X coordinate (in pixels) of the top left corner of the rendered page.</param>
      <param name="y">The Y coordinate (in pixels) of the top left corner of the rendered page.</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToImage(System.Int32,System.String)">
      <summary>
            Render certain page to a file.
            </summary>
      <param name="pageIndex">indicate which page is to be converted</param>
      <param name="fileName">filename of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToImage(System.Int32,System.IO.Stream)">
      <summary>
            Render certain page to a stream.
            </summary>
      <param name="pageIndex">indicate which page is to be converted</param>
      <param name="stream">the stream of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToImage(System.Int32)">
      <summary>
            Render certain page to a Bitmap object.
            </summary>
      <param name="pageIndex">indicate which page is to be converted</param>
      <returns>the bitmap object of the page</returns>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToTiff(System.IO.Stream)">
      <summary>
            Render whole worksheet as Tiff Image to stream.
            </summary>
      <param name="stream">the stream of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToTiff(System.String)">
      <summary>
            Render whole worksheet as Tiff Image to a file.
            </summary>
      <param name="filename">the filename of the output image</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToPrinter(System.String)">
      <summary>
            Render worksheet to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToPrinter(System.String,System.Int32,System.Int32)">
      <summary>
            Render worksheet to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
      <param name="PrintPageIndex">the 0-based index of the first page to print, it must be in Range [0, SheetRender.PageCount-1]</param>
      <param name="PrintPageCount">the number of pages to print, it must be greater than zero</param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.ToPrinter(System.String,System.String)">
      <summary>
            Render worksheet to Printer
            </summary>
      <param name="PrinterName">the name of the printer , for example: "Microsoft Office Document Image Writer"</param>
      <param name="DocumentName">set the print job name </param>
    </member>
    <member name="M:Aspose.Cells.Rendering.SheetRender.CustomPrint(System.Boolean,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
            Client can control page setting of printer when print each page using this function.
            </summary>
      <param name="nextPageAfterPrint">If true , printer will go to next page after print current page</param>
      <param name="printPageEventArgs">System.Drawing.Printing.PrintPageEventArgs</param>
      <returns>Indirect next page index,  based on zero</returns>
    </member>
    <member name="P:Aspose.Cells.Rendering.SheetRender.PageCount">
      <summary>
            Indicate the total page count of current worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.SheetRender.PageScale">
      <summary>
            Gets calculated page scale of the sheet.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FindOptions">
      <summary>
            Represents find options.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate the workbook object
            Workbook workbook = new Workbook("C:\\book1.xls");
            
            //Get Cells collection 
            Cells cells = workbook.Worksheets[0].Cells;
            
            //Instantiate FindOptions Object
            FindOptions findOptions = new FindOptions();
            
            //Create a Cells Area
            CellArea ca = new CellArea();
            ca.StartRow = 8;
            ca.StartColumn = 2;
            ca.EndRow = 17;
            ca.EndColumn = 13;
            
            //Set cells area for find options
            findOptions.SetRange(ca);
            
            //Set searching properties
            findOptions.SearchNext = true;
            
            findOptions.SeachOrderByRows = true;
            
            findOptions.LookInType = LookInType.Values;
            
            //Find the cell with 0 value
            Cell cell = cells.Find(0, null, findOptions);
            
            [VB.NET]
            
            'Instantiate the workbook object
            Dim workbook As New Workbook("C:\book1.xls")
            
            'Get Cells collection 
            Dim cells As Cells = workbook.Worksheets(0).Cells
            
            'Instantiate FindOptions Object
            Dim findOptions As New FindOptions()
            
            'Create a Cells Area
            Dim ca As New CellArea()
            ca.StartRow = 8
            ca.StartColumn = 2
            ca.EndRow = 17
            ca.EndColumn = 13
            
            'Set cells area for find options
            findOptions.SetRange(ca)
            
            'Set searching properties
            findOptions.SearchNext = True
            
            findOptions.SeachOrderByRows = True
            
            findOptions.LookInType = LookInType.Values
            
            'Find the cell with 0 value
            Dim cell As Cell = cells.Find(0, Nothing, findOptions)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.FindOptions.GetRange">
      <summary>
            Gets and sets the searched range.
            </summary>
      <returns>
            Returns the seached range.
            </returns>
    </member>
    <member name="M:Aspose.Cells.FindOptions.SetRange(Aspose.Cells.CellArea)">
      <summary>
            Sets the searched range.
            </summary>
      <param name="ca">the searched range.</param>
    </member>
    <member name="P:Aspose.Cells.FindOptions.IsCaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use FindOptions.CaseSensitive property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.FindOptions.CaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.LookAtType">
      <summary>
            Look at type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.IsRangeSet">
      <summary>
            Indicates whether the searched range is set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.SearchNext">
      <summary>
            Search order. True: search next. False: search previous.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.SeachOrderByRows">
      <summary>
            Indicates whether search order by rows or columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.LookInType">
      <summary>
            Look in type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.RegexKey">
      <summary>
            Indicates whether the searched key is regex. If true then the searched key will be taken as regex.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.Style">
      <summary>
            The format to search for.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.ConvertNumericData">
      <summary>
             Gets or sets a value that indicates whether converting the searched string value to numeric data.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Creating a file stream containing the Excel file to be opened
            FileStream fstream = new FileStream("C:\\book1.xls", FileMode.Open);
            //Instantiating a Workbook object and open a stream.
            Workbook workbook = new Workbook(fstream);
            //Accessing the first worksheet in the Excel file
            Worksheet worksheet = workbook.Worksheets[0];
            //Creating AutoFilter by giving the cells range of the heading row
            worksheet.AutoFilter.Range = "A1:B1";
            //Filtering columns with specified values
            worksheet.AutoFilter.Filter(1, "Bananas");
            //Saving the modified Excel file.
            workbook.Save("C:\\output.xls");
            //Closing the file stream to free all resources
            fstream.Close();
            
            [Visual Basic]
               
            'Creating a file stream containing the Excel file to be opened
            Dim fstream As FileStream = New FileStream("C:\\book1.xls", FileMode.Open)
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook(fstream)
            'Accessing the first worksheet in the Excel file
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            'Creating AutoFilter by giving the cells range of the heading row
            worksheet.AutoFilter.Range = "A1:B1"
            'Filtering columns with specified values
            Worksheet.AutoFilter.Filter(1, "Bananas")
            'Saving the modified Excel file 
            workbook.Save("C:\\output.xls")
            'Closing the file stream to free all resources
            fstream.Close()
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.SetRange(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the range to which the specified AutoFilter applies.
            </summary>
      <param name="row">Row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column Index.</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFilter(System.Int32,System.String)">
      <summary>
            Adds a filter for a filter column.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). 
            It only can be null or be one of the cells' value in this column.
            </param>
      <remarks>
            MS Excel 2007 supports multiple selection in a filter column.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddDateFilter(System.Int32,Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a date filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="dateTimeGroupingType">
        <see cref="T:Aspose.Cells.DateTimeGroupingType" />
      </param>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
      <param name="second">The second.</param>
      <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveDateFilter(System.Int32,Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Removes a date filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="dateTimeGroupingType">
        <see cref="T:Aspose.Cells.DateTimeGroupingType" />
      </param>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
      <param name="second">The second.</param>
      <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveFilter(System.Int32,System.String)">
      <summary>
            Removes a filter for a filter column.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). 
            It only can be null or be one of the cells' value in this column.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Filter(System.Int32,System.String)">
      <summary>
            Filters a list with specified criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). </param>
      <remarks>
            Aspose.Cells will remove all other filter setting on this field as Ms Excel 97-2003.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.FilterTop10(System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>
            Filter the top 10 item in the list
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="isTop">Indicates whether filter from top or bottom</param>
      <param name="isPercent">Indicates whether the items is percent or count </param>
      <param name="itemCount">The item count</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.DynamicFilter(System.Int32,Aspose.Cells.DynamicFilterType)">
      <summary>
            Adds a dynamic filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="dynamicFilterType">
            Dynamic filter type.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFontColorFilter(System.Int32,Aspose.Cells.CellsColor)">
      <summary>
            Adds a font color filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="color">The <see cref="T:Aspose.Cells.CellsColor" /> object.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFillColorFilter(System.Int32,Aspose.Cells.BackgroundType,Aspose.Cells.CellsColor,Aspose.Cells.CellsColor)">
      <summary>
            Adds a fill color filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="pattern">The background pattern type.</param>
      <param name="foregroundColor">The foreground color.</param>
      <param name="backgroundColor">The background color.</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddIconFilter(System.Int32,Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Adds an icon filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="iconSetType">The icon set type.</param>
      <param name="iconId">The icon id.</param>
      <remarks>
            Only supports to add the icon filter.
            Not supports checking which row is visible if the filter is icon filter.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.MatchBlanks(System.Int32)">
      <summary>
            Match all blank cell in the list.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.MatchNonBlanks(System.Int32)">
      <summary>
            Match all not blank cell in the list.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Custom(System.Int32,Aspose.Cells.FilterOperatorType,System.Object)">
      <summary>
            Filters a list with a custom criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="operatorType1">The filter operator type</param>
      <param name="criteria1">The custom criteria</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Custom(System.Int32,Aspose.Cells.FilterOperatorType,System.Object,System.Boolean,Aspose.Cells.FilterOperatorType,System.Object)">
      <summary>
            Filters a list with custom criterias.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="operatorType1">The filter operator type</param>
      <param name="criteria1">The custom criteria</param>
      <param name="isAnd">
      </param>
      <param name="operatorType2">The filter operator type</param>
      <param name="criteria2">The custom criteria</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.ShowAll">
      <summary>
            Unhide all rows.
            </summary>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveFilter(System.Int32)">
      <summary>
            Remove the specific filter.
            </summary>
      <param name="fieldIndex">The specific filter index</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Refresh">
      <summary>
            Refresh auto filters to hide or unhide the rows. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.Sorter">
      <summary>
            Gets the data sorter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.Range">
      <summary>
            Represents the range to which the specified AutoFilter applies.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.FilterColumns">
      <summary>
            Gets the collection of the filter columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.FilterColumnCollection">
      <summary>
             Gets the collection of the filter columns.
             </summary>
      <remarks>This member is now obsolete. Instead, 
             please use <see cref="P:Aspose.Cells.AutoFilter.FilterColumns" /> property.
             This property will be removed 12 months later since February 2014. 
             Aspose apologizes for any inconvenience you may have experienced.
             </remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.AutoShapeType">
      <summary>
            Represents all built-in auto shape type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NotPrimitive">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Rectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundedRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Oval">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Diamond">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.IsoscelesTriangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightTriangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Parallelogram">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Trapezoid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Hexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Octagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HomePlate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cube">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Balloon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Seal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Arc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Line">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Plaque">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Can">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Donut">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSimple">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextOctagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextHexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextOnCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.msosptTextOnRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.StraightConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ElbowConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Chevron">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RegularPentagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NoSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star32">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RectangularCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundedRectangularCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.OvalCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Wave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FoldedCorner">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Explosion1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Explosion2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LightningBolt">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Heart">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PictureFrame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.QuadArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpDownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.QuadArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Bevel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.StripedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NotchedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BlockArc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SmileyFace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.VerticalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HorizontalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UTurnArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedLeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CloudCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedDownRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedUpRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDecision">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartData">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPredefinedProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartInternalStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMultidocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartTerminator">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPreparation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartManualInput">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartManualOperation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartCard">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPunchedTape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSummingJunction">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOr">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartCollate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSort">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartExtract">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMerge">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOfflineStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartStoredData">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSequentialAccessStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMagneticDisk">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDirectAccessStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDisplay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDelay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextPlainText">
      <summary>
            A plain text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextStop">
      <summary>
            An octagonal text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextTriangle">
      <summary>
            A triangular text shape pointing upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextTriangleInverted">
      <summary>
            A triangular text shape pointing downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextChevron">
      <summary>
            A chevron text shape pointing upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextChevronInverted">
      <summary>
            A chevron text shape pointing downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRingInside">
      <summary>
            A circular text shape, as if reading an inscription on the inside of a ring.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRingOutside">
      <summary>
            A circular text shape, as if reading an inscription on the outside of a ring.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchUpCurve">
      <summary>
            An upward arching curved text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchDownCurve">
      <summary>
            A downward arching curved text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCircleCurve">
      <summary>
            A circular text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextButtonCurve">
      <summary>
            A text shape that resembles a button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchUpPour">
      <summary>
            An upward arching text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchDownPour">
      <summary>
            A downward arching text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCirclePour">
      <summary>
            A circular text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextButtonPour">
      <summary>
            A text shape that resembles a button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurveUp">
      <summary>
            An upward curving text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurveDown">
      <summary>
            A downward curving text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCascadeUp">
      <summary>
            A cascading text shape pointed upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCascadeDown">
      <summary>
            A cascading text shape pointed downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave1">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave2">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave3">
      <summary>
            A wavy text shape.
            </summary>
      <remarks>
            NOTE: This enum is now obsolete. Instead, please use AutoShape.TextDoubleWave1.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <!-- Badly formed XML comment ignored for member "F:Aspose.Cells.Drawing.AutoShapeType.TextWave4" -->
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDoubleWave1">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDoubleWave2">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflate">
      <summary>
            A text shape that expands vertically in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflate">
      <summary>
            A text shape that shrinks vertically in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflateBottom">
      <summary>
            A text shape that expands downward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateBottom">
      <summary>
            A text shape that shrinks upwards in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflateTop">
      <summary>
            A text shape that expands upward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateTop">
      <summary>
            A text shape that shrinks downward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateInflate">
      <summary>
            
            A text shape where lower lines expand upward. Upper lines shrink to compensate.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateInflateDeflate">
      <summary>
            A text shape where lines in the center expand vertically. Upper and lower lines shrink to compensate.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeRight">
      <summary>
            A text shape that shrinks vertically on the right side.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeLeft">
      <summary>
            A text shape that shrinks vertically on the left side.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeUp">
      <summary>
            A text shape that shrinks horizontally on top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeDown">
      <summary>
            A text shape that shrinks horizontally on bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSlantUp">
      <summary>
            An upward slanted text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSlantDown">
      <summary>
            A downward slanted text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCanUp">
      <summary>
            A text shape that is curved upwards as if being read on the side of a can.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCanDown">
      <summary>
            A text shape that is curved downwards as if being read on the side of a can.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartAlternateProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOffpageConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Sun">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Moon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleBracket">
      <summary>
            A shape enclosed in brackets.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleBrace">
      <summary>
            A shape enclosed in braces.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BlankActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HomeActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HelpActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.InformationActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ForwardNextActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BackPreviousActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.EndActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BeginningActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ReturnActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DocumentActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SoundActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MovieActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HostControl">
      <summary>
            This value SHOULD NOT be used.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Heptagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Decagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Dodecagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundSameSideCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundDiagonalCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipRoundSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipSameSideCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipDiagonalCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Teardrop">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Pie">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HalfFrame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.L_Shape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DiagonalStripe">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Chord">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cloud">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathPlus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathMinus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathMultiply">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathDivide">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathEqual">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathNotEqual">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineInv">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NonIsoscelesTrapezoid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PieWedge">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftCircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightCircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SwooshArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextNoShape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Gear6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Gear9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Funnel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CornerTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SquareTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PlaqueTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartX">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartStar">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartPlus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Frame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Unknown">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Axis">
      <summary>
            Encapsulates the object that represents a chart's axis.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Excel object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(4);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(20);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 25, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            //Set the max value of value axis
            chart.ValueAxis.MaxValue = 200;
            //Set the min value of value axis
            chart.ValueAxis.MinValue = 0;
            //Set the major unit
            chart.ValueAxis.MajorUnit = 25;
            //Category(X) axis crosses at the maxinum value.
            chart.ValueAxis.Crosses = CrossType.Maximum;
            //Set he number of categories or series between tick-mark labels. 
            chart.CategoryAxis.TickLabelSpacing = 2;
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Excel object
            Dim sheetIndex As Int32 = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(4)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(20)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a chart to the worksheet
            Dim chartIndex As Int32 = worksheet.Charts.Add(ChartType.Column, 5, 0, 25, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            'Set the max value of value axis
            chart.ValueAxis.MaxValue = 200
            'Set the min value of value axis
            chart.ValueAxis.MinValue = 0
            'Set the major unit
            chart.ValueAxis.MajorUnit = 25
            'Category(X) axis crosses at the maxinum value.
            chart.ValueAxis.Crosses = CrossType.Maximum
            'Set he number of categories or series between tick-mark labels. 
            chart.CategoryAxis.TickLabelSpacing = 2
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.Area">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.Axis.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsAutomaticMinValue">
      <summary>
            Indicates whether the min value is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MinValue">
      <summary>
            Represents the minimum value on the value axis.
            </summary>
      <remarks>
            The minValue type only can be double or DateTime
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsAutomaticMaxValue">
      <summary>
            Indicates whether the max value is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MaxValue">
      <summary>
            Represents the maximum value on the value axis.
            </summary>
      <remarks>
            The maxValue type only can be double or DateTime
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsAutomaticMajorUnit">
      <summary>
            Indicates whether the major unit of the axis is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MajorUnit">
      <summary>
            Represents the major units for the axis.
            </summary>
      <remarks> The major units must be greater than zero.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsAutomaticMinorUnit">
      <summary>
            Indicates whether the minor unit of the axis is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MinorUnit">
      <summary>
            Represents the minor units for the axis.
            </summary>
      <remarks> The minor units must be greater than zero.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.AxisLine">
      <summary>
            Gets the appearance of an Axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MajorTickMark">
      <summary>
            Represents the type of major tick mark for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MinorTickMark">
      <summary>
            Represents the type of minor tick mark for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.TickLabelPosition">
      <summary>
            Represents the position of tick-mark labels on the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.CrossAt">
      <summary>
            Represents the point on the value axis where the category axis crosses it.
            </summary>
      <remarks>The number should be a integer when it applies to category axis.
            And the value must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.Crosses">
      <summary>
            Represents the <see cref="P:Aspose.Cells.Charts.Axis.CrossType" /> on the specified axis where the other axis crosses. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Axis.CrossType property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.CrossType">
      <summary>
            Represents the <see cref="P:Aspose.Cells.Charts.Axis.CrossType" /> on the specified axis where the other axis crosses. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.LogBase">
      <summary>
            Represents the logarithmic base. Default value is 10.Only applies for Excel2007.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsLogarithmic">
      <summary>
            Represents if the value axis scale type is logarithmic or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsPlotOrderReversed">
      <summary>
            Represents if Microsoft Excel plots data points from last to first.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.AxisBetweenCategories">
      <summary>
            Represents if the value axis crosses the category axis between categories.
            </summary>
      <remarks>This property applies only to category axes, and it doesn't apply to 3-D charts.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.TickLabels">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.Axis.TickLabels" /> object that represents the tick-mark labels for the specified axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.TickLabelSpacing">
      <summary>
            Represents the number of categories or series between tick-mark labels. Applies only to category and series axes.
            </summary>
      <remarks>The number must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.TickMarkSpacing">
      <summary>
            Returns or sets the number of categories or series between tick marks. Applies only to category and series axes. 
            </summary>
      <remarks>The number must be between 1 and 31999.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.DisplayUnit">
      <summary>
            Represents the unit label for the specified axis. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.CustUnit">
      <summary>
            Specifies a custom value for the display unit.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.DisplayUnitLabel">
      <summary>
            Represents a unit label on an axis in the specified chart. 
            Unit labels are useful for charting large values¡ª for example, in the millions or billions. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsDisplayUnitLabelShown">
      <summary>
            Represents if the display unit label is shown on the specified axis. 
            </summary>
      <remarks>The default value is True.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.Title">
      <summary>
            Gets the axis' title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.CategoryType">
      <summary>
            Represents the category axis type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.BaseUnitScale">
      <summary>
            Represents the base unit scale for the category axis.
            </summary>
      <remarks>Setting this property only takes effect when the CategoryType property is set to TimeScale.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MajorUnitScale">
      <summary>
            Represents the major unit scale for the category axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale;
            chart.CategoryAxis.MajorUnitScale = TimeUnit.Months;
            chart.CategoryAxis.MajorUnit = 2;
            
            [Visual Basic]
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale
            chart.CategoryAxis.MajorUnitScale = TimeUnit.Months
            chart.CategoryAxis.MajorUnit = 2
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MinorUnitScale">
      <summary>
            Represents the major unit scale for the category axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale;
            chart.CategoryAxis.MinorUnitScale = TimeUnit.Months;
            chart.CategoryAxis.MinorUnit = 2;
            
            [Visual Basic]
            chart.CategoryAxis.CategoryType = CategoryType.TimeScale
            chart.CategoryAxis.MinorUnitScale = TimeUnit.Months
            chart.CategoryAxis.MinorUnit = 2
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.IsVisible">
      <summary>
            Represents if the axis is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MajorGridLines">
      <summary>
            Represents major gridlines on a chart axis.
            </summary>
      <example>
        <code>
            [C#]
            
            chart.ValueAxis.MajorGridLines.IsVisible = false;
            chart.CategoryAxis.MajorGridLines.IsVisible = true;
            
            [Visual Basic]
            chart.ValueAxis.MajorGridLines.IsVisible = false
            chart.CategoryAxis.MajorGridLines.IsVisible = true
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.MinorGridLines">
      <summary>
            Represents minor gridlines on a chart axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Axis.HasMultiLevelLabels">
      <summary>
            Indicates whether the labels shall be shown as multi level.
            </summary>
      <remarks>
            Only valid for category axis.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Charts.BackgroundMode">
      <summary>
            Represents the display mode of the background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Automatic">
      <summary>
            Automatic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Opaque">
      <summary>
            Opaque
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Transparent">
      <summary>
            Transparent
            </summary>
    </member>
    <member name="T:Aspose.Cells.BackgroundType">
      <summary>
            Enumerates cell background pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalCrosshatch">
      <summary>
            Represents diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalStripe">
      <summary>
            Represents diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray6">
      <summary>
            Represents 6.25% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray12">
      <summary>
            Represents 12.5% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.HorizontalStripe">
      <summary>
            Represents horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ReverseDiagonalStripe">
      <summary>
            Represents reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThickDiagonalCrosshatch">
      <summary>
            Represents thick diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalCrosshatch">
      <summary>
            Represents thin diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalStripe">
      <summary>
            Represents thin diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalCrosshatch">
      <summary>
            Represents thin horizontal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalStripe">
      <summary>
            Represents thin horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinReverseDiagonalStripe">
      <summary>
            Represents thin reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinVerticalStripe">
      <summary>
            Represents thin vertical stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.VerticalStripe">
      <summary>
            Represents vertical stripe pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Bar3DShapeType">
      <summary>
            Represents the shape used with the 3-D bar or column chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.Box">
      <summary>
            Box
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.PyramidToPoint">
      <summary>
            PyramidToPoint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.PyramidToMax">
      <summary>
            PyramidToMax
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.Cylinder">
      <summary>
            Cylinder
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.ConeToPoint">
      <summary>
            ConeToPoint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.ConeToMax">
      <summary>
            ConeToMax
            </summary>
    </member>
    <member name="T:Aspose.Cells.Border">
      <summary>
            Encapsulates the object that represents the cell border.
            </summary>
      <example>
        <code>
            [C#]
            
            int styleIndex = workbook.Styles.Add();
            Style style = workbook.Styles[styleIndex];
            //Set top border style and color
            Border border = style.Borders[BorderType.TopBorder];
            border.LineStyle = CellBorderType.Medium;
            border.Color = Color.Red;
            cell.SetStyle(style);
            
            [Visual Basic]
            
            Dim styleIndex as Integer = workbook.Styles.Add()
            Dim style as Style = workbook.Styles[styleIndex]
            'Set top border style and color
            Dim border as Border = style.Borders(BorderType.TopBorder)
            border.LineStyle = CellBorderType.Medium
            border.Color = Color.Red
            cell.SetStyle(style);
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Border.ThemeColor">
      <summary>
             Gets and sets the theme color of the border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.Color">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of the border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.ArgbColor">
      <summary>
            Gets and sets the color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.LineStyle">
      <summary>
            Gets or sets the cell border type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BorderCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Border" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             //Adding a new worksheet to the Excel object
             workbook.Worksheets.Add();
             
             //Obtaining the reference of the newly added worksheet by passing its sheet index
             Worksheet worksheet = workbook.Worksheets[0];
             
             //Accessing the "A1" cell from the worksheet
             Cell cell = worksheet.Cells["A1"];
             
             //Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!");
             
             Style style = cell.GetStyle();
             
             //Setting the line style of the top border
             style.Borders[BorderType.TopBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the top border
             style.Borders[BorderType.TopBorder].Color = Color.Black;
             
             //Setting the line style of the bottom border
             style.Borders[BorderType.BottomBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the bottom border
             style.Borders[BorderType.BottomBorder].Color = Color.Black;
             
             //Setting the line style of the left border
             style.Borders[BorderType.LeftBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the left border
             style.Borders[BorderType.LeftBorder].Color = Color.Black;
             
             //Setting the line style of the right border
             style.Borders[BorderType.RightBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the right border
             style.Borders[BorderType.RightBorder].Color = Color.Black;
             
             cell.SetStyle(style);
             
             //Saving the Excel file
             workbook.Save("C:\\book1.xls");
            
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             
             'Adding a new worksheet to the Workbook object
             workbook.Worksheets.Add()
             
             'Obtaining the reference of the newly added worksheet by passing its sheet index
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             
             'Accessing the "A1" cell from the worksheet
             Dim cell As Cell = worksheet.Cells("A1")
             
             'Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!")
             
             Dim style as Style = cell.GetStyle()
             
             'Setting the line style of the top border
             style.Borders(BorderType.TopBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the top border
             style.Borders(BorderType.TopBorder).Color = Color.Black
             
             'Setting the line style of the bottom border
             style.Borders(BorderType.BottomBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the bottom border
             style.Borders(BorderType.BottomBorder).Color = Color.Black
             
             'Setting the line style of the left border
             style.Borders(BorderType.LeftBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the left border
             style.Borders(BorderType.LeftBorder).Color = Color.Black
             
             'Setting the line style of the right border
             style.Borders(BorderType.RightBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the right border
             style.Borders(BorderType.RightBorder).Color = Color.Black
             
             cell.SetStyle(style)
             
             'Saving the Excel file
             workbook.Save("C:\book1.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.BorderCollection.SetColor(System.Drawing.Color)">
      <summary>
            Sets the <see cref="T:System.Drawing.Color" /> of all borders in the collection.
            </summary>
      <param name="color">Borders' <see cref="T:System.Drawing.Color" />.</param>
    </member>
    <member name="M:Aspose.Cells.BorderCollection.SetStyle(Aspose.Cells.CellBorderType)">
      <summary>
            Sets the style of all borders of the collection.
            </summary>
      <param name="style">Borders' style</param>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.Item(Aspose.Cells.BorderType)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Border" /> element at the specified index.
             </summary>
      <param name="borderType">The border to be retrieved.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.DiagonalColor">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color" /> of Diagonal lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.DiagonalStyle">
      <summary>
            Gets or sets the style of Diagonal lines.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BorderType">
      <summary>
            Enumerates the border line and diagonal line types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.BottomBorder">
      <summary>
            Represents bottom border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalDown">
      <summary>
            Represents the diagonal line from top left to right bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalUp">
      <summary>
            Represents the diagonal line from bottom left to right top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.LeftBorder">
      <summary>
            Represents left border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.RightBorder">
      <summary>
            Represents right border line exists.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.TopBorder">
      <summary>
            Represents top border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.Horizontal">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.Vertical">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.BubbleSizeRepresents">
      <summary>
            Represents what the bubble size represents on a bubble chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BubbleSizeRepresents.SizeIsArea">
      <summary>
            Represents the value of <see cref="P:Aspose.Cells.Charts.Series.BubbleSizes" /> is area of the bubble.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BubbleSizeRepresents.SizeIsWidth">
      <summary>
            Represents the value of <see cref="P:Aspose.Cells.Charts.Series.BubbleSizes" /> is width of the bubble.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Button">
      <summary>
             Represents the Forms control: Button
             </summary>
      <example>
        <code>
            [C#]
             
             //Create a new Workbook.
             Workbook workbook = new Workbook();
             
             //Get the first worksheet in the workbook.
             Worksheet sheet = workbook.Worksheets[0];
             
             //Add a new button to the worksheet.
             Aspose.Cells.Button button = sheet.Shapes.AddButton(2, 0, 2, 0, 28, 80);
             
             //Set the caption of the button.
             button.Text = "Aspose";
             
             //Set the Placement Type, the way the
             //button is attached to the cells.
             button.Placement = PlacementType.FreeFloating;
             
             //Set the font name.
             button.Font.Name = "Tahoma";
             
             //Set the caption string bold.
             button.Font.IsBold = true;
             
             //Set the color to blue.
             button.Font.Color = Color.Blue;
             
             //Set the hyperlink for the button.
             button.AddHyperlink("http://www.aspose.com/");
             
             //Saves the file.
             workbook.Save(@"d:\test\tstbutton.xls");
            
             [VB.NET]
             
             'Create a new Workbook.
             Dim workbook As Workbook = New Workbook()
             
             'Get the first worksheet in the workbook.
             Dim sheet As Worksheet = workbook.Worksheets(0)
             
             'Add a new button to the worksheet.
             Dim button As Aspose.Cells.Button = sheet.Shapes.AddButton(2, 0, 2, 0, 28, 80)
             
             'Set the caption of the button.
             button.Text = "Aspose"
             
             'Set the Placement Type, the way the
             'button is attached to the cells.
             button.Placement = PlacementType.FreeFloating
             
             'Set the font name.
             button.Font.Name = "Tahoma"
             
             'Set the caption string bold.
             button.Font.IsBold = True
             
             'Set the color to blue.
             button.Font.Color = Color.Blue
             
             'Set the hyperlink for the button.
             button.AddHyperlink("http://www.aspose.com/")
             
             'Saves the file.
             workbook.Save("d:\test\tstbutton.xls")
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.CalcModeType">
      <summary>
            Represents the mode type fo calculating formulas.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.Automatic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.AutomaticExceptTable">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.Manual">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.CellArea">
      <summary>
            Represent an area of cells.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Create Cell Area
            CellArea ca = new CellArea();
            ca.StartRow = 0;
            ca.EndRow = 0;
            ca.StartColumn = 0;
            ca.EndColumn = 0;
            
            [VB.NET]
            
            'Create Cell Area
            Dim ca As CellArea = New CellArea()
            ca.StartRow = 0
            ca.EndRow = 0
            ca.StartColumn = 0
            ca.EndColumn = 0
            
            </code>
      </example>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartRow">
      <summary>
            Gets or set the start row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndRow">
      <summary>
            Gets or set the end row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartColumn">
      <summary>
            Gets or set the start column of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndColumn">
      <summary>
            Gets or set the end column of this area.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellArea.CompareTo(System.Object)">
      <summary>
            Internal use only.
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.ToString">
      <summary>
            Returns a string represents the current Worksheet object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.CreateCellArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creat a cell area.
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column.</param>
      <param name="endRow">The end row.</param>
      <param name="endColumn">The end column.</param>
      <returns>Return a <see cref="T:Aspose.Cells.CellArea" />.</returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.CreateCellArea(System.String,System.String)">
      <summary>
            Creat a cell area.
            </summary>
      <param name="startCellName">The top-left cell of the range.</param>
      <param name="endCellName">The bottom-right cell of the range.</param>
      <returns>Return a <see cref="T:Aspose.Cells.CellArea" />.</returns>
    </member>
    <member name="T:Aspose.Cells.CellBorderType">
      <summary>
            Enumerates a cell's border type. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDot">
      <summary>
            Represents thin dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDotDot">
      <summary>
            Represents thin dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dashed">
      <summary>
            Represents dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dotted">
      <summary>
            Represents dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Double">
      <summary>
            Represents double line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Hair">
      <summary>
            Represents hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDot">
      <summary>
            Represents medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDotDot">
      <summary>
            Represents medium dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashed">
      <summary>
            Represents medium dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.None">
      <summary>
            Represents no line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Medium">
      <summary>
            Represents medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.SlantedDashDot">
      <summary>
            Represents slanted medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thick">
      <summary>
            Represents thick line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thin">
      <summary>
            Represents thin line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Cells">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Cell" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook excel = new Workbook();
            	Cells cells = excel.Worksheets[0].Cells;
            	
            	//Set default row height
            	cells.StandardHeight = 20;
            	//Set row height
            	cells.SetRowHeight(2, 20.5);
            	
            	//Set default colum width
            	cells.StandardWidth = 15;
            	//Set column width
            	cells.SetColumnWidth(3, 12.57);
            	
            	//Merge cells
            	cells.Merge(5, 4, 2, 2);
            	
            	//Import data
            	DataTable dt = new DataTable("Products");
             dt.Columns.Add("Product_ID",typeof(Int32));
             dt.Columns.Add("Product_Name",typeof(string));
             dt.Columns.Add("Units_In_Stock",typeof(Int32));
             DataRow dr = dt.NewRow();
             dr[0] = 1;
             dr[1] = "Aniseed Syrup";
             dr[2] = 15;
             dt.Rows.Add(dr);
             dr = dt.NewRow();
             dr[0] = 2;
             dr[1] = "Boston Crab Meat";
             dr[2] = 123;
             dt.Rows.Add(dr);
             cells.ImportDataTable(dt, true, 12, 12, 10, 10);
             
             //Export data
             DataTable outDataTable = cells.ExportDataTable(12, 12, 10, 10);
            
             [Visual Basic]
             
             Dim excel as Workbook = new Workbook()
            	Dim cells as Cells = excel.Worksheets(0).Cells
            	
            	'Set default row height
            	cells.StandardHeight = 20
            	'Set row height
            	cells.SetRowHeight(2, 20.5)
            	
            	'Set default colum width
            	cells.StandardWidth = 15
            	'Set column width
            	cells.SetColumnWidth(3, 12.57)
            	
            	'Merge cells
            	cells.Merge(5, 4, 2, 2)
            	
            	'Import data
            	Dim dt as DataTable = new DataTable("Employee")
            	dt.Columns.Add("Employee_ID",typeof(Int32))
             dt.Columns.Add("Employee_Name",typeof(string))
             dt.Columns.Add("Gender",typeof(string))
             Dim dr as DataRow = dt.NewRow()
             dr(0) = 1
             dr(1) = "John Smith"
             dr(2) = "Male"
             dt.Rows.Add(dr)
             dr = dt.NewRow()
             dr(0) = 2
             dr(1) = "Mary Miller"
             dr(2) = "Female"
             dt.Rows.Add(dr)
             cells.ImportDataTable(dt, true, 12, 12, 10, 10)
             
             'Export data
             Dim outDataTable as DataTable = cells.ExportDataTable(12, 12, 10, 10)
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cells.GetEnumerator">
      <summary>
            Gets the cells enumerator.
            </summary>
      <remarks>When traversing elements by the returned Enumerator, the cells collection
            should not be modified(such as operations that will cause new Cell/Row be instantiated or existing Cell/Row be deleted).
            Otherwise the enumerator may not be able to traverse all cells correctly(some elements may be traversed repeatedly or skipped).</remarks>
      <returns>The cells enumertor</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enuerator.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element or null at the specified cell row index and column index.
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return Cell object if a Cell object exists.
            Return null if the cell does not exist.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRow(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Row" /> element at the specified cell row index.
            </summary>
      <param name="row">Row index</param>
      <returns>
            If the row object does exist return Row object,otherwise return null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element or null at the specified cell row index and column index.
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return Cell object if a Cell object exists.
            Return null if the cell does not exist.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckRow(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Row" /> element or at the specified cell row index.
            </summary>
      <param name="row">Row index</param>
      <returns>
            If the row object does exist return Row object,otherwise return null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckColumn(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Column" /> element or null at the specified column index.
            </summary>
      <param name="columnIndex">The column index.</param>
      <returns>The Column object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.IsRowHidden(System.Int32)">
      <summary>
            Checks whether a row at given index is hidden.
            </summary>
      <param name="rowIndex">row index</param>
      <returns>true if the row is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.IsColumnHidden(System.Int32)">
      <summary>
            Checks whether a column at given index is hidden.
            </summary>
      <param name="columnIndex">column index</param>
      <returns>true if the column is hidden.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.AddRange(Aspose.Cells.Range)">
      <summary>
            Adds a range object reference to cells
            </summary>
      <param name="rangeObject">The range object will be contained in the cells</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.String,System.String)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="upperLeftCell">Upper left cell name.</param>
      <param name="lowerRightCell">Lower right cell name.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="firstRow">First row of this range</param>
      <param name="firstColumn">First column of this range</param>
      <param name="totalRows">Number of rows</param>
      <param name="totalColumns">Number of columns</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.String)">
      <summary>
             Creates a <see cref="T:Aspose.Cells.Range" /> object from an address of the range.
            </summary>
      <param name="address">The address of the range.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from rows of cells or columns of cells.
            </summary>
      <param name="firstIndex">First row index or first column index, zero based.</param>
      <param name="number">Total number of rows or columns, one based.</param>
      <param name="isVertical">True - Range created from columns of cells. False - Range created from rows of cells. </param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.Clear">
      <summary>
            Clear all cell objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Object[])">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported.</param>
      <param name="totalColumns">Number of columns to be exported.</param>
      <param name="defaultValues">Default values for each data column.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>
            If you use this method to export a block of data, please be sure that the data in a column 
            should be the same data type. And the type of data column will be same as the default value.
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(DataTable,firstRow,firstColumn, totalRows, totalColumns) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <example>
        <code>
            [C#]
            
            
            string designerFile = MapPath("Designer") + "\\List.xls";
            Workbook excel = new Workbook(designerFile);
            Worksheet sheet = excel.Worksheets[0];
            DataTable dt = sheet.Cells.ExportDataTable(6, 1, 69, 4);
            this.DataGrid1.DataSource = dt;
            this.DataGrid1.DataBind();
            
            [Visual Basic]
            
            
            Dim designerFile As String = MapPath("Designer") + "\List.xls"
            Dim excel As excel = New excel(designerFile)
            Dim sheet As Worksheet = excel.Worksheets(0)
            Dim dt As DataTable = sheet.Cells.ExportDataTable(6, 1, 69, 4)
            Me.DataGrid1.DataSource = dt
            Me.DataGrid1.DataBind()
            </code>
      </example>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>
            If you use this method to export a block of data, please be sure that the data in a column 
            should be the same data type. Otherwise, use the <see cref="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32)" /> method instead.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported.</param>
      <param name="totalColumns">Number of columns to be exported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <param name="isVertical">True if a row in Workbook file represents a row in DataTable. False if a column in Workbook file represents a row in DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(firstRow,firstColumn, totalRows, totalColumns,ExportTableOptions) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="dataTable">Data table</param>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(firstRow,firstColumn, totalRows, totalColumns,ExportTableOptions) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Data.DataTable,System.Int32,System.Int32[],System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="dataTable">Data table</param>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="columnIndexes">The indexes of columns which to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(firstRow,firstColumn, totalRows, totalColumns,ExportTableOptions) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="dataTable">Data table</param>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <param name="skipErrorValue">Indicates whether skip invalid value for the column.
            For example,if the column type is decimal ,the value is greater than decimal.MaxValue 
            and this property is true,we will not throw exception again. </param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(firstRow,firstColumn, totalRows, totalColumns,ExportTableOptions) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Data.DataTable,System.Int32,System.Int32[],System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="dataTable">Data table</param>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="columnIndexes">The indexes of columns which to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <param name="skipErrorValue">Indicates whether skip invalid value for the column.
            For example,if the column type is decimal ,the value is greater than decimal.MaxValue 
            and this property is true,we will not throw exception again. </param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ExportDataTable(firstRow,firstColumn, totalRows, totalColumns,ExportTableOptions) method.
            This property will be removed 12 months later since August 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTableAsString(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.ExportTableOptions)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="options">All export table ooptions</param>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportData(Aspose.Cells.ICellsDataTable,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Import data from custom data table.
            </summary>
      <param name="table">The custom data table.</param>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="options">The import options</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportData(System.Data.DataTable,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Import data from custom data table.
            </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="options">The import options</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportData(System.Data.DataView,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Import data from data view.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="options">The import options</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.Import(System.Data.IDataReader,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Import data from data view.
            </summary>
      <param name="dataReader">The <see cref="T:System.Data.IDataReader" /> object to be imported.</param>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="options">The import options</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="startCell">The name of start cell to insert the DataTable, such as "A2".</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> object into a worksheet.		
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            DataTable dt = new DataTable("Employee");
            dt.Columns.Add("Employee_ID",typeof(Int32));
            dt.Columns.Add("Employee_Name",typeof(string));
            dt.Columns.Add("Gender",typeof(string));
            DataRow dr = dt.NewRow();
            dr[0] = 1;
            dr[1] = "John Smith";
            dr[2] = "Male";
            dt.Rows.Add(dr);
            dr = dt.NewRow();
            dr[0] = 2;
            dr[1] = "Mary Miller";
            dr[2] = "Female";
            dt.Rows.Add(dr);
            cells.ImportDataTable(dt, true, 12, 12, 10, 10);
            
            [Visual Basic]
            
            Dim dt As DataTable =  New DataTable("Employee") 
            dt.Columns.Add("Employee_ID",Type.GetType(Int32))
            dt.Columns.Add("Employee_Name",Type.GetType(String))
            dt.Columns.Add("Gender",Type.GetType(String))
            Dim dr As DataRow =  dt.NewRow() 
            dr(0) = 1
            dr(1) = "John Smith"
            dr(2) = "Male"
            dt.Rows.Add(dr)
            dr = dt.NewRow()
            dr(0) = 2
            dr(1) = "Mary Miller"
            dr(2) = "Female"
            dt.Rows.Add(dr)
            cells.ImportDataTable(dt, True, 12, 12, 10, 10)
            </code>
      </example>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.SqlClient.SqlDataReader,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportDataReader(SqlDataReader,int,int,bool) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.SqlClient.SqlDataReader,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.SqlClient.SqlDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportDataReader(SqlDataReader,bool,int,int,bool) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.SqlClient.SqlDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.SqlClient.SqlDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
             Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
             </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
             Indicates whether the field name of the data reader will be imported to the first row.
             </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
             please use Cells.ImportDataReader(SqlDataReader, bool,int,int,bool,string,bool) method. 
             This property will be removed 12 months later since June 2010. 
             Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.SqlClient.SqlDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
             Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
             </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
             Indicates whether the field name of the data reader will be imported to the first row.
             </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.OleDb.OleDbDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportDataReader(OleDbDataReader, bool,int,int,bool,string,bool) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.OleDb.OleDbDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.OleDb.OleDbDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportDataReader(OleDbDataReader, bool,int,int,bool) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.OleDb.OleDbDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data reader will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFromDataReader(System.Data.OleDb.OleDbDataReader,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportDataReader(OleDbDataReader,int,int,bool) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.OleDb.OleDbDataReader,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports data from a <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.
            </summary>
      <param name="reader">The <see cref="T:System.Data.OleDb.OleDbDataReader" /> object which contains data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataReader(System.Data.IDataReader,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
             Imports data from a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.
             </summary>
      <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> object which contains data.</param>
      <param name="isFieldNameShown">
             Indicates whether the field name of the data reader will be imported to the first row.
             </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportData(DataView,int,int,ImportTableOptions) method.
            This property will be removed 12 months later since FEBRUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnName">The name of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportData(DataTable,int,int,ImportTableOptions) method.
            This property will be removed 12 months later since FEBRUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportData(DataTable,int,int,ImportTableOptions) method.
            This property will be removed 12 months later since FEBRUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataColumn(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.Object)">
      <summary>
            Imports a column of a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="importColumnIndex">The index of the imported DataColumn in a <see cref="T:System.Data.DataTable" />.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="defaultValue">Default value for this data column.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportData(DataTable,int,int,ImportTableOptions) method.
            This property will be removed 12 months later since FEBRUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="columnNumber">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>This method automatically format date time values. 
            However, if the DateTable is very huge, this method may slow down the program.
            In this case, you'd better format the cell manually.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="columnNumber">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>This method automatically format date time values. 
            However, if the DateTable is very huge, this method may slow down the program.
            In this case, you'd better format the cell manually.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataRow(System.Data.DataRow,System.Int32,System.Int32)">
      <summary>
            Imports a DataRow into the Excel file.
            </summary>
      <param name="dataRow">DataRow object.</param>
      <param name="row">Row index.</param>
      <param name="firstColumn">First column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataTable" /> into a worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the datatable will be imported to the first row.
            Default is true.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="columnNumber">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Object[0:,0:],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="styles">Two-dimension data style.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Object[0:,0:],System.Int32,System.Int32,Aspose.Cells.TxtLoadOptions)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="styles">Two-dimension data style.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="opts">Options for converting string values</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArrayList(System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an arraylist of data into a worksheet.
            </summary>
      <param name="arrayList">Data arraylist.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
      <param name="skip">Skipped number of rows or columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of string into a worksheet.
            </summary>
      <param name="stringArray">Two-dimension string array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFormulaArray(System.String[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of formula into a worksheet.
            </summary>
      <param name="stringArray">Formula array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of string into a worksheet.
            </summary>
      <param name="stringArray">String array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of integer into a worksheet.
            </summary>
      <param name="intArray">Two-dimension integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of integer into a worksheet.
            </summary>
      <param name="intArray">Integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of double into a worksheet.
            </summary>
      <param name="doubleArray">Two-dimension double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of double into a worksheet.
            </summary>
      <param name="doubleArray">Double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="fileName">The CSV file name.</param>
      <param name="spliter">The spliter</param>
      <param name="convertNumericData"> Whether the string in text file is converted to numeric data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.IO.Stream,System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="stream">The CSV file stream.</param>
      <param name="spliter">The spliter</param>
      <param name="convertNumericData"> Whether the string in text file is converted to numeric data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.String,Aspose.Cells.TxtLoadOptions,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="fileName">The CSV file name.</param>
      <param name="options">The load options for reading text file</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.IO.Stream,Aspose.Cells.TxtLoadOptions,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="stream">The CSV file stream.</param>
      <param name="options">The load options for reading text file</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <param name="mergeConflict">Merge conflict merged ranges.</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            If mergeConflict is true and the merged range conflicts with other merged cells,
            other merged cells will be  automatically removed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <param name="checkConflict">Indicates whether check the merged cells intersects other merged cells</param>
      <param name="mergeConflict">Merge conflict merged ranges.</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            If mergeConflict is true and the merged range conflicts with other merged cells,
            other merged cells will be  automatically removed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unmerges a specified range of merged cells. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideRow(System.Int32)">
      <summary>
            Hides a row.
            </summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideRow(System.Int32,System.Double)">
      <summary>
            Unhides a row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Row height. The row's height will be changed only when the row is hidden and given height value is positive.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideRows(System.Int32,System.Int32)">
      <summary>
            Hides multiple rows.
            </summary>
      <param name="row">The row index.</param>
      <param name="totalRows">The row number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideRows(System.Int32,System.Int32,System.Double)">
      <summary>
            Unhides the hidden rows.
            </summary>
      <param name="row">The row index.</param>
      <param name="totalRows">The row number.</param>
      <param name="height">Row height. The row's height will be changed only when the row is hidden and given height value is positive.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeightPixel(System.Int32,System.Int32)">
      <summary>
            Sets row height in unit of pixels.
            </summary>
      <param name="row">Row index.</param>
      <param name="pixels">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeightInch(System.Int32,System.Double)">
      <summary>
            Sets row height in unit of inches.
            </summary>
      <param name="row">Row index.</param>
      <param name="inches">Number of inches.It should be between 0 and 409.5/72.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeight(System.Int32,System.Double)">
      <summary>
            Sets the height of the specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Height of row.In unit of point It should be between 0 and 409.5.</param>
      <remarks>To hide a row, sets row height to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of a specified row.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.HideColumn(System.Int32)">
      <summary>
            Hides a column.
            </summary>
      <param name="column">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideColumn(System.Int32,System.Double)">
      <summary>
            Unhides a column
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Column width.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideColumns(System.Int32,System.Int32)">
      <summary>
            Hide mutiple columns.
            </summary>
      <param name="column">Column index.</param>
      <param name="totalColumns">Column number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideColumns(System.Int32,System.Int32,System.Double)">
      <summary>
            Unhide mutiple columns.
            </summary>
      <param name="column">Column index.</param>
      <param name="totlaColumns">Column number</param>
      <param name="width">Column width.</param>
      <remarks>
            Only applies the column width to the hidden columns.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeightPixel(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of pixel.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeightInch(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of inches.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidthPixel(System.Int32,System.Int32)">
      <summary>
            Sets column width in unit of pixels.
            </summary>
      <param name="column">Column index.</param>
      <param name="pixel">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidthInch(System.Int32,System.Double)">
      <summary>
            Sets column width in unit of inches.
            </summary>
      <param name="column">Column index.</param>
      <param name="inches">Number of inches.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidth(System.Int32,System.Double)">
      <summary>
            Sets the width of the specified column.
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Width of column.Column width must be between 0 and 255.</param>
      <remarks>To hide a column, sets column width to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetViewColumnWidthPixel(System.Int32)">
      <summary>
            Get the width in different view type.
            </summary>
      <param name="column">The column index.</param>
      <returns>the column width in unit of pixels</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidthPixel(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of pixel.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column in normal view.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidthInch(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of inches.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the specified column
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.MaxDataRowInColumn(System.Int32)">
      <summary>
            Gets the maximum row index of cell which contains data in the specified column.
            </summary>
      <param name="column">Column index.</param>
      <returns>Maximum row index.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.GetLastDataRow(int) method. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetLastDataRow(System.Int32)">
      <summary>
            Gets the last row index of cell which contains data in the specified column.
            </summary>
      <param name="column">Column index.</param>
      <returns>last row index.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyColumnStyle(System.Int32,Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole column.
            </summary>
      <param name="column">The column index.</param>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyRowStyle(System.Int32,Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole row.
            </summary>
      <param name="row">The row index.</param>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole worksheet.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumn(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumns(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
      <param name="columnNumber">The copied column number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumns(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of the whole columns.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="sourceTotalColumns">The number of the source columns.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
      <param name="destinationTotalColumns">The number of the destination columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRow(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole row.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRows(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of some whole rows.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
      <param name="rowNumber">The copied row number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GetGroupedRowOutlineLevel(System.Int32)">
      <summary>
            Gets the outline level(zero-based) of the row.
            </summary>
      <param name="rowIndex">The row index.</param>
      <returns>The outline level(zero-based) of the row.</returns>
      <remarks>If the row is not grouped, returns zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetGroupedColumnOutlineLevel(System.Int32)">
      <summary>
            Gets the outline level(zero-based) of the column.
            </summary>
      <param name="columnIndex">The column index</param>
      <returns>The outline level of the column</returns>
      <remarks>If the column is not grouped, returns zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetMaxGroupedColumnOutlineLevel">
      <summary>
            Gets the max grouped column outline level(zero-based).
            </summary>
      <returns> The max grouped column outline level(zero-based)</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetMaxGroupedRowOutlineLevel">
      <summary>
            Gets the max grouped row outline level(zero-based).
            </summary>
      <returns> The max grouped row outline level(zero-based)</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ShowGroupDetail(System.Boolean,System.Int32)">
      <summary>
            Uncollapses the grouped rows/columns. 
            </summary>
      <param name="isVertical">True, uncollapse the grouped rows.</param>
      <param name="index">The row/column index</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideGroupDetail(System.Boolean,System.Int32)">
      <summary>
            Collapses the grouped rows/columns. 
            </summary>
      <param name="isVertical">True, collapse the grouped rows.</param>
      <param name="index">The row/column index</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupColumns(System.Int32,System.Int32)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstIndex">The first column index to be ungrouped.</param>
      <param name="lastIndex">The last column index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Int32,System.Int32)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
      <param name="isAll">True, removes all grouped info.Otherwise, remove the outter group info.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
      <remarks>
            Only removes outter group info.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32,System.Boolean)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes several columns.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">Number of columns to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.IsDeletingRangeEnabled(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Check whether the range could be deleted.
            </summary>
      <param name="startRow">The start row index of the range.</param>
      <param name="startColumn">The start column idnex of the range.</param>
      <param name="totalRows">The number of the rows in the range.</param>
      <param name="totalColumns">The number of the columns in the range.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes several rows.
            </summary>
      <param name="rowIndex">The first row index to be deleted.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <remarks>
            If the deleted range contains the top part(not whole) of the table(ListObject),
            the ranged could not be deleted and nothing will be done.It works as MS Excel.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRow(System.Int32)">
      <summary>
            Deletes a row.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes multiple rows in the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankColumns">
      <summary>
            Delete all blank columns which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankColumns(Aspose.Cells.DeleteOptions)">
      <summary>
            Delete all blank columns which do not contain any data.
            </summary>
      <param name="options">The options of deleting range.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.IsBlankColumn(System.Int32)">
      <summary>
            Checks whether given column is blank(does not contain any data).
            </summary>
      <param name="columnIndex">the column index</param>
      <returns>true if given column does not contain any data</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankRows">
      <summary>
            Delete all blank rows which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankRows(Aspose.Cells.DeleteOptions)">
      <summary>
            Delete all blank rows which do not contain any data.
            </summary>
      <param name="options">The options of deleting range.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32,System.Boolean)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRow(System.Int32)">
      <summary>
            Inserts a new row into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearRange(Aspose.Cells.CellArea)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearContents(Aspose.Cells.CellArea)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearContents(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearFormats(Aspose.Cells.CellArea)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearFormats(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="columnNumber">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="numberFormatString">Number format string for cells.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataView(System.Data.DataView,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Data.DataView" /> into a worksheet.
            </summary>
      <param name="dataView">The <see cref="T:System.Data.DataView" /> object to be imported.</param>
      <param name="isFieldNameShown">
            Indicates whether the field name of the data view will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGridAsString(System.Web.UI.WebControls.DataGrid,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet. This method doesn't try to convert text into numeric values.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportGridView(System.Web.UI.WebControls.GridView,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Imports a grid view to this cells.
            </summary>
      <param name="gridView">The grid view object.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="convertStringToNumber">Indicates whether convert string value to number.</param>
      <param name="convertStyle">Indicates whether apply the style of the grid view to cells.</param>
      <returns>The row number.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.ImportGridView(System.Web.UI.WebControls.GridView gridView,int firstRow,int firstColumn,ImportTableOptions options) method.
            This property will be removed 12 months later since December 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportGridView(System.Web.UI.WebControls.GridView,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Imports a grid view to this cells.
            </summary>
      <param name="gridView">The grid view object.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="options">import options.</param>
      <returns>The row number.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGrid(System.Web.UI.WebControls.DataGrid,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGrid(System.Web.UI.WebControls.DataGrid,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportDataGrid(System.Web.UI.WebControls.DataGrid,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Imports a <see cref="T:System.Web.UI.WebControls.DataGrid" /> into a worksheet.
            </summary>
      <param name="dataGrid">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> object to be imported.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="totalRows">Number of rows to be imported.</param>
      <param name="totalColumns">Number of columns to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="importStyle">Indicates whether importing the cell style.</param>
      <returns>Total number of rows imported</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormula(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormulaContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with formla which contains the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea,System.Boolean)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="area">Searched area.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.FindOptions)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="findOptions">Sets the find options.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringStartsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell starting with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringEndsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell ending with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if seaching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Int32,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input integer.
            </summary>
      <param name="inputNumber">The integer to search for.</param>
      <param name="previousCell">Previous cell with the same integer. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Double,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input double.
            </summary>
      <param name="inputNumber">The double to search for.</param>
      <param name="previousCell">Previous cell with the same double. This parameter can be set to null if seaching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Find(System.Object,Aspose.Cells.Cell,Aspose.Cells.FindOptions)">
      <summary>
            Finds the cell containing with the input object.
            </summary>
      <param name="what">The object to search for.
            The type should be int,double,DateTime,string,bool.
            </param>
      <param name="previousCell">Previous cell with the same object. 
            This parameter can be set to null if seaching from the start.</param>
      <param name="findOptions">Find options</param>
      <returns>Cell object.</returns>
      <remarks>Returns null(Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32)">
      <summary>
            Gets the last cell in this row.
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Int16)">
      <summary>
            Gets the last cell in this column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Int32,System.Int32,System.Int16,System.Int16)">
      <summary>
            Gets the last cell with maximum column index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the last cell with maximum row index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.MoveRange(Aspose.Cells.CellArea,System.Int32,System.Int32)">
      <summary>
            Moves the range to dest postion.
            </summary>
      <param name="sourceArea">The range which should be moved.</param>
      <param name="destRow">The dest row.</param>
      <param name="destColumn">The dest column.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType,System.Boolean)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRange(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.ShiftType)">
      <summary>
            Deletes a range of cells and shift cells according to the shift option.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a two-dimension array object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported</param>
      <param name="totalColumns">Number of columns to be exported</param>
      <returns>Exported cell value array object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportTypeArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports cell value type in the <see cref="T:Aspose.Cells.Cells" /> collection to a two-dimension array object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported.</param>
      <param name="totalColumns">Number of columns to be exported.</param>
      <returns>Exported CellValuetype array object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCustomObjects(System.Collections.ICollection,System.String[],System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports custom objects.
            </summary>
      <param name="list">The custom object</param>
      <param name="propertyNames">The property names.If it is null,we will import all properties of the object.</param>
      <param name="isPropertyNameShown">
            Indicates whether the property name will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>The custom objects should be the same type.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCustomObjects(System.Collections.ICollection,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Imports custom objects.
            </summary>
      <param name="list">The custom object</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="options"> The import options.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>The custom objects should be the same type.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Subtotal(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ConsolidationFunction,System.Int32[])">
      <summary>
            Creates subtotals for the range.
            </summary>
      <param name="ca">The range</param>
      <param name="groupBy">The field to group by, as a zero-based integer offset</param>
      <param name="function">The subtotal function.</param>
      <param name="totalList">An array of zero-based field offsets, indicating the fields to which the subtotals are added.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.Subtotal(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ConsolidationFunction,System.Int32[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates subtotals for the range.
            </summary>
      <param name="ca">The range</param>
      <param name="groupBy">The field to group by, as a zero-based integer offset</param>
      <param name="function">The subtotal function.</param>
      <param name="totalList">An array of zero-based field offsets, indicating the fields to which the subtotals are added.</param>
      <param name="replace">Indicates whether replace the current subtotals</param>
      <param name="pageBreaks">Indicates whether add page break between groups</param>
      <param name="summaryBelowData">Indicates whether add summarry below data.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.RemoveFormulas">
      <summary>
            Removes all formula and replaces with the value of the formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.RemoveDuplicates(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove duplicate values in the range.
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column</param>
      <param name="endRow">The end row index.</param>
      <param name="endColumn">The end column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ConvertStringToNumericValue">
      <summary>
            Converts string data in cells to numeric value if possible.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.GetDependents(System.Boolean,System.Int32,System.Int32)">
      <summary>
            Get all cells which refer to the specific cell.
            </summary>
      <param name="isAll">Indicates whether check other worksheets</param>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetCellStyle(System.Int32,System.Int32)">
      <summary>
            Get the style of given cell.
            </summary>
      <param name="row">row index</param>
      <param name="column">column</param>
      <returns>the style of given cell.</returns>
    </member>
    <member name="P:Aspose.Cells.Cells.Count">
      <summary>
            Gets the number of cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Rows">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Row" /> objects that represents the individual rows in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MergedCells">
      <summary>
            Gets the collection of merged cells.
            </summary>
      <remarks>In this collection, each item is a <see cref="T:Aspose.Cells.CellArea" /> structure which represents an area of merged cells.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> item within the worksheet
            </summary>
      <param name="index">The zero based index of the element.</param>
      <value>The element at the specified index.</value>
      <remarks>NOTE: This member is now obsolete. 
            Instead,please use Cells.GetEnumerator() method to iterate all cells in this worksheet.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The <see cref="T:Aspose.Cells.Cell" /> object.</returns>
      <example>
        <code> 
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells[0, 0];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells(0,0)  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell name.
            </summary>
      <param name="cellName">Cell name,including its column letter and row number, for example A5.</param>
      <returns>A <see cref="T:Aspose.Cells.Cell" /> object</returns>
      <example>
        <code>
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells["A1"];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells("A1")  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.MultiThreadReading">
      <summary>
            Gets or sets whether the cells data model should support Multi-Thread reading.
            Default value of this property is false.
            If there are multiple threads to read Row/Cell objects in this collection concurrently,
            this property should be set as true, otherwise unexpected result may be produced.
            Supporting Multi-Thread reading may degrade the performance for accessing Row/Cell objects from this collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MemorySetting">
      <summary>
            Gets or sets the memory usage option for this cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Style">
      <summary>
            Gets and sets the default style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidthInch">
      <summary>
             Gets or sets the default column width in the worksheet,in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidthPixels">
      <summary>
             Gets or sets the default column width in the worksheet,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidth">
      <summary>
            Gets or sets the default column width in the worksheet,in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardHeight">
      <summary>
            Gets or sets the default row height in this worksheet,in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardHeightPixels">
      <summary>
            Gets or sets the default row height in this worksheet,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.PreserveString">
      <summary>
            Gets or sets a value indicating whether all worksheet values are preserved as strings. 
            Default is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MinRow">
      <summary>
            Minimum row index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxRow">
      <summary>
            Maximum row index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if there is no cell whiche contains data or style in the worksheet.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinColumn">
      <summary>
            Minimum column index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxColumn">
      <summary>
            Maximum column index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if ther is not cell.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinDataRow">
      <summary>
            Minimum row index of cell which contains data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataRow">
      <summary>
            Maximum row index of cell which contains data.
            </summary>
      <remarks>
            Return -1 if there is no cell which contains data.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinDataColumn">
      <summary>
            Minimum column index of cell which contains data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataColumn">
      <summary>
            Maximum column index of cell which contains data.
            </summary>
      <remarks>
            Return -1 if there is not cell which contains data.
            Don't call this property repeatedly. This property will iterate all cells in a worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.IsDefaultRowHeightMatched">
      <summary>
            Indicates that row height and default font height matches
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.IsDefaultRowHidden">
      <summary>
            Indicates whether the row is defaultly hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Columns">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Column" /> objects that represents the individual columns in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Ranges">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Range" /> objects created at run time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.End">
      <summary>
            Gets the last cell in this worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.LastCell property. 
            This property will be removed 12 months later since December 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.LastCell">
      <summary>
            Gets the last cell in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDisplayRange">
      <summary>
            Gets the max range which includes data, merged cells and shapes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Start">
      <summary>
            Gets the first cell in this worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.FirstCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.FirstCell">
      <summary>
            Gets the first cell in this worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.CellsDrawing">
      <summary>
            Represents the auto shape and drawing object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellsException">
      <summary>
            The exception that is thrown when Aspose.Cells specified error occurs.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsException.Code">
      <summary>
            Represenets custom exception code.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellValueType">
      <summary>
            Specifies a cell value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsBool">
      <summary>
            Cell value is boolean.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsDateTime">
      <summary>
            Cell value is datetime.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsError">
      <summary>
            Cell contains error value
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNull">
      <summary>
            Blank cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNumeric">
      <summary>
            Cell value is numeric.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsString">
      <summary>
            Cell value is string.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsUnknown">
      <summary>
            Cell value type is unknown.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Chart">
      <summary>
             Encapsulates the object that represents a single Excel chart.
             </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
            	Worksheet sheet = workbook.Worksheets[0];
            
            	Cells cells = sheet.Cells;
            	cells[0,1].PutValue("Income");
            	cells[1,0].PutValue("Company A");
            	cells[2,0].PutValue("Company B");
            	cells[3,0].PutValue("Company C");
            	cells[1,1].PutValue(10000);
            	cells[2,1].PutValue(20000);
            	cells[3,1].PutValue(30000);
            			
            	int chartIndex = sheet.Charts.Add(ChartType.Column, 9, 9, 21, 15);
            
            	Chart chart = sheet.Charts[chartIndex];
            	chart.NSeries.Add("B2:B4", true);
            	chart.NSeries.CategoryData = "A2:A4";
            
            	ASeries aSeries = chart.NSeries[0];
            	aSeries.Name = "=B1";
            	chart.IsLegendShown = true;
            	chart.Title.Text = "Income Analysis";
            
             [Visual Basic]
             
             Dim workbook as Workbook = new Workbook()
             Dim sheet as Worksheet = workbook.Worksheets(0)
             
             Dim cells as Cells = sheet.Cells
             cells(0,1).PutValue("Income")
            	cells(1,0).PutValue("Company A")
            	cells(2,0).PutValue("Company B")
            	cells(3,0).PutValue("Company C")
            	cells(1,1).PutValue(10000)
            	cells(2,1).PutValue(20000)
            	cells(3,1).PutValue(30000)
            			
            	Dim chartIndex as Integer = sheet.Charts.Add(ChartType.Column, 9, 9, 21, 15)
            
            	Dim chart as Chart = sheet.Charts(chartIndex)
            	chart.NSeries.Add("B2:B4", true)
            	chart.NSeries.CategoryData = "A2:A4"
            
            	Dim aSeries as ASeries = chart.NSeries(0)
            	aSeries.Name = "=B1"
            	chart.IsLegendShown = true
            	chart.Title.Text = "Income Analysis"
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.IsChartDataChanged">
      <summary>
            Detects if a chart's data source has changed.
            </summary>
      <remarks>
            The method detects the changes in the chart's data source before rendering the chart to image format.
            At first Chart.toImage call, the chart source data (e.g. XValuesParseData, ValuesParseData) will be recorded.
            Before calling the Chart.toImage method again, call IsChartDataChanged method to check if Chart needs re-rendering.
            </remarks>
      <returns>Returns true if the chart has changed otherwise returns false</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.RefreshPivotData">
      <summary>
            Refreshes pivot chart's data  from it's pivot data source.
            </summary>
      <remarks>
            We will gather data from pivot data source to the pivot chart cache.
            This method is only used to gather all data to a pivot chart.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.Move(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the chart to a specified location.
            </summary>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="lowerRightRow">Lower right row index</param>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.Calculate">
      <summary>
            Calcuate the custom postion of plot area, axises if the postion of them are auto assigned.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage">
      <summary>
            Gets a 32-bit <c>Bitmap</c> object of the chart.
            </summary>
      <returns>the picture of the chart.</returns>
      <remarks>
            If the width or height is zero or the chart is not supported according to Supported Charts List, it will return null.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
             Gets a 32-bit <c>Bitmap</c> object of the chart.
             <c>ImageOrPrintOptions.ImageFormat</c>, ImageOrPrintOptions.TiffCompression and ImageOrPrintOptions.Quality attributes are ignored.
             </summary>
      <param name="options">Addtional image creation options</param>
      <returns>the picture of the chart.</returns>
      <remarks>
             Returns a 32-bit bitmap object, so ImageOrPrintOptions.ImageFormat, ImageOrPrintOptions.TiffCompression and ImageOrPrintOptions.Quality
             attributes do not affect the method.
             
             If the width or height is zero or the chart is not supported according to Supported Charts List, it will return null.
             Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
             </remarks>
      <example>
             Gets a bitmap object with 200 x dpi and 300 y dpi.
             <code>
             
             [C#]
             ImageOrPrintOptions options = new ImageOrPrintOptions();
             options.HorizontalResolution = 200;
             options.VerticalResolution = 300;
             
             Workbook book = new Workbook(@"c:\test.xls");
             Bitmap chartObject = book.Worksheets[0].Charts[0].ToImage(options);
             
             [VB]
             Dim options As ImageOrPrintOptions =  New ImageOrPrintOptions() 
             options.HorizontalResolution = 200
             options.VerticalResolution = 300
            
             Dim book As Workbook =  New Workbook("c:\test.xls")
             Dim chartObject As Bitmap = book.Worksheets(0).Charts(0).ToImage(options)
             
             </code></example>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.String)">
      <summary>
            Creates the chart image and saves it to a file.
            The extension of the file name determines the format of the image.
            </summary>
      <param name="imageFile">The image file name with full path.</param>
      <remarks>
        <p>The format of the image is specified by using the extension of the file name.
            For example, if you specify "myfile.png", then the image will be saved
            in the PNG format. The following file extensions are recognized: 
            .bmp, .gif, .png, .jpg, .jpeg, .tiff, .tif, .emf.</p>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Creates the chart image and saves it to a file in the specified format.
            </summary>
      <param name="imageFile">The image file name with full path.</param>
      <param name="imageFormat">The format in which to save the image.</param>
      <remarks>
        <p>The format of the image is specified by using <c>imageFormat</c>.
            The following formats are supported: 
            ImageFormat.Bmp, ImageFormat.Gif, ImageFormat.Png, ImageFormat.Jpeg, ImageFormat.Tiff, ImageFormat.Emf.</p>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.String,System.Int64)">
      <summary>
            Creates the chart image and saves it to a file in the Jpeg format.
            </summary>
      <param name="imageFile">The image file name with full path.</param>
      <param name="jpegQuality">Jpeg quality.</param>
      <remarks>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.IO.Stream,System.Int64)">
      <summary>
            Creates the chart image and saves it to a stream in the Jpeg format.
            </summary>
      <param name="stream">The output stream.</param>
      <param name="jpegQuality">Jpeg quality.</param>
      <remarks>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Creates the chart image and saves it to a stream in the specified format.
            </summary>
      <param name="stream">The output stream.</param>
      <param name="imageFormat">The format in which to save the image.</param>
      <remarks>
        <p>The format of the image is specified by using <c>imageFormat</c>.
            The following formats are supported: 
            ImageFormat.Bmp, ImageFormat.Gif, ImageFormat.Png, ImageFormat.Jpeg, ImageFormat.Tiff, ImageFormat.Emf.</p>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToPdf(System.String)">
      <summary>
            Saves the chart to a pdf file.
            </summary>
      <param name="fileName">the pdf file name with full path</param>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToPdf(System.IO.Stream)">
      <summary>
            Creates the chart pdf and saves it to a stream.
            </summary>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.String,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
             Creates the chart image and saves it to a file.
             The extension of the file name determines the format of the image.
             </summary>
      <param name="imageFile">The image file name with full path.</param>
      <param name="options">Addtional image creation options</param>
      <remarks>
        <p>The format of the image is specified by using the extension of the file name.
             For example, if you specify "myfile.png", then the image will be saved
             in the PNG format. The following file extensions are recognized: 
             .bmp, .gif, .png, .jpg, .jpeg, .tiff, .tif, .emf.</p>
             If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
             Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
             </remarks>
      <example>
             Saves to Tiff with 300 dpi and CCITT4 compression.
             <code>
             
             [C#]
             ImageOrPrintOptions options = new ImageOrPrintOptions();
             options.HorizontalResolution = 300;
             options.VerticalResolution = 300;
             options.TiffCompression = TiffCompression.CompressionCCITT4;
             
             Workbook book = new Workbook(@"c:\test.xls");
             book.Worksheets[0].Charts[0].ToImage(@"c:\chart.Tiff", options);
             
             [VB]
             Dim options As ImageOrPrintOptions =  New ImageOrPrintOptions() 
             options.HorizontalResolution = 300
             options.VerticalResolution = 300
             options.TiffCompression = TiffCompression.CompressionCCITT4
            
             Dim book As Workbook =  New Workbook("c:\test.xls")
             book.Worksheets(0).Charts(0).ToImage("c:\chart.Tiff", options)
             
             </code>
             
             Saves to Jpeg with 300 dpi and 80 image quality.
             <code>
             
             [C#]
             ImageOrPrintOptions options = new ImageOrPrintOptions();
             options.HorizontalResolution = 300;
             options.VerticalResolution = 300;
             options.Quality = 80;
             
             Workbook book = new Workbook(@"c:\test.xls");
             book.Worksheets[0].Charts[0].ToImage(@"c:\chart.Jpeg", options);
             
             [VB]
             Dim options As ImageOrPrintOptions =  New ImageOrPrintOptions()
             options.HorizontalResolution = 300
             options.VerticalResolution = 300
             options.Quality = 80
            
             Dim book As Workbook =  New Workbook("c:\test.xls")
             book.Worksheets(0).Charts(0).ToImage("c:\chart.Jpeg", options)
             
             </code></example>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.ToImage(System.IO.Stream,Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Creates the chart image and saves it to a stream in the specified format.
            </summary>
      <param name="stream">The output stream.</param>
      <param name="options">Addtional image creation options</param>
      <remarks>
        <p>The format of the image is specified by using <c>options.ImageFormat</c>.
            The following formats are supported: 
            ImageFormat.Bmp, ImageFormat.Gif, ImageFormat.Png, ImageFormat.Jpeg, ImageFormat.Tiff, ImageFormat.Emf.</p>
            If the width or height is zero or the chart is not supported according to Supported Charts List, this method will do nothing.
            Please refer to <a href="http://www.aspose.com/documentation/.net-components/aspose.cells-for-.net/converting-chart-to-image.html">Supported Charts List</a> for more details.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.HasAxis(Aspose.Cells.Charts.AxisType,System.Boolean)">
      <summary>
            Returns which axes exist on the chart.
            </summary>
      <remarks>
            Normarlly, Pie, PieExploded, PiePie,PieBar, Pie3D, Pie3DExploded,Doughnut, DoughnutExploded is no axis.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.Chart.SetChartDataRange(System.String,System.Boolean)">
      <summary>
            Specifies data range for a chart.
            </summary>
      <param name="area">Specifies values from which to plot the data series</param>
      <param name="isVertical">Specifies whether to plot the series from a range of cell values by row or by column.</param>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Style">
      <summary>
            Gets and sets the builtin style.
            </summary>
      <remarks>
            It should be between 1 and 48.
            Return -1 if it's not be set.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ChartObject">
      <summary>
            Represents the chartShape;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.HidePivotFieldButtons">
      <summary>
            Indicates whether hide the pivot chart field buttons only when the chart is PivotChart
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PivotOptions">
      <summary>
            Specifies the pivot controls that appear on the chart
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PivotSource">
      <summary>
            The source is the data of the pivotTable.
            If PivotSource is not empty ,the chart is PivotChart.
            </summary>
      <remarks>If the pivot table  "PivotTable1" in the Worksheet "Sheet1" in the file "Book1.xls".
            The pivotSource could be "[Book1.xls]Sheet1!PivotTable1" if the chart and the PivotTable is not in the same workbook.
            If you set this property ,the previous data source setting will be lost.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PlotEmptyCellsType">
      <summary>
            Gets and sets  how to plot the empty cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PlotVisibleCells">
      <summary>
            Indicates whether only plot visible cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Name">
      <summary>
            Gets and sets the name of the chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.SizeWithWindow">
      <summary>
            True if Microsoft Excel resizes the chart to match the size of the chart sheet window.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Worksheet">
      <summary>
            Gets the worksheet which contains this chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Shapes">
      <summary>
            Returns all drawing shapes in this chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PrintSize">
      <summary>
            Gets and sets the printed chart size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Type">
      <summary>
            Gets or sets a chart's type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.NSeries">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Charts.SeriesCollection" /> collection representing the data series in the chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Title">
      <summary>
            Gets the chart's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PlotAreaWithoutTickLabels">
      <summary>
             Gets the chart's plot area which does not inculde axis tick lables.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ChartPlotArea.InnerX,ChartPlotArea.InnerY,ChartPlotArea.InnerWidth and ChartPlotArea.InnerHeight property. 
            This property will be removed 12 months later since March 2012. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PlotArea">
      <summary>
            Gets the chart's plot area which includes axis tick lables.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ChartArea">
      <summary>
            Gets the chart area in the worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.CategoryAxis">
      <summary>
            Gets the chart's X axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ValueAxis">
      <summary>
            Gets the chart's Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.SecondValueAxis">
      <summary>
            Gets the chart's second Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.SecondCategoryAxis">
      <summary>
            Gets the chart's second X axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.SeriesAxis">
      <summary>
            Gets the chart's series axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Legend">
      <summary>
            Gets the chart legend.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ChartDataTable">
      <summary>
            Represents the chart data table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.IsLegendShown">
      <summary>
            Gets or sets a value indicating whether the chart legend will be displayed. Default is true.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Chart.ShowLegend property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ShowLegend">
      <summary>
            Gets or sets a value indicating whether the chart legend will be displayed. Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.IsRectangularCornered">
      <summary>
            Gets or sets a value indicating whether the chart area is rectangular cornered.
            Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.IsDataTableShown">
      <summary>
            Gets or sets a value indicating whether the chart displays a data table. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Chart.ShowDataTable property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ShowDataTable">
      <summary>
            Gets or sets a value indicating whether the chart displays a data table. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.FirstSliceAngle">
      <summary>
            Gets or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts, 0 to 360. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.GapWidth">
      <summary>
            Returns or sets the space between bar or column clusters, as a percentage of the bar or column width.
            The value of this property must be between 0 and 500.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.GapDepth">
      <summary>
            Gets or sets the distance between the data series in a 3-D chart, as a percentage of the marker width.
            The value of this property must be between 0 and 500.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Floor">
      <summary>
             Returns a <see cref="P:Aspose.Cells.Charts.Chart.Floor" /> object that represents the walls of a 3-D chart.
            </summary>
      <remarks>This property doesn't apply to 3-D pie charts.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Walls">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.Chart.Walls" /> object that represents the walls of a 3-D chart.
            </summary>
      <remarks>This property doesn't apply to 3-D pie charts.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.BackWall">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.Chart.Walls" /> object that represents the back wall of a 3-D chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.SideWall">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.Chart.Walls" /> object that represents the side wall of a 3-D chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.WallsAndGridlines2D">
      <summary>
            True if gridlines are drawn two-dimensionally on a 3-D chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.RotationAngle">
      <summary>
            Represents the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).
            </summary>
      <remarks>
            The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. 
            The default value is 20. Applies only to 3-D charts. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Rotation">
      <summary>
            Represents the rotation of the 3-D chart view (the rotation of the plot area around the z-axis, in degrees).
            </summary>
      <remarks>
            The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44. 
            The default value is 20. Applies only to 3-D charts. 
            </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Chart.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Elevation">
      <summary>
            Represents the elevation of the 3-D chart view, in degrees.
            </summary>
      <remarks>
            The chart elevation is the height at which you view the chart, in degrees. 
            The default is 15 for most chart types. 
            The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.RightAngleAxes">
      <summary>
            True if the chart axes are at right angles.Applies only for 3-D charts(except Column3D and 3-D Pie Charts).
            </summary>
      <remarks>
            If this property is True, the Perspective property is ignored.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.AutoScaling">
      <summary>
            True if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart. 
            The RightAngleAxes property must be True.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.HeightPercent">
      <summary>
            Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Perspective">
      <summary>
            Returns or sets the perspective for the 3-D chart view. Must be between 0 and 100.
            This property is ignored if the RightAngleAxes property is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Is3D">
      <summary>
            Indicates whether the chart is a 3d chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.DepthPercent">
      <summary>
            Represents the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.ActualChartSize">
      <summary>
            Gets actual size of chart
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Placement">
      <summary>
            Represents the way the chart is attached to the cells below it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.PageSetup">
      <summary>
            Represents the page setup description in this chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Chart.Line">
      <summary>
            Gets the line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartArea">
      <summary>
            Encapsulates the object that represents the chart area in the worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            
            //Getting Chart Area
            ChartArea chartArea = chart.ChartArea;
            
            //Setting the foreground color of the chart area
            chartArea.Area.ForegroundColor = Color.Yellow;
            
            //Setting Chart Area Shadow
            chartArea.Shadow = true;
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            
            'Getting Chart Area
            Dim chartArea As ChartArea = chart.ChartArea
            
            'Setting the foreground color of the chart area
            chartArea.Area.ForegroundColor = Color.Yellow
            
            'Setting Chart Area Shadow
            chartArea.Shadow = True
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartArea.X">
      <summary>
            Gets or gets the horizontal offset from its upper left corner column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartArea.Y">
      <summary>
            Gets or gets the vertical offset from its upper left corner row.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartArea.Height">
      <summary>
            Gets or sets the vertical offset from its lower right corner row.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartArea.Width">
      <summary>
            Gets or sets the horizontal offset from its lower right corner column.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartArea.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.ChartArea.Font" /> object of the specified chartarea object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartDataTable">
      <summary>
            Represents a chart data table.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 25, 10);
            
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            
            chart.IsDataTableShown = true;
            
            //Getting Chart Table
            ChartDataTable chartTable = chart.ChartDataTable;
            
            //Setting Chart Table Font Color
            chartTable.Font.Color = System.Drawing.Color.Red;
            
            //Setting Legend Key Visibility
            chartTable.ShowLegendKey = false;
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.Column, 5, 0, 25, 10)
            
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            
            chart.IsDataTableShown = True
            
            'Getting Chart Table
            Dim chartTable As ChartDataTable = chart.ChartDataTable
            
            'Setting Chart Table Font Color
            chartTable.Font.Color = System.Drawing.Color.Red
            
            'Setting Legend Key Visibility
            chartTable.ShowLegendKey = False
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.ChartDataTable.Font" /> object which represents the font setting of the specified chart data table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. 
            The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.BackgroundMode">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ChartDataTable.BackgroundMode property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.HasBorderHorizontal">
      <summary>
            True if the chart data table has horizontal cell borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.HasBorderVertical">
      <summary>
            True if the chart data table has vertical cell borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.HasBorderOutline">
      <summary>
            True if the chart data table has outline borders
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.ShowLegendKey">
      <summary>
            True if the data label legend key is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartDataTable.Border">
      <summary>
            Returns a Border object that represents the border of the object
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartMarkerType">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Automatic">
      <summary>
            Automatic markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Circle">
      <summary>
            Circular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Dash">
      <summary>
            Long bar markers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Diamond">
      <summary>
            Diamond-shaped markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Dot">
      <summary>
            Short bar markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.None">
      <summary>
            No markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquarePlus">
      <summary>
            Square markers with a plus sign.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Square">
      <summary>
            Square markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquareStar">
      <summary>
            Square markers with an asterisk.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Triangle">
      <summary>
            Triangular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquareX">
      <summary>
            Square markers with an X.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartPoint">
      <summary>
            Represents a single point in a series in a chart.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10);
            
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            
            //Show Data Labels 
            chart.NSeries[0].DataLabels.IsValueShown = true;
            
            for (int i = 0; i  &lt; chart.NSeries[0].Points.Count; i++)
            {
                //Get Data Point
                ChartPoint point = chart.NSeries[0].Points[i];
                //Set Pir Explosion
                point.Explosion = 15;
                //Set Border Color
                point.Border.Color = System.Drawing.Color.Red;
            }
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10)
            
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            
            'Show Data Labels 
            chart.NSeries(0).DataLabels.IsValueShown = True
            
            For i As Integer = 0 To chart.NSeries(0).Points.Count - 1
                'Get Data Point
                Dim point As ChartPoint = chart.NSeries(0).Points(i)
                'Set Pir Explosion
                point.Explosion = 15
                'Set Border Color
                point.Border.Color = System.Drawing.Color.Red
            Next i
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetTopPointCount">
      <summary>
            Gets the number of top points after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetTopPointXPx(System.Int32)">
      <summary>
            Gets x-coordinate of the top point of shape after calls Chart.Calculate() method.
            Applies 3D charts: Column3D, Bar3D, Cone, Cylinder, Pyramid and Area3D
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetTopPointYPx(System.Int32)">
      <summary>
            Gets y-coordinate of the top point of shape after calls Chart.Calculate() method.
            Applies 3D charts: Column3D, Bar3D, Cone, Cylinder, Pyramid and Area3D
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetBottomPointCount">
      <summary>
            Gets the number of bottom points  after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetBottomPointXPx(System.Int32)">
      <summary>
            Gets x-coordinate of the bottom point of shape after calls Chart.Calculate() method.
            Applies 3D charts: Column3D, Bar3D, Cone, Cylinder, Pyramid
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetBottomPointYPx(System.Int32)">
      <summary>
            Gets y-coordinate of the bottom point of shape  after calls Chart.Calculate() method.
            Applies 3D charts: Column3D, Bar3D, Cone, Cylinder, Pyramid
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetOnCategoryAxisPointCount">
      <summary>
            Gets the number of the points on category axis after calls Chart.Calculate() method. Only applies to area chart.
            </summary>
      <remarks>
            Area 2D chart return 1
            Area 3D chart return 2.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetOnCategoryAxisPointXPx(System.Int32)">
      <summary>
            Gets x-coordinate of the point on category axis after calls Chart.Calculate() method. Only applies to Aarea chart.
            </summary>
      <remarks>
            Area 2D chart: index is 0.
            Area 3D chart: index is 0 or 1.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPoint.GetOnCategoryAxisPointYPx(System.Int32)">
      <summary>
            Gets y-coordinate of the point on category axis after calls Chart.Calculate() method. Only applies to Area chart.
            </summary>
      <remarks>
            Area 2D chart: index is 0.
            Area 3D chart: index is 0 or 1.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.Explosion">
      <summary>
            The distance of an open pie slice from the center of the pie chart is expressed as a percentage of the pie diameter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.Shadow">
      <summary>
            True if the chartpoint has a shadow. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.Border">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Drawing.Line">border</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.Area">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.ChartPoint.Area">area</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.Marker">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.ChartPoint.Marker">marker</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerStyle">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerStyle property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerSize">
      <summary>
            Represents the marker size in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerSize property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerForegroundColor">
      <summary>
            Represents the marker foregournd color in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerForegroundColor property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerForegroundColorSetType">
      <summary>
            Gets or sets the marker foreground color set type.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerForegroundColorSetType property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.
            FormattingType.Automatic is same as ChartLineFormattingType.Automatic.
            FormattingType.None is same as ChartLineFormattingType.None.
            FormattingType.Custom is same as ChartLineFormattingType.Solid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerBackgroundColor">
      <summary>
            Represents the marker backgournd color in a line chart, scatter chart, or radar chart. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerBackgroundColor property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.MarkerBackgroundColorSetType">
      <summary>
            Gets or sets the marker background color set type.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Marker.MarkerBackgroundColorSetType property. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.
            FormattingType.Automatic is same as ChartLineFormattingType.Automatic.
            FormattingType.None is same as ChartLineFormattingType.None.
            FormattingType.Custom is same as ChartLineFormattingType.Solid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.DataLabels">
      <summary>
            Returns a DataLabels object that represents the data label associated with the point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.YValue">
      <summary>
            Gets or sets the Y value of the chart point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.XValue">
      <summary>
            Gets or sets the X value of the chart point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeProperties">
      <summary>
            Gets the <seealso cref="T:Aspose.Cells.Drawing.ShapePropertyCollection" /> object that holds the visual shape properties of the ChartPoint.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeX">
      <summary>
            Gets the x coordinate of the upper left corner in units of 1/4000 of chart's width after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeY">
      <summary>
            Gets the y coordinate of the upper left corner in units of 1/4000 of chart's height after calls Chart.Calculate() method.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeWidth">
      <summary>
            Gets the width in units of 1/4000 of chart's width after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeHeight">
      <summary>
            Gets the height in units of 1/4000 of chart's height after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeXPx">
      <summary>
            Gets the x coordinate of the upper left corner in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeYPx">
      <summary>
            Gets the y coordinate of the upper left corner in units of pixels after calls Chart.Calculate() method.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeWidthPx">
      <summary>
            Gets the width in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ShapeHeightPx">
      <summary>
            Gets the height in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.BorderWidthPx">
      <summary>
            Gets the width of border in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.RadiusPx">
      <summary>
            Gets the radius of bubble, pie or doughnut in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.InnerRadiusPx">
      <summary>
            Gets the inner radius of doughnut slice in units of pixels after calls Chart.Calculate() method.
            Applies to Doughnut chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.StartAngle">
      <summary>
            Gets the starting angle for the pie section, measured in degrees clockwise from the x-axis after calls Chart.Calculate() method.
            Applies to Pie chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.EndAngle">
      <summary>
            Gets the ending angle for the pie section, measured in degrees clockwise from the x-axis after calls Chart.Calculate() method.
            Applies to Pie chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ArcStartPointXPx">
      <summary>
            Gets the x coordinate of starting point for the pie section after calls Chart.Calculate() method.
            Applies to Pie and Doughnut  chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ArcStartPointYPx">
      <summary>
            Gets the y coordinate of starting point for the pie section after calls Chart.Calculate() method.
            Applies to Pie and Doughnut  chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ArcEndPointXPx">
      <summary>
            Gets the x coordinate of ending point for the pie section after calls Chart.Calculate() method.
            Applies to Pie and Doughnut  chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.ArcEndPointYPx">
      <summary>
            Gets the y coordinate of ending point for the pie section after calls Chart.Calculate() method.
            Applies to Pie and Doughnut chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.InnerArcStartPointXPx">
      <summary>
            Gets the x coordinate of starting point for the pie section after calls Chart.Calculate() method.
            Applies to Doughnut chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.InnerArcStartPointYPx">
      <summary>
            Gets the y coordinate of starting point for the pie section after calls Chart.Calculate() method.
            Applies to Doughnut chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.InnerArcEndPointXPx">
      <summary>
            Gets the x coordinate of ending point for the pie section after calls Chart.Calculate() method.
            Applies to Doughnut chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPoint.InnerArcEndPointYPx">
      <summary>
            Gets the y coordinate of ending point for the pie section after calls Chart.Calculate() method.
            Applies to Doughnut chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartPointCollection">
      <summary>
             Represents a collection that contains all the points in one series.
             </summary>
      <example>
        <code>
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             //Obtaining the reference of the first worksheet
             Worksheet worksheet = workbook.Worksheets[0];
             
             //Adding a sample value to "A1" cell
             worksheet.Cells["A1"].PutValue(50);
             
             //Adding a sample value to "A2" cell
             worksheet.Cells["A2"].PutValue(100);
             
             //Adding a sample value to "A3" cell
             worksheet.Cells["A3"].PutValue(150);
             
             //Adding a sample value to "B1" cell
             worksheet.Cells["B1"].PutValue(60);
             
             //Adding a sample value to "B2" cell
             worksheet.Cells["B2"].PutValue(32);
             
             //Adding a sample value to "B3" cell
             worksheet.Cells["B3"].PutValue(50);
             
             //Adding a chart to the worksheet
             int chartIndex = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10);
             
             //Accessing the instance of the newly added chart
             Chart chart = worksheet.Charts[chartIndex];
             
             //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
             chart.NSeries.Add("A1:B3", true);
             
             //Show Data Labels 
             chart.NSeries[0].DataLabels.IsValueShown = true;
             
             ChartPointCollection points = chart.NSeries[0].Points;
             
             for (int i = 0; i &lt; points.Count; i++)
             {
                 //Get Data Point
                 ChartPoint point = points[i];
                 //Set Pir Explosion
                 point.Explosion = 15;
                 //Set Border Color
                 point.Border.Color = System.Drawing.Color.Red;
             }
             
             //Saving the Excel file
             workbook.Save("D:\\book1.xls");
            
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As New Workbook()
             
             'Obtaining the reference of the first worksheet
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             
             'Adding a sample value to "A1" cell
             worksheet.Cells("A1").PutValue(50)
             
             'Adding a sample value to "A2" cell
             worksheet.Cells("A2").PutValue(100)
             
             'Adding a sample value to "A3" cell
             worksheet.Cells("A3").PutValue(150)
             
             'Adding a sample value to "B1" cell
             worksheet.Cells("B1").PutValue(60)
             
             'Adding a sample value to "B2" cell
             worksheet.Cells("B2").PutValue(32)
             
             'Adding a sample value to "B3" cell
             worksheet.Cells("B3").PutValue(50)
             
             'Adding a chart to the worksheet
             Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10)
             
             'Accessing the instance of the newly added chart
             Dim chart As Chart = worksheet.Charts(chartIndex)
             
             'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
             chart.NSeries.Add("A1:B3", True)
             
             'Show Data Labels 
             chart.NSeries(0).DataLabels.IsValueShown = True
             
             Dim points As ChartPointCollection = chart.NSeries(0).Points
             
             For i As Integer = 0 To points.Count - 1
                 'Get Data Point
                 Dim point As ChartPoint = points(i)
                 'Set Pir Explosion
                 point.Explosion = 15
                 'Set Border Color
                 point.Border.Color = System.Drawing.Color.Red
             Next i
             
             'Saving the Excel file
             workbook.Save("D:\book1.xls")
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPointCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the entire <see cref="T:Aspose.Cells.Charts.ChartPointCollection" />.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPointCollection.Clear">
      <summary>
            Remove all setting of the chart points.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartPointCollection.RemoveAt(System.Int32)">
      <summary>
            Removes point at the index of the series..
            </summary>
      <param name="index">The index of the point.</param>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPointCollection.Count">
      <summary>
            Gets the count of the chart point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartPointCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Charts.ChartPoint" /> element at the specified index in the series.
             </summary>
      <param name="index">The index of chart point in the series.</param>
      <returns>The ChartPoint object.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Charts.Chart" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            ChartCollection charts = workbook.Worksheets[0].Charts;
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            
            Dim ChartCollection as Charts = workbook.Worksheets(0).Charts
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartCollection.AddFloatingChart(Aspose.Cells.Charts.ChartType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a chart to the collection.
            </summary>
      <param name="type">Chart type</param>
      <param name="left">The x offset to corner</param>
      <param name="top">The y offset to corner</param>
      <param name="width">The chart width</param>
      <param name="height">The chart height</param>
      <returns>
        <see cref="T:Aspose.Cells.Charts.Chart" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartCollection.Add(Aspose.Cells.Charts.ChartType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a chart to the collection.
            </summary>
      <param name="type">Chart type</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <returns>
        <see cref="T:Aspose.Cells.Charts.Chart" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartCollection.RemoveAt(System.Int32)">
      <summary>
            Remove a chart at the specific index.
            </summary>
      <param name="index">The chart index.</param>
    </member>
    <member name="M:Aspose.Cells.Charts.ChartCollection.Clear">
      <summary>
            Clear all charts.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Charts.Chart" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Charts.ChartCollection.Item(System.String)">
      <summary>
            Gets the chart by the name.
            </summary>
      <param name="name"> The chart name.</param>
      <returns>The chart.</returns>
      <remarks>
            The default chart name is null. So you have to explicitly set the name of the chart.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.ChartShape">
      <summary>
            Represents the shape of the chart.
            Properties and methods for the ChartObject object control the appearance and size of the embedded chart on the worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10);
            
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", true);
            
            //Show Data Labels 
            chart.NSeries[0].DataLabels.IsValueShown = true;
            
            //Getting Chart Shape
            ChartShape chartShape = chart.ChartObject;
            
            //Set Lower Right Column
            chartShape.LowerRightColumn = 10;
            
            //Set LowerDeltaX
            chartShape.LowerDeltaX = 1024;
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.PieExploded, 5, 0, 25, 10)
            
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B3"
            chart.NSeries.Add("A1:B3", True)
            
            'Show Data Labels 
            chart.NSeries(0).DataLabels.IsValueShown = True
            
            'Getting Chart Shape
            Dim chartShape As ChartShape = chart.ChartObject
            
            'Set Lower Right Column
            chartShape.LowerRightColumn = 10
            
            'Set LowerDeltaX
            chartShape.LowerDeltaX = 1024
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.ChartShape.Chart">
      <summary>
            Returns a Chart object that represents the chart contained in the object. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartSplitType">
      <summary>
            Represents the way the two sections of either a pie of pie chart or a bar of pie chart are split.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Position">
      <summary>
             Represents position split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Value">
      <summary>
            Represents value split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.PercentValue">
      <summary>
            Represents percent value split way.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Custom">
      <summary>
             Represents custom split way..
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartType">
      <summary>
            Enumerates all chart types used in Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area">
      <summary>
            Represents Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.AreaStacked">
      <summary>
            Represents Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area100PercentStacked">
      <summary>
            Represents 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3D">
      <summary>
            Represents 3D Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3DStacked">
      <summary>
            Represents 3D Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar">
      <summary>
            Represents Bar Chart: Clustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.BarStacked">
      <summary>
            Represents Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar100PercentStacked">
      <summary>
            Represents 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3DClustered">
      <summary>
            Represents 3D Colustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3DStacked">
      <summary>
            Represents 3D Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bubble">
      <summary>
            Represents Bubble Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bubble3D">
      <summary>
            Represents 3D Bubble Chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column">
      <summary>
            Represents Column Chart: Clustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ColumnStacked">
      <summary>
            Represents Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column100PercentStacked">
      <summary>
            Represents 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3D">
      <summary>
            Represents 3D Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3DClustered">
      <summary>
            Represents 3D Colustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3DStacked">
      <summary>
            Represents 3D Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cone">
      <summary>
            Represents Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConeStacked">
      <summary>
            Represents Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cone100PercentStacked">
      <summary>
            Represents 100% Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBar">
      <summary>
            Represents Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBarStacked">
      <summary>
            Represents Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalColumn3D">
      <summary>
            Represents 3D Conical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cylinder">
      <summary>
            Represents Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylinderStacked">
      <summary>
            Represents Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cylinder100PercentStacked">
      <summary>
            Represents 100% Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBar">
      <summary>
            Represents Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBarStacked">
      <summary>
            Represents Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalColumn3D">
      <summary>
            Represents 3D Cylindrical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Doughnut">
      <summary>
            Represents Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.DoughnutExploded">
      <summary>
            Represents Exploded Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line">
      <summary>
            Represents Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineStacked">
      <summary>
            Represents Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line100PercentStacked">
      <summary>
            Represents 100% Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineWithDataMarkers">
      <summary>
            Represents Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineStackedWithDataMarkers">
      <summary>
            Represents Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line100PercentStackedWithDataMarkers">
      <summary>
            Represents 100% Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line3D">
      <summary>
            Represents 3D Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie">
      <summary>
            Represents Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie3D">
      <summary>
            Represents 3D Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PiePie">
      <summary>
            Represents Pie of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PieExploded">
      <summary>
            Represents Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie3DExploded">
      <summary>
            Represents 3D Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PieBar">
      <summary>
            Represents Bar of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pyramid">
      <summary>
            Represents Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidStacked">
      <summary>
            Represents Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pyramid100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBar">
      <summary>
            Represents Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBarStacked">
      <summary>
            Represents Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBar100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidColumn3D">
      <summary>
            Represents 3D Pyramid Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Radar">
      <summary>
            Represents Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.RadarWithDataMarkers">
      <summary>
            Represents Radar Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.RadarFilled">
      <summary>
            Represents Filled Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Scatter">
      <summary>
            Represents Scatter Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByCurvesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByCurvesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByLinesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByLinesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockHighLowClose">
      <summary>
            Represents High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockOpenHighLowClose">
      <summary>
            Represents Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockVolumeHighLowClose">
      <summary>
            Represents Volume-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockVolumeOpenHighLowClose">
      <summary>
            Represents Volume-Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Surface3D">
      <summary>
            Represents Surface Chart: 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceWireframe3D">
      <summary>
            Represents Wireframe 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceContour">
      <summary>
            Represents Contour Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceContourWireframe">
      <summary>
            Represents Wireframe Contour Chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.CheckBox">
      <summary>
            Represents a check box object in a worksheet.
            </summary>
      <example>
        <code>
            [C#]
            
            int index = excel.Worksheets[0].CheckBoxes.Add(15, 15, 20, 100);
            CheckBox checkBox = excel.Worksheets[0].CheckBoxes[index];
            checkBox.Text = "Check Box 1";
            
            
            [Visual Basic]
            
            Dim index as integer = excel.Worksheets(0).CheckBoxes.Add(15, 15, 20, 100)
            Dim checkBox as CheckBox = excel.Worksheets(0).CheckBoxes[index];
            checkBox.Text = "Check Box 1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.CheckBox.Value">
      <summary>
            Indicates if the checkbox is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.CheckBox.CheckValue">
      <summary>
            Gets or set checkbox' value.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use CheckBox.CheckValueType property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.CheckBox.CheckedValue">
      <summary>
            Gets or set checkbox' value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.CheckBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.CheckBoxCollection">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.Drawing.CheckBox" /> objects in a worksheet.
            </summary>
      <example>
        <code>
            [C#]
            
            int index = excel.Worksheets[0].CheckBoxes.Add(15, 15, 20, 100);
            CheckBox checkBox = excel.Worksheets[0].CheckBoxes[index];
            checkBox.Text = "Check Box 1";
            
            
            [Visual Basic]
            
            Dim index as integer = excel.Worksheets(0).CheckBoxes.Add(15, 15, 20, 100)
            Dim checkBox as CheckBox = excel.Worksheets(0).CheckBoxes[index];
            checkBox.Text = "Check Box 1"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.CheckBoxCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a checkBox to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of checkBox, in unit of pixel.</param>
      <param name="width">Width of checkBox, in unit of pixel.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.CheckBox" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.CheckBoxCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.CheckBox" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.CheckValueType">
      <summary>
            Represents the check value type of the check box.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.UnChecked">
      <summary>
            UnChecked
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.Checked">
      <summary>
            Checked
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.Mixed">
      <summary>
            Mixed
            </summary>
    </member>
    <member name="T:Aspose.Cells.Column">
      <summary>
            Represents a single column in a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add new Style to Workbook
            Style style = workbook.Styles[workbook.Styles.Add()];
            
            //Setting the background color to Blue
            style.BackgroundColor = Color.Blue;
            
            //Setting the foreground color to Red
            style.ForegroundColor= Color.Red;
            
            //setting Background Pattern
            style.Pattern = BackgroundType.DiagonalStripe;
            
            //New Style Flag
            StyleFlag styleFlag = new StyleFlag();
            
            //Set All Styles
            styleFlag.All = true;
            
            //Get first Column
            Column column = worksheet.Cells.Columns[0];
            
            //Apply Style to first Column
            column.ApplyStyle(style, styleFlag);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add new Style to Workbook
            Dim style As Style = workbook.Styles(workbook.Styles.Add())
            
            'Setting the background color to Blue
            style.BackgroundColor = Color.Blue
            
            'Setting the foreground color to Red
            style.ForegroundColor = Color.Red
            
            'setting Background Pattern
            style.Pattern = BackgroundType.DiagonalStripe
            
            'New Style Flag
            Dim styleFlag As New StyleFlag()
            
            'Set All Styles
            styleFlag.All = True
            
            'Get first Column
            Dim column As Column = worksheet.Cells.Columns(0)
            
            'Apply Style to first Column
            column.ApplyStyle(style, styleFlag)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Column.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole column.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="P:Aspose.Cells.Column.Index">
      <summary>
            Gets the index of this column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.Width">
      <summary>
            Gets and sets the column width in unit of charaters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.GroupLevel">
      <summary>
            Gets the group level of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.IsHidden">
      <summary>
            Indicates whether the column is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.Style">
      <summary>
            Gets the style of this column.
            </summary>
      <remarks>
            You have to call Column.ApplyStyle() method to save your changing with the row style,
            otherwise it will not effect.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ColumnCollection">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Column" /> objects that represent the individual columns in a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add new Style to Workbook
            Style style = workbook.Styles[workbook.Styles.Add()];
            
            //Setting the background color to Blue
            style.ForegroundColor = Color.Blue;
            
            //setting Background Pattern
            style.Pattern = BackgroundType.Solid;
            
            //New Style Flag
            StyleFlag styleFlag = new StyleFlag();
            
            //Set All Styles
            styleFlag.All = true;
            
            //Change the default width of first ten columns
            for (int i = 0; i &lt; 10; i++)
            {
                worksheet.Cells.Columns[i].Width = 20;
            }
            
            //Get the Column with non default formatting
            ColumnCollection columns = worksheet.Cells.Columns;
            
            foreach (Column column in columns)
            {
                //Apply Style to first ten Columns
                column.ApplyStyle(style, styleFlag);
            }
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add new Style to Workbook
            Dim style As Style = workbook.Styles(workbook.Styles.Add())
            
            'Setting the background color to Blue
            style.ForegroundColor = Color.Blue
            
            'setting Background Pattern
            style.Pattern = BackgroundType.Solid
            
            'New Style Flag
            Dim styleFlag As New StyleFlag()
            
            'Set All Styles
            styleFlag.All = True
            
            'Change the default width of first ten columns
            For i As Integer = 0 To 9
                worksheet.Cells.Columns(i).Width = 20
            Next i
            
            'Get the Column with non default formatting
            Dim columns As ColumnCollection = worksheet.Cells.Columns
            
            For Each column As Column In columns
                'Apply Style to first ten Columns
                column.ApplyStyle(style, styleFlag)
            Next column
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ColumnCollection.GetByIndex(System.Int32)">
      <summary>
            Gets the column object by the index.
            </summary>
      <param name="index">
      </param>
      <returns>Returns the column object.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Columns.GetColumnByIndex() method.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.ColumnCollection.GetColumnByIndex(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Column" /> object by the position in the list.
            </summary>
      <param name="index">The position in the list.</param>
      <returns>Returns the column object.</returns>
    </member>
    <member name="P:Aspose.Cells.ColumnCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Column" /> object by column index. The Column object of given column index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ComboBox">
      <summary>
            Represents the control form ComboBox.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Create a new Workbook.        
            Workbook workbook = new Workbook();
             
            //Get the first worksheet.
            Worksheet sheet = workbook.Worksheets[0];
             
            //Get the worksheet cells collection.
            Cells cells = sheet.Cells;
             
            //Input a value.
            cells["B3"].PutValue("Employee:");
             
            //Set it bold.
            cells["B3"].Style.Font.IsBold = true;
             
            //Input some values that denote the input range
            //for the combo box.
            cells["A2"].PutValue("Emp001");
            cells["A3"].PutValue("Emp002");
            cells["A4"].PutValue("Emp003");
            cells["A5"].PutValue("Emp004");
            cells["A6"].PutValue("Emp005");
            cells["A7"].PutValue("Emp006");
             
            //Add a new combo box.
            Aspose.Cells.ComboBox comboBox = sheet.Shapes.AddComboBox(2, 0, 2, 0, 22, 100);
             
            //Set the linked cell;
            comboBox.LinkedCell = "A1";
             
            //Set the input range.
            comboBox.InputRange = "A2:A7";
             
            //Set no. of list lines displayed in the combo 
            //box's list portion.
            comboBox.DropDownLines = 5;
             
            //Set the combo box with 3-D shading.
            comboBox.Shadow = true;
             
            //AutoFit Columns
            sheet.AutoFitColumns();
             
            //Saves the file.
            workbook.Save(@"d:\test\tstcombobox.xls");
            
            [VB.NET]
            
            'Create a new Workbook.
            Dim workbook As Workbook = New Workbook()
             
            'Get the first worksheet.
            Dim sheet As Worksheet = workbook.Worksheets(0)
             
            'Get the worksheet cells collection.
            Dim cells As Cells = sheet.Cells
             
            'Input a value.
            cells("B3").PutValue("Employee:")
             
            'Set it bold.
            cells("B3").Style.Font.IsBold = True
             
            'Input some values that denote the input range
            'for the combo box.
            cells("A2").PutValue("Emp001")
            cells("A3").PutValue("Emp002")
            cells("A4").PutValue("Emp003")
            cells("A5").PutValue("Emp004")
            cells("A6").PutValue("Emp005")
            cells("A7").PutValue("Emp006")
             
            'Add a new combo box.
            Dim comboBox As Aspose.Cells.ComboBox = sheet.Shapes.AddComboBox(2, 0, 2, 0, 22, 100)
             
            'Set the linked cell;
            comboBox.LinkedCell = "A1"
             
            'Set the input range.
            comboBox.InputRange = "A2:A7"
             
            'Set no. of list lines displayed in the combo
            'box's list portion.
            comboBox.DropDownLines = 5
             
            'Set the combo box with 3-D shading.
            comboBox.Shadow = True
             
            'AutoFit Columns
            sheet.AutoFitColumns()
             
            'Saves the file.
            workbook.Save("d:\test\tstcombobox.xls")
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.ComboBox.SelectedIndex">
      <summary>
            Gets or sets the index number of the currently selected item in a list box or combo box.
            Zero-based.
            </summary>
      <remarks>-1 presents no item is selected.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ComboBox.SelectedValue">
      <summary>
            Gets the selected value of the combox box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ComboBox.SelectedCell">
      <summary>
            Gets the selected cell in the input range of the combo box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ComboBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ComboBox.DropDownLines">
      <summary>
            Gets or sets the number of list lines displayed in the drop-down portion of a combo box. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Comment">
      <summary>
            Encapsulates the object that represents a cell comment.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            CommentCollection comments = workbook.Worksheets[0].Comments;
            
            //Add comment to cell A1
            int commentIndex = comments.Add(0, 0);
            Comment comment = comments[commentIndex];
            comment.Note = "First note.";
            comment.Font.Name = "Times New Roman";
            
            //Add comment to cell B2
            comments.Add("B2");
            comment = comments["B2"];
            comment.Note = "Second note.";
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            Dim comments as CommentCollection = workbook.Worksheets(0).Comments
             
            'Add comment to cell A1
            Dim commentIndex as Integer = comments.Add(0, 0)
            Dim comment as Comment = comments(commentIndex)
            comment.Note = "First note."
            comment.Font.Name = "Times New Roman"
            
            'Add comment to cell B2
            comments.Add("B2")
            comment = comments("B2")
            comment.Note = "Second note."
             
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Comment.FormatCharacters(System.Int32,System.Int32,Aspose.Cells.Font,Aspose.Cells.StyleFlag)">
      <summary>
            Format some chararcters with the font setting.
            </summary>
      <param name="startIndex">The start index.</param>
      <param name="length">The the length.</param>
      <param name="font">The font setting.</param>
      <param name="flag">The flag of the font setting.</param>
    </member>
    <member name="M:Aspose.Cells.Comment.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the comment text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
    </member>
    <member name="M:Aspose.Cells.Comment.GetCharacters">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the comment text.
            </summary>
      <returns>All Characters objects </returns>
    </member>
    <member name="P:Aspose.Cells.Comment.Author">
      <summary>
            Gets and sets Name of the original comment author
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.CommentShape">
      <summary>
            Get a Shape object that represents the shape attached to the specified comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Row">
      <summary>
            Gets the row index of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Column">
      <summary>
            Gets the column index of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Note">
      <summary>
            Represents the content of comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.HtmlNote">
      <summary>
            Gets and sets the html string which contains data and some formattings in this comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.Font">
      <summary>
            Gets the font of comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.IsVisible">
      <summary>
            Represents if the comment is visible or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.TextOrientationType">
      <summary>
             Gets and sets the text orientation type of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.TextHorizontalAlignment">
      <summary>
             Gets and sets the text horizontal alignment type of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.TextVerticalAlignment">
      <summary>
             Gets and sets the text vertical alignment type of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.AutoSize">
      <summary>
            Indicates if size of comment is adjusted automatically according to its content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.HeightCM">
      <summary>
            Represents the height of the comment, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.WidthCM">
      <summary>
            Represents the width of the comment, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.WidthInch">
      <summary>
            Represents the width of the comment, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Comment.HeightInch">
      <summary>
            Represents the height of the comment, in unit of inches.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CommentCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Comment" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            CommentCollection comments = workbook.Worksheets[0].Comments;
            
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            
            Dim comments as CommentCollection = workbook.Worksheets(0).Comments
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.CommentCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="row">Cell row index.</param>
      <param name="column">Cell column index.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.CommentCollection.Add(System.String)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.CommentCollection.RemoveAt(System.String)">
      <summary>
            Removes the comment of the specific cell.
            </summary>
      <param name="cellName">The name of cell which contains a comment.</param>
    </member>
    <member name="M:Aspose.Cells.CommentCollection.RemoveAt(System.Int32,System.Int32)">
      <summary>
            Removes the comment of the specific cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">the column index.</param>
    </member>
    <member name="M:Aspose.Cells.CommentCollection.Clear">
      <summary>
            Removes all comments;
            </summary>
    </member>
    <member name="P:Aspose.Cells.CommentCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.CommentCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified cell.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="P:Aspose.Cells.CommentCollection.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.CommentShape">
      <summary>
            Represents the shape of the comment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.CommentShape.Comment">
      <summary>
            Gets the Commnet object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.FormatCondition" /> objects.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Get Conditional Formattings
            ConditionalFormattingCollection cformattings = sheet.ConditionalFormattings;
            
            //Adds an empty conditional formatting
            int index = cformattings.Add();
            
            //Get newly added Conditional formatting
            FormatConditionCollection fcs = cformattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 0;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            ca = new CellArea();
            
            ca.StartRow = 1;
            
            ca.EndRow = 1;
            
            ca.StartColumn = 1;
            
            ca.EndColumn = 1;
            
            fcs.AddArea(ca);
            
            //Add condition.
            int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
            
            //Add condition.
            int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
            
            //Sets the background color.
            FormatCondition fc = fcs[conditionIndex];
            
            fc.Style.BackgroundColor = Color.Red;
            
            //Saving the Excel file
            workbook.Save("C:\\output.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Get Conditional Formattings
            Dim cformattings As ConditionalFormattingCollection = sheet.ConditionalFormattings
            
            'Adds an empty conditional formatting
            Dim index As Integer = cformattings.Add()
            
            'Get newly added Conditional formatting
            Dim fcs As FormatConditionCollection = cformattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 0
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            ca = New CellArea()
            
            ca.StartRow = 1
            
            ca.EndRow = 1
            
            ca.StartColumn = 1
            
            ca.EndColumn = 1
            
            fcs.AddArea(ca)
            
            'Add condition.
            Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
            
            'Add condition.
            Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
            
            'Sets the background color.
            Dim fc As FormatCondition = fcs(conditionIndex)
            
            fc.Style.BackgroundColor = Color.Red
            
            'Saving the Excel file
            workbook.Save("C:\output.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.RemoveArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove all conditional formattings in the range.
            </summary>
      <param name="startRow">The start row of the range.</param>
      <param name="startColumn">The start column of the range.</param>
      <param name="totalRows">The number of rows of the range.</param>
      <param name="totalColumns">The number of columns of the range.</param>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.Copy(Aspose.Cells.ConditionalFormattingCollection)">
      <summary>
            Copies condtional formattings.
            </summary>
      <param name="cfs">The condtional formattings</param>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.Add">
      <summary>
            Adds a FormatConditions to the collection.
            </summary>
      <returns>FormatConditions object index.</returns>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingCollection.Item(System.Int32)">
      <summary>
            Gets the FormatConditions element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="T:Aspose.Cells.ConsolidationFunction">
      <summary>
            Represents consolidation function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Sum">
      <summary>
            Represents Sum function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Count">
      <summary>
            Represents Count function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Average">
      <summary>
            Represents Average function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Max">
      <summary>
            Represents Max function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Min">
      <summary>
            Represents Min function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Product">
      <summary>
            Represents Product function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.CountNums">
      <summary>
            Represents Count Nums function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDev">
      <summary>
            Represents StdDev function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDevp">
      <summary>
            Represents StdDevp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Var">
      <summary>
            Represents Var function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Varp">
      <summary>
            Represents Varp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.DistinctCount">
      <summary>
            Represents Distinct Count function.
            </summary>
      <remarks>
            Only valid for pivottable  with Data Module created since by 2013.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfCompressionCore">
      <summary>
            Specifies a type of compression applied to all content in the PDF file except images.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompressionCore.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompressionCore.Rle">
      <summary>
            Rle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompressionCore.Lzw">
      <summary>
            Lzw
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.PdfCompressionCore.Flate">
      <summary>
            Flate
            </summary>
    </member>
    <member name="T:Aspose.Cells.HeaderFooterCommand">
      <summary>
            Represents the command of header/footer
            </summary>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Type">
      <summary>
            Gets the header/footer' command type .
            </summary>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Font">
      <summary>
            Gets the font of the command's value.
            </summary>
      <remarks>
            Useless for HeaderFooterCommandType.Picture.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Text">
      <summary>
            Gets the text of the command.
            </summary>
      <remarks>
            Only valid for HeaderFooterCommandType.Text.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CopyOptions">
      <summary>
            Represents the copy options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CopyOptions.#ctor">
      <summary>
            CopyOptions constructor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.CopyNames">
      <summary>
            Indicates whether copying the names.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.CopyInvalidFormulasAsValues">
      <summary>
            If the formula is not valid for the dest destination, only copy values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ColumnCharacterWidth">
      <summary>
            Indicates whether copying column width in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ReferToSheetWithSameName">
      <summary>
            When copying a worksheet to another workbook and the worksheet contains the formulas which refer to other worksheets in MS Excel,
            the copied formulas should refer to source workbook. 
            But sometimes we have copied other worksheets and we hope the copied formulas refer to other worksheets with the name in the same workbook,
            please set this property as true.
            </summary>
      <remarks>
            The default value is true.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CountryCode">
      <summary>
            Represents Excel country identifiers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Default">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.USA">
      <summary>
            United States
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Canada">
      <summary>
            Canada
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.LatinAmeric">
      <summary>
            Latin America, except Brazil
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Russia">
      <summary>
            Russia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Egypt">
      <summary>
            Egypt
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Greece">
      <summary>
            Greece
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Netherlands">
      <summary>
            Netherlands
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Belgium">
      <summary>
            Belgium
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.France">
      <summary>
            France
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Spain">
      <summary>
            Spain
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Hungary">
      <summary>
            Hungary
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Italy">
      <summary>
            Italy
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Switzerland">
      <summary>
            Switzerland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Austria">
      <summary>
            Austria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.UnitedKingdom">
      <summary>
            United Kingdom
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Denmark">
      <summary>
            Denmark
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Sweden">
      <summary>
            Sweden
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Norway">
      <summary>
            Norway
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Poland">
      <summary>
            Poland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Germany">
      <summary>
            Germany
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Mexico">
      <summary>
            Mexico
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Brazil">
      <summary>
            Brazil
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Australia">
      <summary>
            Australia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.NewZealand">
      <summary>
            New Zealand
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Thailand">
      <summary>
            Thailand
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Japan">
      <summary>
            Japan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.SouthKorea">
      <summary>
            SouthKorea
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.VietNam">
      <summary>
            Viet Nam
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.China">
      <summary>
            People's Republic of China
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Turkey">
      <summary>
            Turkey
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.India">
      <summary>
            India
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Algeria">
      <summary>
            Algeria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Morocco">
      <summary>
            Morocco
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Libya">
      <summary>
            Libya
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Portugal">
      <summary>
            Portugal
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iceland">
      <summary>
            Iceland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Finland">
      <summary>
            Finland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Czech">
      <summary>
            Czech Republic
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Taiwan">
      <summary>
            Taiwan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Lebanon">
      <summary>
            Lebanon
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Jordan">
      <summary>
            Jordan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Syria">
      <summary>
            Syria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iraq">
      <summary>
            Iraq
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Kuwait">
      <summary>
            Kuwait
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Saudi">
      <summary>
            Saudi Arabia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.UnitedArabEmirates">
      <summary>
            United Arab Emirates
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Israel">
      <summary>
            Israel
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Qatar">
      <summary>
            Qatar
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iran">
      <summary>
            Iran
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomPropertyCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.Properties.CustomProperty" /> objects that represent additional information. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomPropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds custom property information.
            </summary>
      <param name="name">The name of the custom property.</param>
      <param name="value">The value of the custom property.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomPropertyCollection.Item(System.Int32)">
      <summary>
            Gets the custom property by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The custom property</returns>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomPropertyCollection.Item(System.String)">
      <summary>
            Gets the custom property by the property name.
            </summary>
      <param name="name">The property name.</param>
      <returns>The custom property</returns>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomProperty">
      <summary>
            Represents identifier information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.StringValue">
      <summary>
            Returns or sets the value of the custom property.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use CustomProperty.Value property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.Value">
      <summary>
            Returns or sets the value of the custom property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DataLabels">
      <summary>
             Encapsulates a collection of all the DataLabel objects for the specified Series.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Set the DataLabels in the chart
             DataLabels datalabels;
             for (int i = 0; i  &lt;chart.NSeries.Count; i++)
             {
                 datalabels = chart.NSeries[i].DataLabels;
                 //Set the position of DataLabels
                 datalabels.Position = LabelPositionType.InsideBase;
                 //Show the category name in the DataLabels
                 datalabels.IsCategoryNameShown = true;
                 //Show the value in the DataLabels
                 datalabels.IsValueShown = true;
                 //Not show the percentage in the DataLabels
                 datalabels.IsPercentageShown = false;
                 //Not show the legend key.
                 datalabels.IsLegendKeyShown = false;
             }
             
             [Visual Basic]
            
             'Set the DataLabels in the chart
             Dim datalabels As DataLabels
             Dim i As Integer
             For i = 0 To chart.NSeries.Count - 1 Step 1
                 datalabels = chart.NSeries(i).DataLabels
                 'Set the position of DataLabels
                 datalabels.Postion = LabelPositionType.InsideBase
                 'Show the category name in the DataLabels
                 datalabels.IsCategoryNameShown = True
                 'Show the value in the DataLabels
                 datalabels.IsValueShown = True
                 'Not show the percentage in the DataLabels
                 datalabels.IsPercentageShown = False
                 'Not show the legend key.
                 datalabels.IsLegendKeyShown = False
             Next
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.DataLabels.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsAutoText">
      <summary>
            Indicates the text is auto generated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsDeleted">
      <summary>
            Indicates whether this data lables is deleted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.RotationAngle">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.LinkedSource">
      <summary>
            Gets and sets a reference to the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsTextWrapped">
      <summary>
            Gets or sets a value indicating whether the text is wrapped.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsResizeShapeToFitText">
      <summary>
            Gets or sets whether a shape should be auto-fit to fully contain the text described within it. Auto-fitting is
            when text within a shape is scaled in order to contain all the text inside.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.BackgroundMode property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.BackgroundMode">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsValueShown">
      <summary>
            Represents a specified chart's data label values display behavior. True displays the values. False to hide. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowValue property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowValue">
      <summary>
            Represents a specified chart's data label values display behavior. True displays the values. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowCellRange">
      <summary>
            Indicates whether showing cell range as the data labels. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsPercentageShown">
      <summary>
            Represents a specified chart's data label percentage value display behavior. 
            True displays the percentage value. False to hide. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowPercentage property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowPercentage">
      <summary>
            Represents a specified chart's data label percentage value display behavior. True displays the percentage value. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsBubbleSizeShown">
      <summary>
            Represents a specified chart's data label percentage value display behavior. True displays the percentage value. False to hide. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowBubbleSize property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowBubbleSize">
      <summary>
            Represents a specified chart's data label percentage value display behavior. True displays the percentage value. False to hide. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowCategoryName">
      <summary>
            Represents a specified chart's data label category name display behavior.True to display the category name for the data labels on a chart. False to hide.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsCategoryNameShown">
      <summary>
            Represents a specified chart's data label category name display behavior.True to display the category name for the data labels on a chart. False to hide.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowCategoryName property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsSeriesNameShown">
      <summary>
            Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart.
            True to show the series name. False to hide.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowSeriesName property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowSeriesName">
      <summary>
            Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart.
            True to show the series name. False to hide.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.IsLegendKeyShown">
      <summary>
            Represents a specified chart's data label legend key display behavior.True if the data label legend key is visible.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DataLabels.ShowLegendKey property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.ShowLegendKey">
      <summary>
            Represents a specified chart's data label legend key display behavior.
            True if the data label legend key is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.NumberFormat">
      <summary>
            Represents the format string for the DataLabels object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Number">
      <summary>
            Gets ans sets the built-in number format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.NumberFormatLinked">
      <summary>
            True if the number format is linked to the cells 
            (so that the number format changes in the labels when it changes in the cells). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Font">
      <summary>
            Gets the font of the DataLabels;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Separator">
      <summary>
            Sets or returns the separator type used for the data labels on a chart.
            </summary>
      <remarks>
            Sets separator type will specify standard separator for datalabels.
            Space is " "
            Comma is ", "
            Semicolon is "; "
            Period is ". "
            NewLine is "\n"
            If want set standard separator, may sets separator tyep to Custom and set SepartorValue at the same time.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.SeparatorValue">
      <summary>
            Sets or returns the separator value used for the data labels on a chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DataLabels.Position">
      <summary>
            Represents the position of the data lable.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DataLablesSeparatorType">
      <summary>
            Represents the separator type of DataLables.  
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Auto">
      <summary>
            Represents automatic separator
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Space">
      <summary>
            Represents space(" ")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Comma">
      <summary>
            Represents comma(",")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Semicolon">
      <summary>
            Represents semicolon(";")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Period">
      <summary>
            Represents period(".")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.NewLine">
      <summary>
            Represents newline("\n")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Custom">
      <summary>
            Represents custom separator
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataSorter">
      <summary>
            Summary description for DataSorter.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook object.
            Workbook workbook = new Workbook("C:\\Book1.xls");
            //Get the workbook datasorter object.
            DataSorter sorter = workbook.DataSorter;
            //Set the first order for datasorter object.
            sorter.Order1 = Aspose.Cells.SortOrder.Descending;
            //Define the first key.
            sorter.Key1 = 0;
            //Set the second order for datasorter object.
            sorter.Order2 = Aspose.Cells.SortOrder.Ascending;
            //Define the second key.
            sorter.Key2 = 1;
            //Create a cells area (range).
            CellArea ca = new CellArea();
            //Specify the start row index.
            ca.StartRow = 0;
            //Specify the start column index.
            ca.StartColumn = 0;
            //Specify the last row index.
            ca.EndRow = 13;
            //Specify the last column index.
            ca.EndColumn = 1;
            //Sort data in the specified data range (A1:B14)
            sorter.Sort(workbook.Worksheets[0].Cells, ca);
            //Save the excel file.
            workbook.Save("C:\\outBook.xls");
            
            [Visual Basic]
            
            'Instantiate a new Workbook object.
            Dim workbook As Workbook = New Workbook("C:\Book1.xls")
            'Get the workbook datasorter object.
            Dim sorter As DataSorter = workbook.DataSorter
            'Set the first order for datasorter object
            sorter.Order1 = Aspose.Cells.SortOrder.Descending
            'Define the first key.
            sorter.Key1 = 0
            'Set the second order for datasorter object.
            sorter.Order2 = Aspose.Cells.SortOrder.Ascending
            'Define the second key.
            sorter.Key2 = 1
            'Create a cells area (range).
            Dim ca As CellArea = New CellArea
            'Specify the start row index.
            ca.StartRow = 0
            'Specify the start column index.
            ca.StartColumn = 0
            'Specify the last row index.
            ca.EndRow = 13
            'Specify the last column index.
            ca.EndColumn = 1
            'Sort the data in the specified data range (A1:B14)
            sorter.Sort(workbook.Worksheets(0).Cells, ca)
            'Save the excel file.
            workbook.Save("C:\outBook.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Clear">
      <summary>
            Clear all settings.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DataSorter.AddKey(System.Int32,Aspose.Cells.SortOrder)">
      <summary>
            Adds sorted column index and sort order.
            </summary>
      <param name="key">The sorted column index.</param>
      <param name="order">The sort order</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.AddKey(System.Int32,Aspose.Cells.SortOrder,System.String)">
      <summary>
            Adds sorted column index and sort order with custom sort list.
            </summary>
      <param name="key">The sorted column index.</param>
      <param name="order">The sort order.</param>
      <param name="customList">The custom sort list.</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sorts the data of the area.
            </summary>
      <param name="cells">The cells contains the data area.</param>
      <param name="startRow">The start row of the area.</param>
      <param name="startColumn">The start column of the area.</param>
      <param name="endRow">The end row of the area.</param>
      <param name="endColumn">The end column of the area.</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort(Aspose.Cells.Cells,Aspose.Cells.CellArea)">
      <summary>
            Sort the datas of the area.
            </summary>
      <param name="cells">The cells contains the data area.</param>
      <param name="area">The area needed to sort</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort">
      <summary>
            Sort the data in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.HasHeaders">
      <summary>
            Represents whether the range has headers.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key1">
      <summary>
            Represents first sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order1">
      <summary>
            Represents sort order of the first key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key2">
      <summary>
            Represents second sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order2">
      <summary>
            Represents sort order of the second key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key3">
      <summary>
            Represents third sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order3">
      <summary>
            Represents sort order of the third key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.SortLeftToRight">
      <summary>
            True means that sorting orientation is from left to right.
            False means that sorting orientation is from top to bottom.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.CaseSensitive">
      <summary>
            Gets and sets whether case sensitive when comparing string.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DisplayDrawingObjects">
      <summary>
            Represents whether and how to show objects in the workbook.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.DisplayShapes">
      <summary>
            Show all objects
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.Placeholders">
      <summary>
            Show placeholders
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.Hide">
      <summary>
            Hide all shapes.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DisplayUnitLabel">
      <summary>
            Represents the display unit label.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Excel object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "A4" cell
            worksheet.Cells["A4"].PutValue(200);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a sample value to "B4" cell
            worksheet.Cells["B4"].PutValue(40);
            //Adding a sample value to "C1" cell as category data
            worksheet.Cells["C1"].PutValue("Q1");
            //Adding a sample value to "C2" cell as category data
            worksheet.Cells["C2"].PutValue("Q2");
            //Adding a sample value to "C3" cell as category data
            worksheet.Cells["C3"].PutValue("Y1");
            //Adding a sample value to "C4" cell as category data
            worksheet.Cells["C4"].PutValue("Y2");
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", true);
            //Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4";
            //Setting the display unit of value(Y) axis.
            chart.ValueAxis.DisplayUnit = DisplayUnitType.Hundreds;
            DisplayUnitLabel displayUnitLabel = chart.ValueAxis.DisplayUnitLabel;
            //Setting the custom display unit label
            displayUnitLabel.Text = "100";
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Excel object
            Dim sheetIndex As Int32 = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "A4" cell
            worksheet.Cells("A4").PutValue(200)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a sample value to "B4" cell
            worksheet.Cells("B4").PutValue(40)
            'Adding a sample value to "C1" cell as category data
            worksheet.Cells("C1").PutValue("Q1")
            'Adding a sample value to "C2" cell as category data
            worksheet.Cells("C2").PutValue("Q2")
            'Adding a sample value to "C3" cell as category data
            worksheet.Cells("C3").PutValue("Y1")
            'Adding a sample value to "C4" cell as category data
            worksheet.Cells("C4").PutValue("Y2")
            'Adding a chart to the worksheet
            Dim chartIndex As Int32 = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", True)
            'Setting the data source for the category data of NSeries
            Chart.NSeries.CategoryData = "C1:C4"
            'Setting the display unit of value(Y) axis.
            chart.ValueAxis.DisplayUnit = DisplayUnitType.Hundreds
            Dim displayUnitLabel As DisplayUnitLabel = chart.ValueAxis.DisplayUnitLabel
            'Setting the custom display unit label
            displayUnitLabel.Text = "100"
            'Saving the Excel file
            workbook.Save("C:\\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.RotationAngle">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use DisplayUnitLabel.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.LinkedSource">
      <summary>
            Gets and sets a reference to the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.DisplayUnitLabel.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DisplayUnitLabel.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DisplayUnitType">
      <summary>
            Represents the type of display unit.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.None">
      <summary>
            Display unit is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Hundreds">
      <summary>
            Specifies the values on the chart shall be divided by 100.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Thousands">
      <summary>
            Specifies the values on the chart shall be divided by 1,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.TenThousands">
      <summary>
            Specifies the values on the chart shall be divided by 10,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.HundredThousands">
      <summary>
            Specifies the values on the chart shall be divided by 100,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Millions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.TenMillions">
      <summary>
            Specifies the values on the chart shall be divided by 10,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.HundredMillions">
      <summary>
            Specifies the values on the chart shall be divided by 100,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Billions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Trillions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Cust">
      <summary>
            specifies a custom value for the display unit.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection">
      <summary>
            A collection of built-in document properties.
            </summary>
      <remarks>
        <p>Provides access to <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> objects by their names (using an indexer) and
            via a set of typed properties that return values of appropriate types.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Cells.Properties.DocumentPropertyCollection">
      <summary>
            Base class for <see cref="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection" /> and <see cref="T:Aspose.Cells.Properties.CustomDocumentPropertyCollection" /> collections.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a Workbook object by calling its empty constructor
            Workbook workbook = new Workbook("C:\\book1.xls");
             
            //Retrieve a list of all custom document properties of the Excel file
            DocumentPropertyCollection customProperties = workbook.Worksheets.CustomDocumentProperties;
             
            //Accessng a custom document property by using the property index
            DocumentProperty customProperty1 = customProperties[3];
             
            //Accessng a custom document property by using the property name
            DocumentProperty customProperty2 = customProperties["Owner"];
            
            [VB.NET]
            
            'Instantiate a Workbook object by calling its empty constructor
            Dim workbook As Workbook = New Workbook("C:\\book1.xls")
             
            'Retrieve a list of all custom document properties of the Excel file
            Dim customProperties As DocumentPropertyCollection = workbook.Worksheets.CustomDocumentProperties
             
            'Accessng a custom document property by using the property index
            Dim customProperty1 As DocumentProperty = customProperties(3)
             
            'Accessng a custom document property by using the property name
            Dim customProperty2 As DocumentProperty = customProperties("Owner")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Contains(System.String)">
      <summary>
            Returns true if a property with the specified name exists in the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>True if the property exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.IndexOf(System.String)">
      <summary>
            Gets the index of a property by name.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Remove(System.String)">
      <summary>
            Removes a property with the specified name from the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a property at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Clear">
      <summary>
            Removes all properties from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Count">
      <summary>
            Gets number of items in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>Returns null if a property with the specified name is not found.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Item(System.Int32)">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by index.
            </summary>
      <param name="index">Zero-based index of the <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>The string names of the properties correspond to the names of the typed
            properties available from <see cref="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection" />.</p>
        <p>If you request a property that is not present in the document, but the name
            of the property is recognized as a valid built-in name, a new <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> 
            is created, added to the collection and returned. The newly created property is assigned
            a default value (empty string, zero, false or DateTime.MinValue depending on the type
            of the built-in property).</p>
        <p>If you request a property that is not present in the document and the name
            is not recognized as a built-in name, a null is returned.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Author">
      <summary>
            Gets or sets the name of the document's author.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Bytes">
      <summary>
            Represents an estimate of the number of bytes in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Characters">
      <summary>
            Represents an estimate of the number of characters in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.CharactersWithSpaces">
      <summary>
            Represents an estimate of the number of characters (including spaces) in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Comments">
      <summary>
            Gets or sets the document comments.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Category">
      <summary>
            Gets or sets the category of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.ContentType">
      <summary>
            Gets or sets the content type of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.ContentStatus">
      <summary>
            Gets or sets the content status of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Company">
      <summary>
            Gets or sets the company property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.HyperlinkBase">
      <summary>
            Gets or sets the hyperlinkbase property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.CreatedTime">
      <summary>
            Gets or sets date of the document creation in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Keywords">
      <summary>
            Gets or sets the document keywords.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastPrinted">
      <summary>
            Gets or sets the date when the document was last printed in UTC.
            </summary>
      <remarks>
        <p>If the document was never printed, this property will return DateTime.MinValue.</p>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastSavedBy">
      <summary>
            Gets or sets the name of the last author.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastSavedTime">
      <summary>
            Gets or sets the time of the last save in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Lines">
      <summary>
            Represents an estimate of the number of lines in the document.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Manager">
      <summary>
            Gets or sets the manager property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.NameOfApplication">
      <summary>
            Gets or sets the name of the application.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Pages">
      <summary>
            Represents an estimate of the number of pages in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Paragraphs">
      <summary>
            Represents an estimate of the number of paragraphs in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.RevisionNumber">
      <summary>
            Gets or sets the document revision number. 
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Template">
      <summary>
            Gets or sets the informational name of the document template.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.TotalEditingTime">
      <summary>
            Gets or sets the total editing time in minutes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Version">
      <summary>
            Represents the version number of the application that created the document.
            </summary>
      <remarks>
            It's format is "00.0000",for example : 12.0000
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Words">
      <summary>
            Represents an estimate of the number of words in the document.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomDocumentPropertyCollection">
      <summary>
             A collection of custom document properties. 
             </summary>
      <remarks>
        <p>Each <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object represents a custom property of a container document.</p>
      </remarks>
      <example>
        <code>
             
             [C#]
             
             //Instantiate a Workbook object
             Workbook workbook = new Workbook("C:\\book1.xls");
             
             //Retrieve a list of all custom document properties of the Excel file
             CustomDocumentPropertyCollection customProperties = workbook.Worksheets.CustomDocumentProperties;
            
             [VB.NET]
             
             'Instantiate a Workbook object
             Dim workbook As New Workbook("C:\book1.xls")
             
             'Retrieve a list of all custom document properties of the Excel file
             Dim customProperties As CustomDocumentPropertyCollection = workbook.Worksheets.CustomDocumentProperties
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.String)">
      <overloads>Creates a new custom document property.</overloads>
      <summary>
            Creates a new custom document property of the <b>PropertyType.String</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Int32)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Number</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.DateTime)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.DateTime</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Boolean)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Boolean</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Double)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Float</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.AddLinkToContent(System.String,System.String)">
      <summary>
             Creates a new custom document property which links to content.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="source">The source of the property</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.UpdateLinkedPropertyValue">
      <summary>
            Update custom document property value which links to content.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.UpdateLinkedRange">
      <summary>
            Update custom document property value to linked range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.DocumentProperty">
      <summary>
             Represents a custom or built-in document property.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiate a Workbook object
             Workbook workbook = new Workbook("C:\\book1.xls");
              
             //Retrieve a list of all custom document properties of the Excel file
             DocumentProperties customProperties = workbook.Worksheets.CustomDocumentProperties;
              
             //Accessng a custom document property by using the property index
             DocumentProperty customProperty1 = customProperties[3];
              
             //Accessng a custom document property by using the property name
             DocumentProperty customProperty2 = customProperties["Owner"];
            
             [VB.NET]
             
             'Instantiate a Workbook object
             Dim workbook As Workbook = New Workbook("C:\\book1.xls")
              
             'Retrieve a list of all custom document properties of the Excel file
             Dim customProperties As DocumentProperties = workbook.Worksheets.CustomDocumentProperties
              
             'Accessng a custom document property by using the property index
             Dim customProperty1 As DocumentProperty = customProperties(3)
              
             'Accessng a custom document property by using the property name
             Dim customProperty2 As DocumentProperty = customProperties("Owner")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToString">
      <summary>
            Returns the property value as a string.
            </summary>
      <remarks>
        <p>Converts a number property using Object.ToString(). Converts a boolean property
            into "Y" or "N". Converts a date property into a short date string.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToInt">
      <summary>
            Returns the property value as integer.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Number.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToDouble">
      <summary>
            Returns the property value as double.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Float.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToDateTime">
      <summary>
            Returns the property value as DateTime in local timezone.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Date.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToBool">
      <summary>
            Returns the property value as bool.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Boolean.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Name">
      <summary>
            Returns the name of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Value">
      <summary>
            Gets or sets the value of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.IsLinkedToContent">
      <summary>
            Indicates whether this property is linked to content
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Source">
      <summary>
            The linked content source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Type">
      <summary>
            Gets the data type of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.IsGeneratedName">
      <summary>
            Returns true if this property does not have a name in the OLE2 storage
            and a unique name was generated only for the public API.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.PropertyType">
      <summary>
            Specifies data type of a document property.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Boolean">
      <summary>
            The property is a boolean value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.DateTime">
      <summary>
            The property is a date time value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Double">
      <summary>
            The property is a floating number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Number">
      <summary>
            The property is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.String">
      <summary>
            The property is a string value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Blob">
      <summary>
            The property is a byte array.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DropBars">
      <summary>
            Represents the up/down bars in a chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DropBars.Border">
      <summary>
            Gets the border <see cref="T:Aspose.Cells.Drawing.Line" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.DropBars.Area">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.DropBars.Area" />.
            </summary>
    </member>
    <member name="T:Aspose.Cells.EncryptionType">
      <summary>
            Encryption Type. 
            Only used by excel2003.
            We will encrypt 2007/2010 workbook using SHA AES the same as Excel does, and this EncryptionType will be ignored. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.XOR">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.Compatible">
      <summary>
             Office 97/2000 compatible.
             </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.EnhancedCryptographicProviderV1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.StrongCryptographicProvider">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ErrorBar">
      <summary>
             Represents error bar of data series.
             </summary>
      <example>
        <code>
             [C#]
             Workbook workbook = new Workbook();
             Cells cells = workbook.Worksheets[0].Cells;
             cells["a1"].PutValue(2);
             cells["a2"].PutValue(5);
             cells["a3"].PutValue(3);
             cells["a4"].PutValue(6);
             cells["b1"].PutValue(4);
             cells["b2"].PutValue(3);
             cells["b3"].PutValue(6);
             cells["b4"].PutValue(7);
             
             cells["C1"].PutValue("Q1");
             cells["C2"].PutValue("Q2");
             cells["C3"].PutValue("Y1");
             cells["C4"].PutValue("Y2");
             
             int chartIndex = excel.Worksheets[0].Charts.Add(ChartType.Column, 11, 0, 27, 10);
             
             Chart chart = excel.Worksheets[0].Charts[chartIndex];
             chart.NSeries.Add("A1:B4", true);
             
             chart.NSeries.CategoryData = "C1:C4";
             
             for(int i = 0; i &lt; chart.NSeries.Count; i ++)
             {
            		ASeries aseries = chart.NSeries[i];
            		aseries.ErrorBar.DisplayType = ErrorBarDisplayType.Minus;
            		aseries.ErrorBar.Type = ErrorBarType.FixedValue;
            		aseries.ErrorBar.Amount = 5;
             }
            
             [Visual Basic]
             Dim workbook As Workbook =  New Workbook() 
             Dim cells As Cells =  workbook.Worksheets(0).Cells 
             cells("a1").PutValue(2)
             cells("a2").PutValue(5)
             cells("a3").PutValue(3)
             cells("a4").PutValue(6)
             cells("b1").PutValue(4)
             cells("b2").PutValue(3)
             cells("b3").PutValue(6)
             cells("b4").PutValue(7)
             
             cells("C1").PutValue("Q1")
             cells("C2").PutValue("Q2")
             cells("C3").PutValue("Y1")
             cells("C4").PutValue("Y2")
             
             Dim chartIndex As Integer =  excel.Worksheets(0).Charts.Add(ChartType.Column,11,0,27,10) 
             
             Dim chart As Chart =  excel.Worksheets(0).Charts(chartIndex) 
             chart.NSeries.Add("A1:B4", True)
             
             chart.NSeries.CategoryData = "C1:C4"
            
             Dim i As Integer
             For  i = 0 To chart.NSeries.Count - 1
             Dim aseries As ASeries =  chart.NSeries(i) 
             aseries.ErrorBar.DisplayType = ErrorBarDisplayType.Minus
             aseries.ErrorBar.Type = ErrorBarType.FixedValue
             aseries.ErrorBar.Amount = 5
             Next
             </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.Drawing.Line">
      <summary>
            Encapsulates the object that represents the line format.
            </summary>
      <example>
        <code>
            
            [C#]
            //Applying a dotted line style on the lines of an NSeries
            chart.NSeries[0].Line.Style = LineType.Dot;
            //Applying a triangular marker style on the data markers of an NSeries
            chart.NSeries[0].MarkerStyle = ChartMarkerType.Triangle;
            //Setting the weight of all lines in an NSeries to medium
            chart.NSeries[1].Line.Weight = WeightType.MediumLine;
            
            [Visual Basic]
            
            'Applying a dotted line style on the lines of an NSeries
            chart.NSeries(0).Line.Style = LineType.Dot
            'Applying a triangular marker style on the data markers of an NSeries
            chart.NSeries(0).MarkerStyle = ChartMarkerType.Triangle
            'Setting the weight of all lines in an NSeries to medium
            chart.NSeries(1).Line.Weight = WeightType.MediumLine
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.CompoundType">
      <summary>
            Specifies the compound line type 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.DashType">
      <summary>
            Specifies the dash line type 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.CapType">
      <summary>
            Specifies the ending caps.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.JoinType">
      <summary>
            Specifies the joining caps.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.BeginType">
      <summary>
            Specifies an arrowhead for the begin of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.EndType">
      <summary>
            Specifies an arrowhead for the end of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.BeginArrowLength">
      <summary>
            Specifies the length of the arrowhead for the begin of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.EndArrowLength">
      <summary>
            Specifies the length of the arrowhead for the end of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.BeginArrowWidth">
      <summary>
            Specifies the width of the arrowhead for the begin of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.EndArrowWidth">
      <summary>
            Specifies the width of the arrowhead for the end of a line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.Color">
      <summary>
            Represents the <see cref="T:System.Drawing.Color" /> of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.Transparency">
      <summary>
            Returns or sets the degree of transparency of the line as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.Style">
      <summary>
            Represents the style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.Weight">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Drawing.WeightType" /> of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.WeightPt">
      <summary>
            Gets or sets the weight of the line in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.WeightPx">
      <summary>
            Gets or sets the weight of the line in uni of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.FormattingType">
      <summary>
            Gets or sets format type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.IsAutomaticColor">
      <summary>
            Indicates whether the color of line is auotmatic assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.IsVisible">
      <summary>
            Represents whether the line is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.IsAuto">
      <summary>
            Indicates whether this line style is auto assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Line.GradientFill">
      <summary>
            Represents gradient fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.Type">
      <summary>
            Represents error bar amount type.
            </summary>
      <example>
        <code>
            [C#]
            //Sets custom error bar type
            aseries.ErrorBar.Type = ErrorBarType.Custom;
            aseries.ErrorBar.PlusValue = "=Sheet1!A1";
            aseries.ErrorBar.MinusValue = "=Sheet1!A2";
            
            [Visual Basic]
            'Sets custom error bar type
            aseries.ErrorBar.Type = ErrorBarType.Custom
            aseries.ErrorBar.PlusValue = "=Sheet1!A1"
            aseries.ErrorBar.MinusValue = "=Sheet1!A2"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.DisplayType">
      <summary>
            Represents error bar display type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.Amount">
      <summary>
            Represents amount of error bar.
            <remarks> The amount must be greater than and equal to zero.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.ShowMarkerTTop">
      <summary>
            Indicates if formatting error bars with a T-top.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.PlusValue">
      <summary>
            Represents positive error amount when error bar type is Custom.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.ErrorBar.MinusValue">
      <summary>
            Represents negative error amount when error bar type is Custom.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ErrorBarType">
      <summary>
            Represents error bar amount type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.Custom">
      <summary>
            Custom value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.FixedValue">
      <summary>
            Fixed value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.Percent">
      <summary>
            Percentage type
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.StDev">
      <summary>
            Standard deviation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.StError">
      <summary>
            Standar error type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExceptionType">
      <summary>
            Represents custom exception type code.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Chart">
      <summary>
            Invalid chart setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataType">
      <summary>
            Invalid data type setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataValidation">
      <summary>
            Invalid data validation setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.ConditionalFormatting">
      <summary>
            Invalid data validation setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.FileFormat">
      <summary>
            Invalid file format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Formula">
      <summary>
            Invalid formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.InvalidData">
      <summary>
            Invalid data.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.InvalidOperator">
      <summary>
            Invalid operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.IncorrectPassword">
      <summary>
            Incorrect password.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.License">
      <summary>
            License related errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Limitation">
      <summary>
            Out of MS Excel limitation error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PageSetup">
      <summary>
            Invalid page setup setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PivotTable">
      <summary>
            Invalid pivotTable setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Shape">
      <summary>
            Invalid drawing object setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Sparkline">
      <summary>
            Invalid sparkline object setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetName">
      <summary>
            Invalid worksheet name.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetType">
      <summary>
            Invalid worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Interrupted">
      <summary>
            The operator is interrupted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.IO">
      <summary>
            The file is invalid.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedFeature">
      <summary>
            Unsupported feature.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedStream">
      <summary>
            Unsupported stream to be opened.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UndisclosedInformation">
      <summary>
            Files contains some undisclosed information.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLink">
      <summary>
             Represents an external link in a workbook.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Open a file with external links
             Workbook workbook = new Workbook("d:\\book1.xls");
             
             //Get External Link 
             ExternalLink externalLink = workbook.Worksheets.ExternalLinks[0];
             
             //Change External Link's Data Source
             externalLink.DataSource = "d:\\link.xls";
            
             [VB.NET]
             
             'Open a file with external links
             Dim workbook As New Workbook("d:\book1.xls")
             
             'Get External Link 
             Dim externalLink As ExternalLink = workbook.Worksheets.ExternalLinks(0)
             
             'Change External Link's Data Source
             externalLink.DataSource = "d:\link.xls"
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ExternalLink.AddExternalName(System.String,System.String)">
      <summary>
            Adds an external name.
            </summary>
      <param name="text">The text of the external name.
            If the external name belongs to a worksheet, the text should be as Sheet1!Text.
            </param>
      <param name="referTo">The referTo of the external name. It must be a cell or the range.</param>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.OriginalDataSource">
      <summary>
            Represents stored data source of the external link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.DataSource">
      <summary>
            Represents data source of the external link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.IsReferred">
      <summary>
            Indicates whether this external link is refered by others.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLinkCollection">
      <summary>
            Represents external links collection in a workbook.
            </summary>
      <example>
        <code>
            [C#]
            //Open a file with external links
            Workbook workbook = new Workbook("d:\\book1.xls");
            
            //Change external link data source
            workbook.Worksheets.ExternalLinks[0].DataSource = "d:\\link.xls";
            
            
            [Visual Basic]
            'Open a file with external links
            Dim workbook As Workbook =  New Workbook("d:\\book1.xls")
            
            'Change external link data source
            workbook.Worksheets.ExternalLinks(0).DataSource = "d:\\link.xls"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ExternalLinkCollection.Add(System.String,System.String[])">
      <summary>
            Adds an external link.
            </summary>
      <param name="fileName">The external file name.</param>
      <param name="sheetNames">All sheet names of the external file.</param>
      <returns>The position of the external name in this list. </returns>
    </member>
    <member name="M:Aspose.Cells.ExternalLinkCollection.Add(Aspose.Cells.DirectoryType,System.String,System.String[])">
      <summary>
            Add an external link .
            </summary>
      <param name="directoryType">The directory type of the file name.</param>
      <param name="fileName">the file name.</param>
      <param name="sheetNames">All sheet names of the external file.</param>
      <returns>The position of the external name in this list. </returns>
    </member>
    <member name="P:Aspose.Cells.ExternalLinkCollection.Count">
      <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLinkCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalLink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.FileFormatType">
      <summary>
            Enumerates spreadsheet file format types
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.AsposePdf">
      <summary>
            Saves the spreadsheet in Aspose.Pdf.Xml format that can be read by Aspose.Pdf to produce a PDF file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Pdf" /> property.
            This property will be removed 6 months later since April 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Default">
      <summary>
            Represents an Excel 97-2003 xls file.        
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Excel97To2003" />property.
            This property will be removed 12 months later since March 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsx">
      <summary>
            Represents an xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsx">
      <summary>
            Represents an xlsx file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsx" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsm" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xltx">
      <summary>
            Represents a template xltx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xltx">
      <summary>
            Represents a template xltx file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xltx" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xltm">
      <summary>
            Represents a macro-enabled template xltm file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlam">
      <summary>
            Represents a addinMacro-enabled template xltm file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xltm">
      <summary>
            Represents a macro-enabled template xltm file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xltm" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2003XML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsb">
      <summary>
            Represents an xlsb file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsb" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Unknown">
      <summary>
            Represents unrecognized format, cannot be loaded. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pdf">
      <summary>
            Represents a Pdf file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.XPS">
      <summary>
            Represents an XPS file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.TIFF">
      <summary>
            Represents a TIFF file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.SVG">
      <summary>
            Represents a svg file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel95">
      <summary>
            Represents an Excel95 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel4">
      <summary>
            Represents an Excel4.0 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel3">
      <summary>
            Represents an Excel3.0 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2">
      <summary>
            Represents an Excel2.1 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pptx">
      <summary>
            Represents a pptx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Docx">
      <summary>
            Represents a docx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dif">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Doc">
      <summary>
            Represents a doc file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppt">
      <summary>
            Represents a ppt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MapiMessage">
      <summary>
            Represents a email file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MSEquation">
      <summary>
            Represents the MS Equation 3.0 object.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ole10Native">
      <summary>
            Represents the embedded native object.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.VSD">
      <summary>
            Represents MS Visio VSD binary format.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.VSDX">
      <summary>
            MS Visio 2013 VSDX file format.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Docm">
      <summary>
            Represents a docm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dotx">
      <summary>
            Represents a dotx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dotm">
      <summary>
            Represents a dotm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pptm">
      <summary>
            Represents a pptm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Potx">
      <summary>
            Represents a Potx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Potm">
      <summary>
            Represents a Potm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppsx">
      <summary>
            Represents a ppsx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppsm">
      <summary>
            Represents a ppsm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ooxml">
      <summary>
            Represents office open xml file(such as xlsx, docx,pptx, etc).
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            If the office open xml file is encrypted, it could not be dectected as xlsx ,docx, pptx,etc.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODT">
      <summary>
            Represents a odt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODP">
      <summary>
            Represents a odp file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODF">
      <summary>
            Represents a odf file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODG">
      <summary>
            Represents a odg file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.XML">
      <summary>
            Represents an simple xml file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlt">
      <summary>
            Represents a template xlt file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.OTT">
      <summary>
            Represents a odt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for dectecting file type. 
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillFormat">
      <summary>
            Encapsulates the object that represents fill formatting for a shape.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Filling the area of the 2nd NSeries with a gradient
            chart.NSeries[1].Area.FillFormat.SetOneColorGradient(Color.Lime, 1, GradientStyleType.Horizontal, 1);
            
            [Visual Basic]
            
            'Filling the area of the 2nd NSeries with a gradient
            chart.NSeries(1).Area.FillFormat.SetOneColorGradient(Color.Lime, 1, GradientStyleType.Horizontal, 1)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.FillFormat.SetOneColorGradient(System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a one-color gradient.
            </summary>
      <param name="color">One gradient color.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.FillFormat.SetTwoColorGradient(System.Drawing.Color,System.Drawing.Color,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.FillFormat.SetTwoColorGradient(System.Drawing.Color,System.Double,System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="transparency1">The degree of transparency of the color1 as a value from 0.0 (opaque) through 1.0 (clear).</param>
      <param name="color2">Two gradient color.</param>
      <param name="transparency2">The degree of transparency of the color2 as a value from 0.0 (opaque) through 1.0 (clear).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.FillFormat.SetPresetColorGradient(Aspose.Cells.Drawing.GradientPresetType,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a preset-color gradient.
            </summary>
      <param name="presetColor">Preset color type</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.Type">
      <summary>
            The fill format type
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.Transparency">
      <summary>
            Returns or sets the degree of transparency of the area as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.SetType">
      <summary>
            Gets the fill format set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientFill">
      <summary>
            Gets <see cref="P:Aspose.Cells.Drawing.FillFormat.GradientFill" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.TextureFill">
      <summary>
             Gets <see cref="P:Aspose.Cells.Drawing.FillFormat.TextureFill" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.SolidFill">
      <summary>
            Gets <see cref="P:Aspose.Cells.Drawing.FillFormat.SolidFill" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.PatternFill">
      <summary>
            Gets <see cref="P:Aspose.Cells.Drawing.FillFormat.PatternFill" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientColorType">
      <summary>
            Returns the gradient color type for the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientStyle">
      <summary>
            Returns the gradient style for the specified fill. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientColor1">
      <summary>
            Returns the gradient color 1 for the the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientColor2">
      <summary>
            Returns the gradient color 2 for the the specified fill.
            </summary>
      <remarks>Only when the graident color type is GradientColorType.TwoColors, this property is meaningful.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientDegree">
      <summary>
            Returns the gradient degree for the the specified fill.
            </summary>
      <remarks>Can only be a value from 0.0 (dark) through 1.0 (light).</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.GradientVariant">
      <summary>
            Returns the gradient variant for the the specified fill.
            </summary>
      <remarks>Can only be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.PresetColor">
      <summary>
            Returns the gradient preset color for the the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.Texture">
      <summary>
            Represents the texture type for the specified fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.Pattern">
      <summary>
            Represents an area's display pattern.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.PictureFormatType">
      <summary>
            Gets and sets the picture format type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.Scale">
      <summary>
            Gets and sets the picture format scale.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.FillFormat.ImageData">
      <summary>
            Gets and sets the picture image data.
            </summary>
      <remarks>If the fill format is not custom texture format,return null.</remarks>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillPattern">
      <summary>
            Enumerates shape fill pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray5">
      <summary>
            Represents 5% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray10">
      <summary>
            Represents 10% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray20">
      <summary>
            Represents 20% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray30">
      <summary>
            Represents 30% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray40">
      <summary>
            Represents 40% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray60">
      <summary>
            Represents 60% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray70">
      <summary>
            Represents 70% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray80">
      <summary>
            Represents 80% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray90">
      <summary>
            Represents 90% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightDownwardDiagonal">
      <summary>
            Represents light downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightUpwardDiagonal">
      <summary>
            Represents light upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkDownwardDiagonal">
      <summary>
            Represents dark downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkUpwardDiagonal">
      <summary>
            Represents dark upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.WideDownwardDiagonal">
      <summary>
            Represents wide downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.WideUpwardDiagonal">
      <summary>
            Represents wide upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightVertical">
      <summary>
            Represents light vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightHorizontal">
      <summary>
            Represents light horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.NarrowVertical">
      <summary>
            Represents narrow vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.NarrowHorizontal">
      <summary>
            Represents narrow horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkVertical">
      <summary>
            Represents dark vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkHorizontal">
      <summary>
            Represents dark horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedDownwardDiagonal">
      <summary>
            Represents dashed downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedUpwardDiagonal">
      <summary>
            Represents dashed upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedVertical">
      <summary>
            Represents dashed vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedHorizontal">
      <summary>
            Represents dashed horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallConfetti">
      <summary>
            Represents small confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeConfetti">
      <summary>
            Represents large confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.ZigZag">
      <summary>
            Represents zig zag pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Wave">
      <summary>
            Represents wave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DiagonalBrick">
      <summary>
            Represents diagonal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.HorizontalBrick">
      <summary>
            Represents horizontal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Weave">
      <summary>
            Represents weave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Plaid">
      <summary>
            Represents plaid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Divot">
      <summary>
            Represents divot pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DottedGrid">
      <summary>
            Represents dotted grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DottedDiamond">
      <summary>
            Represents dotted diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Shingle">
      <summary>
            Represents shingle pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Trellis">
      <summary>
            Represents trellis pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Sphere">
      <summary>
            Represents sphere pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallGrid">
      <summary>
            Represents small grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeGrid">
      <summary>
            Represents large grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallCheckerBoard">
      <summary>
            Represents small checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeCheckerBoard">
      <summary>
            Represents large checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.OutlinedDiamond">
      <summary>
            Represents outlined diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SolidDiamond">
      <summary>
            Represents solid diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Unknown">
      <summary>
            Represents unkown pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FilterColumn">
      <summary>
            Represents a filter for a single column. The Filter object is a member of the Filters collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.Visibledropdown">
      <summary>
            Indicates whether the AutoFilter button for this column is visible. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.Filter">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.FilterType">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.FieldIndex">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.FilterOperatorType">
      <summary>
            Custom Filter operator type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.LessThan">
      <summary>
            Represents LessThan operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.Equal">
      <summary>
            Represents Equal operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.NotEqual">
      <summary>
            Represents NotEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FilterColumnCollection">
      <summary>
            A collection of Filter objects that represents all the filters in an autofiltered range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FilterColumnCollection.RemoveAt(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Aspose.Cells.FilterColumnCollection.GetByIndex(System.Int32)">
      <summary>
            Returns a single Filter object from a collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumnCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.FilterColumn" /> object at the special field.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <returns>
            Returens <see cref="T:Aspose.Cells.FilterColumn" /> object.
            </returns>
    </member>
    <member name="T:Aspose.Cells.Charts.Floor">
      <summary>
            Encapsulates the object that represents the floor of a 3-D chart.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate the License class
            Aspose.Cells.License license = new Aspose.Cells.License();
            
            //Pass only the name of the license file embedded in the assembly
            license.SetLicense("Aspose.Cells.lic");
            
            //Instantiate the workbook object
            Workbook workbook = new Workbook();
            
            //Get cells collection
            Cells cells = workbook.Worksheets[0].Cells;
            
            //Put values in cells
            cells["A1"].PutValue(1);
            
            cells["A2"].PutValue(2);
            
            cells["A3"].PutValue(3);
            
            //get charts colletion
            Charts charts = workbook.Worksheets[0].Charts;
            
            //add a new chart 
            int index = charts.Add(ChartType.Column3DStacked, 5, 0, 15, 5);
            
            //get the newly added chart
            Chart chart = charts[index];
            
            //set charts nseries
            chart.NSeries.Add("A1:A3", true);
            
            //Show data labels
            chart.NSeries[0].DataLabels.IsValueShown = true;
            
            //Get chart's floor
            Floor floor = chart.Floor;
            
            //set floor's border as red
            floor.Border.Color = System.Drawing.Color.Red;
            
            //set fill format
            floor.FillFormat.SetPresetColorGradient(GradientPresetType.CalmWater, GradientStyleType.DiagonalDown, 2); 
            
            //save the file
            workbook.Save(@"d:\dest.xls");
            
            [VB.NET]
            
            'Instantiate the License class
            Dim license As New Aspose.Cells.License()
            
            'Pass only the name of the license file embedded in the assembly
            license.SetLicense("Aspose.Cells.lic")
            
            'Instantiate the workbook object
            Dim workbook As New Workbook()
            
            'Get cells collection
            Dim cells As Cells = workbook.Worksheets(0).Cells
            
            'Put values in cells
            cells("A1").PutValue(1)
            
            cells("A2").PutValue(2)
            
            cells("A3").PutValue(3)
            
            'get charts colletion
            Dim charts As Charts = workbook.Worksheets(0).Charts
            
            'add a new chart 
            Dim index As Integer = charts.Add(ChartType.Column3DStacked, 5, 0, 15, 5)
            
            'get the newly added chart
            Dim chart As Chart = charts(index)
            
            'set charts nseries
            chart.NSeries.Add("A1:A3", True)
            
            'Show data labels
            chart.NSeries(0).DataLabels.IsValueShown = True
            
            'Get chart's floor
            Dim floor As Floor = chart.Floor
            
            'set floor's border as red
            floor.Border.Color = System.Drawing.Color.Red
            
            'set fill format
            floor.FillFormat.SetPresetColorGradient(GradientPresetType.CalmWater, GradientStyleType.DiagonalDown, 2)
            
            'save the file
            workbook.Save("d:\dest.xls")
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Floor.Border">
      <summary>
            Gets or sets the border <see cref="T:Aspose.Cells.Drawing.Line" />.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FontUnderlineType">
      <summary>
            Enumerates the font underline types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.None">
      <summary>
            Represents no underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Single">
      <summary>
            Represents single underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Double">
      <summary>
            Represents double underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Accounting">
      <summary>
            Represents single accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DoubleAccounting">
      <summary>
            Represents double accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Dash">
      <summary>
            Represents Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashDotDotHeavy">
      <summary>
            Represents Thick Dash-Dot-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashDotHeavy">
      <summary>
            Represents Thick Dash-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashedHeavy">
      <summary>
            Represents Thick Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashLong">
      <summary>
            Represents Long Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashLongHeavy">
      <summary>
            Represents Thick Long Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DotDash">
      <summary>
            Represents Dash-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DotDotDash">
      <summary>
            Represents Dash-Dot-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Dotted">
      <summary>
            Represents Dotted Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DottedHeavy">
      <summary>
            Represents Thick Dotted Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Heavy">
      <summary>
            Represents Thick Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Wave">
      <summary>
            Represents Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.WavyDouble">
      <summary>
            Represents Double Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.WavyHeavy">
      <summary>
            Represents Heavy Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Words">
      <summary>
            Represents Underline Non-Space Characters Only
            </summary>
    </member>
    <member name="T:Aspose.Cells.FormatCondition">
      <summary>
            Represents conditional formatting condition.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            Worksheet sheet = workbook.Worksheets[0];
             
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            FormatConditionCollection fcs = sheet.ConditionalFormattings[index];
             
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            ca.StartRow = 0;
            ca.EndRow = 0;
            ca.StartColumn = 0;
            ca.EndColumn = 0;
            fcs.AddArea(ca);
             
            ca = new CellArea();
            ca.StartRow = 1;
            ca.EndRow = 1;
            ca.StartColumn = 1;
            ca.EndColumn = 1;
            fcs.AddArea(ca);
             
            //Adds condition.
            int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
             
            //Adds condition.
            int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
             
            //Sets the background color.
            FormatCondition fc = fcs[conditionIndex];
            fc.Style.BackgroundColor = Color.Red;
             
            //Saving the Excel file
            workbook.Save("C:\\output.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            Dim sheet As Worksheet = workbook.Worksheets(0)
             
            ' Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            Dim fcs As FormatConditionCollection = sheet.ConditionalFormattings(index)
             
            'Sets the conditional format range.
            Dim ca As CellArea = New CellArea()
            ca.StartRow = 0
            ca.EndRow = 0
            ca.StartColumn = 0
            ca.EndColumn = 0
            fcs.AddArea(ca)
            ca = New CellArea()
            ca.StartRow = 1
            ca.EndRow = 1
            ca.StartColumn = 1
            ca.EndColumn = 1
            fcs.AddArea(ca)
             
            'Adds condition.
            Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
             
            'Adds condition.
            Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
             
            'Sets the background color.
            Dim fc As FormatCondition = fcs(conditionIndex)
            fc.Style.BackgroundColor = Color.Red
             
            'Saving the Excel file
            workbook.Save("C:\output.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.FormatCondition.GetFormula1(System.Int32,System.Int32)">
      <summary>
            Gets the formula of the conditional formatting of the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>The formula.</returns>
    </member>
    <member name="M:Aspose.Cells.FormatCondition.GetFormula2(System.Int32,System.Int32)">
      <summary>
            Gets the formula of the conditional formatting of the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>The formula.</returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula1">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
      <remarks>
            Please add all areas before setting formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula2">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
      <remarks>
            Please add all areas before setting formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Operator">
      <summary>
            Gets and sets the conditional format operator type.
            </summary>
      <see cref="T:Aspose.Cells.OperatorType" />
    </member>
    <member name="P:Aspose.Cells.FormatCondition.StopIfTrue">
      <summary>
            True, no rules with lower priority may be applied over this rule, when this rule evaluates to true.
            Only applies for Excel 2007;
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Priority">
      <summary>
            The priority of this conditional formatting rule. This value is used to determine which
            format should be evaluated and rendered. Lower numeric values are higher priority than
            higher numeric values, where '1' is the highest priority.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Style">
      <summary>
            Gets or setts style of conditional formatted cell ranges.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Type">
      <summary>
            Gets and sets whether the conditional format Type.
            </summary>
      <see cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="P:Aspose.Cells.FormatCondition.IconSet">
      <summary>
            Get the conditional formatting's "IconSet" instance.
            The default instance's IconSetType is TrafficLights31.
            Valid only for type = IconSet.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.DataBar">
      <summary>
            Get the conditional formatting's "DataBar" instance.
            The default instance's color is blue.
            Valid only for type = DataBar.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.ColorScale">
      <summary>
            Get the conditional formatting's "ColorScale" instance.
            The default instance is a "green-yellow-red" 3ColorScale .
            Valid only for type = ColorScale.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Top10">
      <summary>
            Get the conditional formatting's "Top10" instance.
            The default instance's rule highlights cells whose
            values fall in the top 10 bracket.
            Valid only for type = Top10.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.AboveAverage">
      <summary>
            Get the conditional formatting's "AboveAverage" instance.
            The default instance's rule highlights cells that are 
            above the average for all values in the range.
            Valid only for type = AboveAverage.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Text">
      <summary>
            The text value in a "text contains" conditional formatting rule. 
            Valid only for type = containsText, notContainsText, beginsWith and endsWith.
            The default value is null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.TimePeriod">
      <summary>
            The applicable time period in a "date occurring¡­" conditional formatting rule. 
            Valid only for type = timePeriod.
            The default value is TimePeriodType.Today.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AboveAverage">
      <summary>
            Describe the AboveAverage conditional formatting rule. 
            This conditional formatting rule highlights cells that
            are above or below the average for all values in the range. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.IsAboveAverage">
      <summary>
            Get or set the flag indicating whether the rule is an "above average" rule. 
            'true' indicates 'above average'.
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.IsEqualAverage">
      <summary>
            Get or set the flag indicating whether the 'aboveAverage' and 'belowAverage' criteria 
            is inclusive of the average itself, or exclusive of that value. 
            'true' indicates to include the average value in the criteria.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.StdDev">
      <summary>
            Get or set the number of standard deviations to include above or below the average in the
            conditional formatting rule. 
            The input value must between 0 and 3 (include 0 and 3). 
            Setting this value to 0 means stdDev is not set.
            The default value is 0.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FormatConditionCollection">
      <summary>
             Represents conditional formatting.
             The FormatConditions can contain up to three conditional formats. 
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Adds an empty conditional formatting
             int index = sheet.ConditionalFormattings.Add();
             FormatConditionCollection fcs = sheet.ConditionalFormattings[index];
             //Sets the conditional format range.
             CllArea ca = new CellArea();
             ca.StartRow = 0;
             ca.EndRow = 0;
             ca.StartColumn = 0;
             ca.EndColumn = 0;
             fcs.AddArea(ca);
             ca = new CellArea();
             ca.StartRow = 1;
             ca.EndRow = 1;
             ca.StartColumn = 1;
             ca.EndColumn = 1;
             fcs.AddArea(ca);
             //Adds condition.
             int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
             //Adds condition.
             int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
             //Sets the background color.
             FormatCondition fc = fcs[conditionIndex];
             fc.Style.BackgroundColor = Color.Red;
             //Saving the Excel file
             workbook.Save("C:\\output.xls");   
             
             [Visual Basic]
            
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             Dim sheet As Worksheet = workbook.Worksheets(0)
             ' Adds an empty conditional formatting
             Dim index As Integer = sheet.ConditionalFormattings.Add()
             Dim fcs As FormatConditionCollection = sheet.ConditionalFormattings(index)
             'Sets the conditional format range.
             Dim ca As CellArea = New CellArea()
             ca.StartRow = 0
             ca.EndRow = 0
             ca.StartColumn = 0
             ca.EndColumn = 0
             fcs.AddArea(ca)
             ca = New CellArea()
             ca.StartRow = 1
             ca.EndRow = 1
             ca.StartColumn = 1
             ca.EndColumn = 1
             fcs.AddArea(ca)
             'Adds condition.
             Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
             'Adds condition.
             Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
             'Sets the background color.
             Dim fc As FormatCondition = fcs(conditionIndex)
             fc.Style.BackgroundColor = Color.Red
             'Saving the Excel file
             workbook.Save("C:\output.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.Add(Aspose.Cells.CellArea,Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition and effected cell rang to the FormatConditions
             The FormatConditions can contain up to three conditional formats.
             References to the other sheets are not allowed in the formulas of conditional formattin
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <param name="type">Type of conditional formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">Comparison operator.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditional formatting.</param>
      <param name="formula2">The value or expression associated with conditional formatting</param>
      <returns>[0]:Formatting condition object index;[1] Effected cell rang index.</returns>
      <see cref="T:Aspose.Cells.OperatorType" />
      <set cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddArea(Aspose.Cells.CellArea)">
      <summary>
            Adds a conditional formatted cell range.
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <returns>Conditional formatted cell rang index.</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddCondition(Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition.
            </summary>
      <param name="type">
        <set cref="T:Aspose.Cells.FormatConditionType" /> of conditinal formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">The comparison <see cref="T:Aspose.Cells.OperatorType" />.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditinal formatting.</param>
      <param name="formula2">The value or expression associated with conditinal formatting.</param>
      <returns>Formatting condition object index;</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddCondition(Aspose.Cells.FormatConditionType)">
      <summary>
            Add a format condition.
            </summary>
      <param name="type">Format condition type.</param>
      <returns>Formatting condition object index;</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.GetCellArea(System.Int32)">
      <summary>
            Gets the conditional formatted cell range by index.
            </summary>
      <param name="index">the index of the coditional formatted cell range.</param>
      <returns>the conditional formatted cell range</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveArea(System.Int32)">
      <summary>
            Removes conditional formatted cell range by index.
            </summary>
      <param name="index">The index of the conditional formatted cell range to be removed.</param>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove conditional formatting int the range.
            </summary>
      <param name="startRow">The startRow of the range.</param>
      <param name="startColumn">The startColumn of the range.</param>
      <param name="totalRows">The number of rows of the range.</param>
      <param name="totalColumns">The number of columns of the range.</param>
      <returns>
            Returns TRUE, this FormatCondtionCollection should be removed.
            </returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveCondition(System.Int32)">
      <summary>
            Removes the formatting condition by index.
            </summary>
      <param name="index">The index of the formatting condition to be removed.</param>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.Count">
      <summary>
            Gets the count of the conditions.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.RangeCount">
      <summary>
            Gets count of conditionally formatted ranges.
             </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.Item(System.Int32)">
      <summary>
            Gets the formatting conidition by index.
            </summary>
      <param name="index">the index of the formatting conidition to return.</param>
      <returns>the formatting conidition </returns>
    </member>
    <member name="T:Aspose.Cells.FormatConditionType">
      <summary>
            Conditional format rule type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.CellValue">
      <summary>
            This conditional formatting rule compares a cell value
            to a formula calculated result, using an operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.Expression">
      <summary>
            This conditional formatting rule contains a formula to
            evaluate. When the formula result is true, the cell is
            highlighted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ColorScale">
      <summary>
            This conditional formatting rule creates a gradated
            color scale on the cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.DataBar">
      <summary>
            This conditional formatting rule displays a gradated
            data bar in the range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.IconSet">
      <summary>
            This conditional formatting rule applies icons to cells
            according to their values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.Top10">
      <summary>
            This conditional formatting rule highlights cells whose
            values fall in the top N or bottom N bracket, as
            specified.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.UniqueValues">
      <summary>
            This conditional formatting rule highlights unique
            values in the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.DuplicateValues">
      <summary>
            This conditional formatting rule highlights duplicated
            values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsText">
      <summary>
            This conditional formatting rule highlights cells
            containing given text. Equivalent to using the SEARCH()
            sheet function to determine whether the cell contains
            the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsText">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.BeginsWith">
      <summary>
            This conditional formatting rule highlights cells in the
            range that begin with the given text. Equivalent to
            using the LEFT() sheet function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.EndsWith">
      <summary>
            This conditional formatting rule highlights cells ending
            with given text. Equivalent to using the RIGHT() sheet
            function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are completely blank. Equivalent of using LEN(TRIM()).
            This means that if the cell contains only characters
            that TRIM() would remove, then it is considered blank.
            An empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsErrors">
      <summary>
            This conditional formatting rule highlights cells with
            formula errors. Equivalent to using ISERROR() sheet
            function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsErrors">
      <summary>
            This conditional formatting rule highlights cells
            without formula errors. Equivalent to using ISERROR()
            sheet function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.TimePeriod">
      <summary>
            This conditional formatting rule highlights cells
            containing dates in the specified time period. The
            underlying value of the cell is evaluated, therefore the
            cell does not need to be formatted as a date to be
            evaluated. For example, with a cell containing the
            value 38913 the conditional format shall be applied if
            the rule requires a value of 7/14/2006.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.AboveAverage">
      <summary>
            This conditional formatting rule highlights cells that
            are above or below the average for all values in the
            range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.FormattingType">
      <summary>
            Represents the type of formatting applied to an <see cref="T:Aspose.Cells.Drawing.Area" /> object or a <see cref="T:Aspose.Cells.Drawing.Line" /> object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.Custom">
      <summary>
            Represents custom formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientColorType">
      <summary>
            Represents the gradient color type for the specified fill.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.None">
      <summary>
            No gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.OneColor">
      <summary>
            One gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.PresetColors">
      <summary>
            Preset gradient colors
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.TwoColors">
      <summary>
            Two gradient colors
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientPresetType">
      <summary>
            Represents gradient preset color type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Brass">
      <summary>
            Brass preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.CalmWater">
      <summary>
            Calm Water preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Chrome">
      <summary>
            Chrome preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.ChromeII">
      <summary>
            Chrome II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Daybreak">
      <summary>
            Daybreak preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Desert">
      <summary>
            Desert preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.EarlySunset">
      <summary>
            Early Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Fire">
      <summary>
            Fire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Fog">
      <summary>
            Fog preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Gold">
      <summary>
            Gold preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.GoldII">
      <summary>
            Gold II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Horizon">
      <summary>
            Horizon preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.LateSunset">
      <summary>
            Late Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Mahogany">
      <summary>
            Mahogany preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Moss">
      <summary>
            Moss preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Nightfall">
      <summary>
            Nightfall preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Ocean">
      <summary>
            Ocean preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Parchment">
      <summary>
            Parchment preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Peacock">
      <summary>
            Peacock preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Rainbow">
      <summary>
            Rainbow preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.RainbowII">
      <summary>
            Rainbow II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Sapphire">
      <summary>
            Sapphire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Silver">
      <summary>
            Silver preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Wheat">
      <summary>
            Wheat preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Unknown">
      <summary>
            Unknown preset color.
            Only for the preset color (which is not same as any known preset color) in the template workbook.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientStyleType">
      <summary>
            Represents gradient shading style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.DiagonalDown">
      <summary>
            Diagonal down shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.DiagonalUp">
      <summary>
            Diagonal up shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.FromCenter">
      <summary>
            From center shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.FromCorner">
      <summary>
            From corner shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Horizontal">
      <summary>
            Horizontal shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Vertical">
      <summary>
            Vertical shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Unknown">
      <summary>
            Uknown shading style.Only for the shading style(which is not for any memeber of the GradientStyleType) in the template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GroupBox">
      <summary>
            Encapsulates the object that represents a groupbox in a spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook.
            Workbook excelbook = new Workbook();
             
            //Add a group box to the first worksheet.
            Aspose.Cells.GroupBox box = excelbook.Worksheets[0].Shapes.AddGroupBox(1, 0, 1, 0, 300, 250);
             
            //Set the caption of the group box.
            box.Text = "Age Groups";
            box.Placement = PlacementType.FreeFloating;
             
            //Make it 2-D box.
            box.Shadow = false;
             
            //Add a radio button.
            Aspose.Cells.RadioButton radio1 = excelbook.Worksheets[0].Shapes.AddRadioButton(3, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio1.Text = "20-29";
             
            //Set A1 cell as a linked cell for the radio button.
            radio1.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio1.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio1.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio1.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio1.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio1.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio1.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio1.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio1.FillFormat.IsVisible = true;
             
            //Add another radio button.
            Aspose.Cells.RadioButton radio2 = excelbook.Worksheets[0].Shapes.AddRadioButton(6, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio2.Text = "30-39";
             
            //Set A1 cell as a linked cell for the radio button.
            radio2.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio2.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio2.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio2.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio2.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio2.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio2.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio2.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio2.FillFormat.IsVisible = true;
             
            //Add another radio button.
            Aspose.Cells.RadioButton radio3 = excelbook.Worksheets[0].Shapes.AddRadioButton(9, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio3.Text = "40-49";
             
            //Set A1 cell as a linked cell for the radio button.
            radio3.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio3.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio3.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio3.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio3.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio3.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio3.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio3.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio3.FillFormat.IsVisible = true;
             
            //Get the shapes.
            Aspose.Cells.Shape[] shapeobjects = new Aspose.Cells.Shape[] { box, radio1, radio2, radio3 };
             
            //Group the shapes.
            Aspose.Cells.GroupShape group = excelbook.Worksheets[0].Shapes.Group(shapeobjects);
             
            //Save the excel file.
            excelbook.Save("d:\\test\\groupshapes.xls");
            
            [VB.NET]
            
            'Instantiate a new Workbook.
            Dim excelbook As Workbook = New Workbook()
             
            'Add a group box to the first worksheet.
            Dim box As Aspose.Cells.GroupBox = excelbook.Worksheets(0).Shapes.AddGroupBox(1, 0, 1, 0, 300, 250)
             
            'Set the caption of the group box.
            box.Text = "Age Groups"
            box.Placement = PlacementType.FreeFloating
             
            'Make it 2-D box.
            box.Shadow = False
             
            'Add a radio button.
            Dim radio1 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(3, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio1.Text = "20-29"
             
            'Set A1 cell as a linked cell for the radio button.
            radio1.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio1.Shadow = True
             
            'Set the foreground color of the radio button.
            radio1.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio1.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio1.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio1.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio1.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio1.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio1.FillFormat.IsVisible = True
             
            'Add another radio button.
            Dim radio2 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(6, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio2.Text = "30-39"
             
            'Set A1 cell as a linked cell for the radio button.
            radio2.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio2.Shadow = True
             
            'Set the foreground color of the radio button.
            radio2.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio2.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio2.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio2.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio2.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio2.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio2.FillFormat.IsVisible = True
             
            'Add another radio button.
            Dim radio3 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(9, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio3.Text = "40-49"
             
            'Set A1 cell as a linked cell for the radio button.
            radio3.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio3.Shadow = True
             
            'Set the foreground color of the radio button.
            radio3.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio3.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio3.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio3.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio3.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio3.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio3.FillFormat.IsVisible = True
             
            'Get the shapes.
            Dim shapeobjects() As Aspose.Cells.Shape = New Aspose.Cells.Shape() {box, radio1, radio2, radio3}
             
            'Group the shapes.
            Dim group As Aspose.Cells.GroupShape = excelbook.Worksheets(0).Shapes.Group(shapeobjects)
             
            'Save the excel file.
            excelbook.Save("d:\test\groupshapes.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.GroupBox.Shadow">
      <summary>
            Indicates whether the groupbox has shadow.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GroupShape">
      <summary>
            Represents the individual shapes within a grouped shape.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook.
            Workbook excelbook = new Workbook();
             
            //Add a group box to the first worksheet.
            Aspose.Cells.GroupBox box = excelbook.Worksheets[0].Shapes.AddGroupBox(1, 0, 1, 0, 300, 250);
             
            //Set the caption of the group box.
            box.Text = "Age Groups";
            box.Placement = PlacementType.FreeFloating;
             
            //Make it 2-D box.
            box.Shadow = false;
             
            //Add a radio button.
            Aspose.Cells.RadioButton radio1 = excelbook.Worksheets[0].Shapes.AddRadioButton(3, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio1.Text = "20-29";
             
            //Set A1 cell as a linked cell for the radio button.
            radio1.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio1.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio1.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio1.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio1.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio1.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio1.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio1.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio1.FillFormat.IsVisible = true;
             
            //Add another radio button.
            Aspose.Cells.RadioButton radio2 = excelbook.Worksheets[0].Shapes.AddRadioButton(6, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio2.Text = "30-39";
             
            //Set A1 cell as a linked cell for the radio button.
            radio2.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio2.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio2.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio2.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio2.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio2.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio2.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio2.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio2.FillFormat.IsVisible = true;
             
            //Add another radio button.
            Aspose.Cells.RadioButton radio3 = excelbook.Worksheets[0].Shapes.AddRadioButton(9, 0, 2, 0, 30, 110);
             
            //Set its text string.
            radio3.Text = "40-49";
             
            //Set A1 cell as a linked cell for the radio button.
            radio3.LinkedCell = "A1";
             
            //Make the radio button 3-D.
            radio3.Shadow = true;
             
            //Set the foreground color of the radio button.
            radio3.FillFormat.ForeColor = Color.LightGreen;
             
            //Set the line style of the radio button.
            radio3.LineFormat.Style = MsoLineStyle.ThickThin;
             
            //Set the weight of the radio button.
            radio3.LineFormat.Weight = 4;
             
            //Set the line color of the radio button.
            radio3.LineFormat.ForeColor = Color.Blue;
             
            //Set the dash style of the radio button.
            radio3.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Make the line format visible.
            radio3.LineFormat.IsVisible = true;
             
            //Make the fill format visible.
            radio3.FillFormat.IsVisible = true;
             
            //Get the shapes.
            Aspose.Cells.Shape[] shapeobjects = new Aspose.Cells.Shape[] { box, radio1, radio2, radio3 };
             
            //Group the shapes.
            Aspose.Cells.GroupShape group = excelbook.Worksheets[0].Shapes.Group(shapeobjects);
             
            //Save the excel file.
            excelbook.Save("d:\\test\\groupshapes.xls");
            
            [VB.NET]
            
            'Instantiate a new Workbook.
            Dim excelbook As Workbook = New Workbook()
             
            'Add a group box to the first worksheet.
            Dim box As Aspose.Cells.GroupBox = excelbook.Worksheets(0).Shapes.AddGroupBox(1, 0, 1, 0, 300, 250)
             
            'Set the caption of the group box.
            box.Text = "Age Groups"
            box.Placement = PlacementType.FreeFloating
             
            'Make it 2-D box.
            box.Shadow = False
             
            'Add a radio button.
            Dim radio1 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(3, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio1.Text = "20-29"
             
            'Set A1 cell as a linked cell for the radio button.
            radio1.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio1.Shadow = True
             
            'Set the foreground color of the radio button.
            radio1.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio1.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio1.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio1.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio1.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio1.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio1.FillFormat.IsVisible = True
             
            'Add another radio button.
            Dim radio2 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(6, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio2.Text = "30-39"
             
            'Set A1 cell as a linked cell for the radio button.
            radio2.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio2.Shadow = True
             
            'Set the foreground color of the radio button.
            radio2.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio2.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio2.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio2.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio2.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio2.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio2.FillFormat.IsVisible = True
             
            'Add another radio button.
            Dim radio3 As Aspose.Cells.RadioButton = excelbook.Worksheets(0).Shapes.AddRadioButton(9, 0, 2, 0, 30, 110)
             
            'Set its text string.
            radio3.Text = "40-49"
             
            'Set A1 cell as a linked cell for the radio button.
            radio3.LinkedCell = "A1"
             
            'Make the radio button 3-D.
            radio3.Shadow = True
             
            'Set the foreground color of the radio button.
            radio3.FillFormat.ForeColor = Color.LightGreen
             
            'Set the line style of the radio button.
            radio3.LineFormat.Style = MsoLineStyle.ThickThin
             
            'Set the weight of the radio button.
            radio3.LineFormat.Weight = 4
             
            'Set the line color of the radio button.
            radio3.LineFormat.ForeColor = Color.Blue
             
            'Set the dash style of the radio button.
            radio3.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Make the line format visible.
            radio3.LineFormat.IsVisible = True
             
            'Make the fill format visible.
            radio3.FillFormat.IsVisible = True
             
            'Get the shapes.
            Dim shapeobjects() As Aspose.Cells.Shape = New Aspose.Cells.Shape() {box, radio1, radio2, radio3}
             
            'Group the shapes.
            Dim group As Aspose.Cells.GroupShape = excelbook.Worksheets(0).Shapes.Group(shapeobjects)
             
            'Save the excel file.
            excelbook.Save("d:\test\groupshapes.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.GroupShape.GetGroupedShapes">
      <summary>
            Gets the shapes grouped by this shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GroupShape.Item(System.Int32)">
      <summary>
            Gets the child shape by index.
            </summary>
      <param name="index">the child shape index.</param>
      <returns>return the child shape.</returns>
    </member>
    <member name="T:Aspose.Cells.CellsHelper">
      <summary>
            Provides helper functions.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetVersion">
      <summary>
            Get the release version.
            </summary>
      <returns>The release version.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.IsProtectedByRMS(System.String)">
      <summary>
            Gets whtether the file is protected by Microsoft Rights Management Server.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.IsProtectedByRMS(System.IO.Stream)">
      <summary>
            Gets whether the file is protected by Microsoft Rights Management Server.
            </summary>
      <param name="stream">The file stream.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellNameToIndex(System.String,System.Int32@,System.Int32@)">
      <summary>
            Gets the cell row and column indexes according to its name
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnIndexToName(System.Int32)">
      <summary>
            Gets column name according to column index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnNameToIndex(System.String)">
      <summary>
            Gets column index according to column name.
            </summary>
      <param name="columnName">Column name.</param>
      <returns>Column index.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowIndexToName(System.Int32)">
      <summary>
            Gets row name according to row index.
            </summary>
      <param name="row">Row index.</param>
      <returns>Name of row.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowNameToIndex(System.String)">
      <summary>
            Gets row index according to row name.
            </summary>
      <param name="rowName">Row name.</param>
      <returns>Row index.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ConvertR1C1FormulaToA1(System.String,System.Int32,System.Int32)">
      <summary>
            Converts the r1c1 formula of the cell to A1 formula.
            </summary>
      <param name="r1c1Formula">The r1c1 formula.</param>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>The A1 formula.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ConvertA1FormulaToR1C1(System.String,System.Int32,System.Int32)">
      <summary>
            Converts A1 formula of the cell to the r1c1 formula.
            </summary>
      <param name="formula">The A1 formula.</param>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>The R1C1 formula.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetDateTimeFromDouble(System.Double,System.Boolean)">
      <summary>
            Convert the double value to the date time value.
            </summary>
      <param name="doubleValue">The double value.</param>
      <param name="date1904">Date 1904 system.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetDoubleFromDateTime(System.DateTime,System.Boolean)">
      <summary>
            Convert the date time to double value.
            </summary>
      <param name="dateTime">The date time.</param>
      <param name="date1904">Date 1904 system.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectLoadFormat(System.String)">
      <summary>
            Detects the file load format.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>The load format.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectLoadFormat(System.IO.Stream)">
      <summary>
            Detects the file load format.
            </summary>
      <param name="stream">The stream.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectFileFormat(System.String)">
      <summary>
            Detects the file format type.
            </summary>
      <param name="fileName">the file name</param>
      <returns>The file format type.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectFileFormat(System.IO.Stream)">
      <summary>
            Detects the format type of the file stored in the stream.
            </summary>
      <param name="stream">The stream</param>
      <returns>The file format type.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetUsedColors(Aspose.Cells.Workbook)">
      <summary>
            Gets all used colors in the workbook.
            </summary>
      <param name="workbook">The workbook object.</param>
      <returns>The used colors.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.AddAddInFunction(System.String,System.Int32,System.Int32,Aspose.Cells.ParameterType[],Aspose.Cells.ParameterType)">
      <summary>
            Add addin fuction.
            </summary>
      <param name="function">The function name.</param>
      <param name="minCountOfParameters">Minimum number of parameters this function requires</param>
      <param name="maxCountOfParameters">Maximum number of parameters this function allows.</param>
      <param name="paramersType">The excepted parameters type of the function</param>
      <param name="fuctionValueType">The function value type.</param>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.MergeFiles(System.String[],System.String,System.String)">
      <summary>
            Merges some large xls files to a xls file.
            </summary>
      <param name="files">The files.</param>
      <param name="cachedFile">The cached file.</param>
      <param name="destFile">The dest file.</param>
      <remarks>
            This method only supports merging data, style and formulas to the new file.
            The cached file is used to store some temporary data.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.DPI">
      <summary>
            Gets the DPI of the machine.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontDir">
      <summary>
            When generating PDF/XPS, specific font file directory can be set in the property.
            If it is not set , using %WINDOWS%\fonts by default.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontDirs">
      <summary>
            When generating PDF/XPS, specific font file directorys can be set in the property.
            If it is not set , using %WINDOWS%\fonts by default.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontFiles">
      <summary>
            When generating PDF/XPS, specific font files can be set in the property.
            such as "d:\myfonts\myArial.ttf" 
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.StartupPath">
      <summary>
            Gets or sets the startup path, which is referred to by some external formula references.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.AltStartPath">
      <summary>
            Gets or sets the alternate startup path, which is referred to by some external formula references. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.LibraryPath">
      <summary>
            Gets or sets the library path which is referred to by some external formula references.  
            </summary>
    </member>
    <member name="T:Aspose.Cells.HorizontalPageBreak">
      <summary>
            Encapsulates the object that represents a horizontal page break. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add a page break at cell Y30
            int Index = worksheet.HorizontalPageBreaks.Add("Y30");
            
            //get the newly added horizontal page break
            HorizontalPageBreak hPageBreak = worksheet.HorizontalPageBreaks[Index];  
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add a page break at cell Y30
            Dim Index As Integer = worksheet.HorizontalPageBreaks.Add("Y30")
            
            'get the newly added horizontal page break
            Dim hPageBreak As HorizontalPageBreak = worksheet.HorizontalPageBreaks(Index)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.StartColumn">
      <summary>
            Gets the start column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.EndColumn">
      <summary>
            Gets the end column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.Row">
      <summary>
            Gets the zero based row index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HorizontalPageBreakCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.HorizontalPageBreak" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HorizontalPageBreaks.Add("G5");
            excel.Worksheets[0].VerticalPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HorizontalPageBreaks.Add("G5")
            excel.Worksheets(0).VerticalPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Row index, zero based.</param>
      <param name="startColumn">Start column index, zero based.</param>
      <param name="endColumn">End column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>This method is used to add a horizontal pagebreak within a print area.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.String)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the HPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreakCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.HorizontalPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreakCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HorizontalPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="T:Aspose.Cells.Hyperlink">
      <summary>
            Encapsulates the object that represents a hyperlink.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Workbook object
            workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            //Adding a hyperlink to a URL at "A1" cell
            worksheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Workbook object
            workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            'Adding a hyperlink to a URL at "A1" cell
            worksheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Address">
      <summary>
            Represents the address of a hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.TextToDisplay">
      <summary>
            Represents the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Area">
      <summary>
            Gets the range of hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.ScreenTip">
      <summary>
            Returns or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HyperlinkCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Hyperlink" /> objects.
            </summary>
      <example>
        <code>
            
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Get Hyperlinks Collection
            HyperlinkCollection hyperlinks = worksheet.Hyperlinks;
            
            //Adding a hyperlink to a URL at "A1" cell
            hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Get Hyperlinks Collection
            Dim hyperlinks As HyperlinkCollection = worksheet.Hyperlinks
            
            'Adding a hyperlink to a URL at "A1" cell
            hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="firstRow">First row of the hyperlink range.</param>
      <param name="firstColumn">First column of the hyperlink range.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
      <example>
        <code>
            [C#]
            
            Worksheet worksheet = excel.Worksheets[0];
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com");
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls");
            
            [Visual Basic]
            
            Dim worksheet as Worksheet = excel.Worksheets(0)
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com")
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="startCellName">The top-left cell of the range.</param>
      <param name="endCellName">The bottom-right cell of the range.</param>
      <param name="address">Address of the hyperlink.</param>
      <param name="textToDisplay">The text to be displayed for the specified hyperlink.</param>
      <param name="screenTip">The screenTip text for the specified hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the hyperlink  at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Clear">
      <summary>
            Clears all hyperlinks.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HyperlinkCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ICustomFunction">
      <summary>
            Allows users to add their custom formula calculation functions to extend the calculation engine.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICustomFunction.CalculateCustomFunction(System.String,System.Collections.ArrayList,System.Collections.ArrayList)">
      <summary>
            Calculates the result of custom function.
            </summary>
      <param name="functionName">Custom function name, such as "MyFunc1".</param>
      <param name="paramsList">A list of parameters value for custom functions.</param>
      <param name="contextObjects">A list of context objects.</param>
      <returns>Result of custom function.</returns>
      <remarks>Currently there are 3 fixed context objects and some varialbe context objects:
            <p>1. Current Workbook object.</p><p>2. Current Worksheet object.</p><p>3. Current Cell object.</p><p>Others are custom function parameters text.</p>
            If a custom function name is not supported, please return a null reference.</remarks>
    </member>
    <member name="T:Aspose.Cells.TxtSaveOptions">
      <summary>
            Repesents the save options for csv/tab delimitered/other text format.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtSaveOptions.#ctor">
      <summary>
            Creates text file save options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates text file save options.
            </summary>
      <param name="format">The save foramt of the text file.</param>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.Separator">
      <summary>
            Gets and sets char Delimiter of text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.SeparatorString">
      <summary>
            Gets and sets the a string value as separator.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.Encoding">
      <summary>
            Gets and sets the default encoding.Only applies for csv file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.AlwaysQuoted">
      <summary>
            Indicates whether always adding '"' for each field.
            If true then all values will be quoted;
            If false then only quote values when needed(when values contain special characters such as '"' , '\n' or separator character).
            Default is false.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use QuoteType property instead.
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.QuoteType">
      <summary>
            Gets or sets how to quote values in the exported text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.FormatStrategy">
      <summary>
            Gets and sets the format strategy when exporting the cell value as string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XmlColumnProperty">
      <summary>
            Represents Xml Data Binding information.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Label">
      <summary>
             Encapsulates the object that represents a label in a spreadsheet.
             </summary>
      <example>
        <code>
             //Create a new Workbook.
             Workbook workbook = new Workbook();
              
             //Get the first worksheet in the workbook.
             Worksheet sheet = workbook.Worksheets[0];
              
             //Add a new label to the worksheet.
             Aspose.Cells.Label label = sheet.Shapes.AddLabel(2, 0, 2, 0, 60, 120);
              
             //Set the caption of the label.
             label.Text = "This is a Label";
              
             //Set the Placement Type, the way the
             //label is attached to the cells.
             label.Placement = PlacementType.FreeFloating;
              
             //Set the fill color of the label.
             label.FillFormat.ForeColor = Color.Yellow;
              
             //Saves the file.
             workbook.Save(@"d:\test\tstlabel.xls");
             
             [VB.NET]
             
            'Create a new Workbook.
             Dim workbook As Workbook = New Workbook()
              
             'Get the first worksheet in the workbook.
             Dim sheet As Worksheet = workbook.Worksheets(0)
              
             'Add a new label to the worksheet.
             Dim label As Aspose.Cells.Label = sheet.Shapes.AddLabel(2, 0, 2, 0, 60, 120)
              
             'Set the caption of the label.
             label.Text = "This is a Label"
              
             'Set the Placement Type, the way the
             'label is attached to the cells.
             label.Placement = PlacementType.FreeFloating
              
             'Set the fill color of the label.
             label.FillFormat.ForeColor = Color.Yellow
              
             'Saves the file.
             workbook.Save("d:\test\tstlabel.xls")
             </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.Charts.Legend">
      <summary>
            Encapsulates the object that represents the chart legend.
            </summary>
      <example>
        <code>
            [C#]
            
            //Set Legend's width and height
            Legend legend = chart.Legend;
            
            //Legend is at right side of chart by default.
            //If the legend is at left or right side of the chart, setting Legend.X property will not take effect.
            //If the legend is at top or bottom side of the chart, setting Legend.Y property will not take effect.
            legend.Y = 1500;
            legend.Width = 50;
            legend.Height = 50; 
            //Set legend's position
            legend.Position = LegendPositionType.Left;
            
            [Visual Basic]
            
            'Set Legend's width and height
            Dim legend as Legend = chart.Legend
            
            'Legend is at right side of chart by default.
            'If the legend is at left or right side of the chart, setting Legend.X property will not take effect.
            'If the legend is at top or bottom side of the chart, setting Legend.Y property will not take effect.
            legend.Y = 1500
            legend.Width = 50
            legend.Height = 50
            'Set legend's position
            legend.Position = LegendPositionType.Left
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Legend.Position">
      <summary>
            Gets or sets the legend position type.
            </summary>
      <remarks>
        <br>Default position is right.</br>
        <br>If the legend is at left or right side of the chart, setting Legend.X property will not take effect.</br>
        <br>If the legend is at top or bottom side of the chart, setting Legend.Y property will not take effect.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Legend.LegendEntries">
      <summary>
            Gets a collection of all the LegendEntry objects in the specified chart legend.
            Setting the legend entries of the surface chart is not supported.
            So it will return null if the chart type is surface chart type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Legend.IsOverLay">
      <summary>
            Gets or sets whether other chart elements shall be allowed to overlap this chart element.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.LegendEntryCollection">
      <summary>
            Represents a collection of all the <see cref="T:Aspose.Cells.Charts.LegendEntry" /> objects in the specified chart legend.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntryCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Charts.LegendEntry" /> element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.LegendEntry">
      <summary>
            Represents a legend entry in a chart legend. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.IsDeleted">
      <summary>
            Gets and sets whether the legend entry is deleted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.LegendEntry.Font" /> object of the specified ChartFrame object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.TextFont">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Charts.LegendEntry.Font" /> object of the specified LegendEntry object.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use LegendEntry.Font property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.IsTextNoFill">
      <summary>
            Gets or sets no fill of the text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. 
            The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use LegendEntry.BackgroundMode property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.LegendEntry.BackgroundMode">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.LegendPositionType">
      <summary>
            Enumerates the legend position types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Bottom">
      <summary>
             Displays the legend to the bottom of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Corner">
      <summary>
             Displays the legend to the corner of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Left">
      <summary>
             Displays the legend to the left of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.NotDocked">
      <summary>
             Represents that the legend is not docked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Right">
      <summary>
             Displays the legend to the right of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Top">
      <summary>
             Displays the legend to the top of the chart's plot area.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LineShape">
      <summary>
            Represents the line shape.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook.
            Workbook workbook = new Workbook();
             
            //Get the first worksheet in the book.
            Worksheet worksheet = workbook.Worksheets[0];
             
            //Add a new line to the worksheet.
            Aspose.Cells.LineShape line1 = worksheet.Shapes.AddLine(5, 0, 1, 0, 0, 250);
             
            //Set the line dash style
            line1.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Set the placement.
            line1.Placement = PlacementType.FreeFloating;
             
            //Add another line to the worksheet.
            Aspose.Cells.LineShape line2 = worksheet.Shapes.AddLine(7, 0, 1, 0, 85, 250);
             
            //Set the line dash style.
            line2.LineFormat.DashStyle = MsoLineDashStyle.DashLongDash;
             
            //Set the weight of the line.
            line2.LineFormat.Weight = 4;
             
            //Set the placement.
            line2.Placement = PlacementType.FreeFloating;
             
            //Add the third line to the worksheet.
            Aspose.Cells.LineShape line3 = worksheet.Shapes.AddLine(13, 0, 1, 0, 0, 250);
             
            //Set the line dash style
            line3.LineFormat.DashStyle = MsoLineDashStyle.Solid;
             
            //Set the placement.
            line3.Placement = PlacementType.FreeFloating;
             
            //Make the gridlines invisible in the first worksheet.
            workbook.Worksheets[0].IsGridlinesVisible = false;
             
            //Save the excel file.
            workbook.Save("d:\\test\\tstlines.xls"); 
            
            [VB.NET]
            
            'Instantiate a new Workbook.
            Dim workbook As Workbook = New Workbook()
             
            'Get the first worksheet in the book.
            Dim worksheet As Worksheet = workbook.Worksheets(0)
             
            'Add a new line to the worksheet.
            Dim line1 As Aspose.Cells.LineShape = worksheet.Shapes.AddLine(5, 0, 1, 0, 0, 250)
             
            'Set the line dash style
            line1.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Set the placement.
            line1.Placement = PlacementType.FreeFloating
             
            'Add another line to the worksheet.
            Dim line2 As Aspose.Cells.LineShape = worksheet.Shapes.AddLine(7, 0, 1, 0, 85, 250)
             
            'Set the line dash style.
            line2.LineFormat.DashStyle = MsoLineDashStyle.DashLongDash
             
            'Set the weight of the line.
            line2.LineFormat.Weight = 4
             
            'Set the placement.
            line2.Placement = PlacementType.FreeFloating
             
            'Add the third line to the worksheet.
            Dim line3 As Aspose.Cells.LineShape = worksheet.Shapes.AddLine(13, 0, 1, 0, 0, 250)
             
            'Set the line dash style
            line3.LineFormat.DashStyle = MsoLineDashStyle.Solid
             
            'Set the placement.
            line3.Placement = PlacementType.FreeFloating
             
            'Make the gridlines invisible in the first worksheet.
            workbook.Worksheets(0).IsGridlinesVisible = False
             
            'Save the excel file.
            workbook.Save("d:\test\tstlines.xls") 
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.BeginArrowheadStyle">
      <summary>
            Gets and sets the begin arrow head style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.BeginArrowheadWidth">
      <summary>
            Gets and sets the begin arrow head width of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.BeginArrowheadLength">
      <summary>
            Gets and sets the begin arrow head length of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.EndArrowheadStyle">
      <summary>
            Gets and sets the end arrow head style of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.EndArrowheadWidth">
      <summary>
            Gets and sets the end arrow head width of the line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.LineShape.EndArrowheadLength">
      <summary>
            Gets and sets the end arrow head length of the line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LineType">
      <summary>
            Enumerates the type of <see cref="T:Aspose.Cells.Drawing.Picture" /> border or <see cref="T:Aspose.Cells.Charts.Chart" /> line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.DarkGray">
      <summary>
            Represents a dark gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.Dash">
      <summary>
            Represent a dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.DashDot">
      <summary>
            Represents a dash-dot line
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.DashDotDot">
      <summary>
            Represents a dash-dot-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.Dot">
      <summary>
            Represents a dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.LightGray">
      <summary>
            Represents a light gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.MediumGray">
      <summary>
            Represents a medium gray line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineType.Solid">
      <summary>
            Represent a solid line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ListBox">
      <summary>
            Represents a list box object.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Create a new Workbook.
            Workbook workbook = new Workbook();
             
            //Get the first worksheet.
            Worksheet sheet = workbook.Worksheets[0];
             
            //Get the worksheet cells collection.
            Cells cells = sheet.Cells;
             
            //Input a value.
            cells["B3"].PutValue("Choose Dept:");
             
            //Set it bold.
            cells["B3"].Style.Font.IsBold = true;
             
            //Input some values that denote the input range
            //for the list box.
            cells["A2"].PutValue("Sales");
            cells["A3"].PutValue("Finance");
            cells["A4"].PutValue("MIS");
            cells["A5"].PutValue("R&amp;D");
            cells["A6"].PutValue("Marketing");
            cells["A7"].PutValue("HRA");
             
            //Add a new list box.
            ListBox listBox = sheet.Shapes.AddListBox(2, 0, 3, 0, 122, 100);
             
            //Set the placement type.
            listBox.Placement = PlacementType.FreeFloating;
             
            //Set the linked cell.
            listBox.LinkedCell = "A1";
             
            //Set the input range.
            listBox.InputRange = "A2:A7";
             
            //Set the selection tyle.
            listBox.SelectionType = SelectionType.Single;
             
            //Set the list box with 3-D shading.
            listBox.Shadow = true;
             
            //Saves the file.
            workbook.Save(@"d:\test\tstlistbox.xls");
            
            [VB.NET]
            
            'Create a new Workbook.
            Dim workbook As Aspose.Cells.Workbook = New Aspose.Cells.Workbook()
             
            'Get the first worksheet.
            Dim sheet As Worksheet = workbook.Worksheets(0)
             
            'Get the worksheet cells collection.
            Dim cells As Cells = sheet.Cells
             
            'Input a value.
            cells("B3").PutValue("Choose Dept:")
             
            'Set it bold.
            cells("B3").Style.Font.IsBold = True
             
            'Input some values that denote the input range
            'for the list box.
            cells("A2").PutValue("Sales")
            cells("A3").PutValue("Finance")
            cells("A4").PutValue("MIS")
            cells("A5").PutValue("R&amp;D")
            cells("A6").PutValue("Marketing")
            cells("A7").PutValue("HRA")
             
            'Add a new list box.
            Dim listBox As Aspose.Cells.ListBox = sheet.Shapes.AddListBox(2, 0, 3, 0, 122, 100)
             
            'Set the placement type.
            listBox.Placement = PlacementType.FreeFloating
             
            'Set the linked cell.
            listBox.LinkedCell = "A1"
             
            'Set the input range.
            listBox.InputRange = "A2:A7"
             
            'Set the selection tyle.
            listBox.SelectionType = SelectionType.Single
             
            'Set the list box with 3-D shading.
            listBox.Shadow = True
             
            'Saves the file.
            workbook.Save("d:\test\tstlistbox.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.ListBox.SelectedItem(System.Int32,System.Boolean)">
      <summary>
            Sets whether the item is selected
            </summary>
      <param name="itemIndex">The item idex</param>
      <param name="isSelected">Whether the item is selected.
            True means that this item should be selected.
            False means that this item should be unselected.
            </param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ListBox.IsSelected(System.Int32)">
      <summary>
            Indicates whether the item is selected.
            </summary>
      <param name="itemIndex">The item index.</param>
      <returns>whether the item is selected.</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.ItemCount">
      <summary>
            Gets the number of items in the list box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.SelectedIndex">
      <summary>
            Gets or sets the index number of the currently selected item in a list box or combo box.
            Zero-based.
            </summary>
      <remarks>-1 presents no item is selected.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.SelectedCells">
      <summary>
            Gets the selected cells.
            Returns null if the input range is not set or no item is selected
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.SelectionType">
      <summary>
            Gets or sets the selection mode of the specified list box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ListBox.PageChange">
      <summary>
            Specifies the amount by which the control's value is changed 
            when the user clicks on the scrollbar's page up or page down region.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListColumn">
      <summary>
            Represents a column in a list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.Name">
      <summary>
            Gets and sets the name of the column.
            </summary>
      <remarks>
            If sets the name of the column, the according cell' value will be changed too.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.TotalsCalculation">
      <summary>
            Gets and sets the type of calculation in the Totals row of the list column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.Range">
      <summary>
            Gets the range of this list column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListColumnCollection">
      <summary>
            Represents A collection of all the <see cref="T:Aspose.Cells.Tables.ListColumn" /> objects in the specified ListObject object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumnCollection.Item(System.Int32)">
      <summary>
            Gets the ListColumn by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>the ListColumn object.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumnCollection.Item(System.String)">
      <summary>
            Gets the ListColumn by the name.
            </summary>
      <param name="name">The name of the ListColumn</param>
      <returns>The ListColumn object.</returns>
    </member>
    <member name="T:Aspose.Cells.Tables.ListObject">
      <summary>
            Represents a list object on a worksheet.
            The ListObject object is a member of the ListObjects collection. 
            The ListObjects collection contains all the list objects on a worksheet. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            for (int i = 0; i  &lt;5; i++)
            {
            cells[0,i].PutValue(CellsHelper.ColumnIndexToName(i));
             }
            for (int row = 1; row  &lt;10; row++)
            {
             for (int column = 0; column  &lt;5; column++)
            {
            cells[row, column].PutValue(row * column);
             }
             }
            ListObjectCollection tables = workbook.Worksheets[0].ListObjects;
            int index = tables.Add(0, 0, 9, 4, true);
            ListObject table = tables[0];
            table.ShowTotals = true;
            table.ListColumns[4].TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum;
            workbook.Save(@"C:\Book1.xlsx");
            
            
            [Visual Basic]
            
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            For i As Int32 = 0 To 4
             cells(0, i).PutValue(CellsHelper.ColumnIndexToName(i))
            Next
            For row As Int32 = 1 To 9
             For column As Int32 = 0 To 4
              cells(row, column).PutValue(row * column)
            Next
            Next
            Dim tables As ListObjectCollection = workbook.Worksheets(0).ListObjects
            Dim index As Int32 = tables.Add(0, 0, 9, 4, True)
            Dim table As ListObject = tables(0)
            table.ShowTotals = True
            table.ListColumns(4).TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum
            workbook.Save("C:\Book1.xlsx")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.Resize(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resize the range of the list object.
            </summary>
      <param name="startRow">The start row index of the new range.</param>
      <param name="startColumn">The start column index of the new range.</param>
      <param name="endRow">The end row index of the new range.</param>
      <param name="endColumn">The end column index of the new range.</param>
      <param name="hasHeaders">Whether the ListObject has has headers.</param>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.PutCellValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Put the value to the cell. 
            </summary>
      <param name="rowOffset">The row offset.</param>
      <param name="columnOffset">The column offset.</param>
      <param name="value">The cell value.</param>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.UpdateColumnName">
      <summary>
            Updates all list columns' name from the worksheet.
            </summary>
      <remarks>
            The value of the cells in the header row of the table must be same as the name of the ListColumn;
            Cell.PutValue do not auto modify the name of the ListColumn for performance. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.ApplyStyleToRange">
      <summary>
            Apply the table style to the range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.ConvertToRange">
      <summary>
            Convert the table to range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.StartRow">
      <summary>
            Gets the start row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.StartColumn">
      <summary>
            Gets the start column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.EndRow">
      <summary>
            Gets the end  row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.EndColumn">
      <summary>
            Gets the end column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ListColumns">
      <summary>
            Gets ListColumns of the ListObject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowHeaderRow">
      <summary>
            Gets and sets whether this ListObject show header row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTotals">
      <summary>
            Gets and sets whether this ListObject show total row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DataRange">
      <summary>
            Gets the data range of the ListObject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.QueryTable">
      <summary>
            Gets the linked QueryTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DataSourceType">
      <summary>
            Gets the data source type of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.AutoFilter">
      <summary>
            Gets auto filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DisplayName">
      <summary>
            Gets and sets the display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.Comment">
      <summary>
            Gets and sets the comment of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleFirstColumn">
      <summary>
            Inidicates whether the first column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleLastColumn">
      <summary>
            Indicates whether the last column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleRowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.TableStyleType">
      <summary>
            Gets and the built-in table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.TableStyleName">
      <summary>
            Gets and sets the table style name.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListObjectCollection">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.Tables.ListObject" /> objects in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Adds a ListObject to the worksheet.
            </summary>
      <param name="startRow">The start row of the list range.</param>
      <param name="startColumn">The start row of the list range.</param>
      <param name="endRow">The start row of the list range.</param>
      <param name="endColumn">The start row of the list range.</param>
      <param name="hasHeaders">Whether the range has headers.</param>
      <returns>The index of the new ListObject</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.Add(System.String,System.String,System.Boolean)">
      <summary>
            Adds a ListObject to the worksheet.
            </summary>
      <param name="startCell">The start cell of the list range.</param>
      <param name="endCell">The end cell of the list range.</param>
      <param name="hasHeaders">Whether the range has headers.</param>
      <returns>The index of the new ListObject</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.UpdateColumnName">
      <summary>
            Update all column name of the tables.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectCollection.Item(System.Int32)">
      <summary>
            Gets the ListObject by index.
            </summary>
      <param name="index">The index.</param>
      <returns>The ListObject</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectCollection.Item(System.String)">
      <summary>
            Gets the ListObject by specified name.
            </summary>
      <param name="tableName">ListObject name.</param>
      <returns>The ListObject</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.Marker">
      <summary>
            Represents the marker in a line chart, scatter chart, or radar chart.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Marker.Border">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Drawing.Line">border</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Marker.Area">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Charts.Marker.Area">area</see>.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Marker.MarkerStyle">
      <summary>
            Represents the marker style. Applies to line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Marker.MarkerSize">
      <summary>
            Represents the marker size in unit of points. Applies to line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Marker.MarkerSizePx">
      <summary>
            Represents the marker size in unit of pixels. Applies to line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadStyle">
      <summary>
            Enumerates the line end type of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.None">
      <summary>
             No line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.Arrow">
      <summary>
            Arrow line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowStealth">
      <summary>
            Arrow Stealth line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowDiamond">
      <summary>
            Arrow Diamond Line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowOval">
      <summary>
            Arrow Oval line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowOpen">
      <summary>
            Arrow Open line end type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartLineFormattingType">
      <summary>
            Rerepsents line format type of chart line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Solid">
      <summary>
            Represents solid formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Gradient">
      <summary>
            Gradient
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientFill">
      <summary>
            Represents the gradient fill.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientFill.SetGradient(Aspose.Cells.Drawing.GradientFillType,System.Double,Aspose.Cells.Drawing.GradientDirectionType)">
      <summary>
            Set the gradient fill type and direction.
            </summary>
      <param name="type">Gradient fill type.</param>
      <param name="angle">The angle. Only applies for GradientFillType.Linear. </param>
      <param name="direction">The direction type. Only applies for GradientFillType.Radial and GradientFillType.Rectangle.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientFill.SetOneColorGradient(System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a one-color gradient.
            </summary>
      <param name="color">One gradient color.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientFill.SetTwoColorGradient(System.Drawing.Color,System.Drawing.Color,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.GradientFill.SetTwoColorGradient(System.Drawing.Color,System.Double,System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="transparency1">The degree of transparency of the color1 as a value from 0.0 (opaque) through 1.0 (clear).</param>
      <param name="color2">Two gradient color.</param>
      <param name="transparency2">The degree of transparency of the color2 as a value from 0.0 (opaque) through 1.0 (clear).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientFill.GradientStops">
      <summary>
            Represents the gradient stop collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientFill.FillType">
      <summary>
            Gets the gradient fill type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientFill.DirectionType">
      <summary>
            Gets the gradient direction type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientFill.Angle">
      <summary>
            The angle of linear fill.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientFillType">
      <summary>
            Represents all Gradient fill type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Linear">
      <summary>
            Linear 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Radial">
      <summary>
            Radial
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Rectangle">
      <summary>
            Rectangle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Path">
      <summary>
            Path
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientStop">
      <summary>
            Represents the gradient stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientStop.Position">
      <summary>
            The position of the stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientStop.CellsColor">
      <summary>
            Gets the color of this gradient stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.GradientStop.Transparency">
      <summary>
            Returns or sets the degree of transparency of the area as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientDirectionType">
      <summary>
            Represents all direction type of gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromUpperLeftCorner">
      <summary>
            FromUpperLeftCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromUpperRightCorner">
      <summary>
            FromUpperRightCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromLowerLeftCorner">
      <summary>
            FromLowerLeftCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromLowerRightCorner">
      <summary>
            FromLowerRightCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromCenter">
      <summary>
            FromCenter
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LineCapType">
      <summary>
            Represents the caps of a line
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineCapType.Square">
      <summary>
            Square protrudes by half line width.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineCapType.Round">
      <summary>
            Rounded ends.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineCapType.Flat">
      <summary>
            Line ends at end point.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineCapType.None">
      <summary>
            None cap
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.LineJoinType">
      <summary>
            Represents the join styles of a line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineJoinType.Round">
      <summary>
            Round joint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineJoinType.Bevel">
      <summary>
            Bevel joint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineJoinType.Miter">
      <summary>
            Miter joint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.LineJoinType.None">
      <summary>
            None joint
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PatternFill">
      <summary>
            Encapsulates the object that represents pattern fill format
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.Pattern">
      <summary>
            Gets or sets the fill pattern type
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.BackgroundColor">
      <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color" /> of the <see cref="T:Aspose.Cells.Drawing.Area" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.BackgroundCellsColor">
      <summary>
            Gets and sets the foreground <see cref="T:Aspose.Cells.CellsColor" /> oject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.ForegroundColor">
      <summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.ForegroundCellsColor">
      <summary>
            Gets and sets the foreground <see cref="T:Aspose.Cells.CellsColor" /> oject.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.ForeTransparency">
      <summary>
            Gets or sets the transparency of foreground color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PatternFill.BackTransparency">
      <summary>
            Gets or sets the transparency of background color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.PlotEmptyCellsType">
      <summary>
            Represents all plot empty cells type of a chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.NotPlotted">
      <summary>
            Not plotted(leave gap)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.Zero">
      <summary>
            Zero
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.Interpolated">
      <summary>
            Interpolated
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Title">
      <summary>
            Encapsulates the object that represents the title of chart or axis.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Setting the title of a chart
            chart.Title.Text = "Title";
            //Setting the font color of the chart title to blue
            chart.Title.Font.Color = Color.Blue;
            //Setting the title of category axis of the chart
            chart.CategoryAxis.Title.Text = "Category";
            //Setting the title of value axis of the chart
            chart.ValueAxis.Title.Text = "Value";
            
            [Visual Basic]
             
            'Setting the title of a chart
            chart.Title.Text = "Title"
            'Setting the font color of the chart title to blue
            chart.Title.Font.Color = Color.Blue
            'Setting the title of category axis of the chart
            chart.CategoryAxis.Title.Text = "Category"
            'Setting the title of value axis of the chart
            chart.ValueAxis.Title.Text = "Value"
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.Title.RemoveCharacters">
      <summary>
            Remove all Character sets.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Title.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the title.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.Title.Characters">
      <summary>
            Gets rich text formatting of this Title.
            </summary>
      <returns>returns FontSetting array</returns>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.TextHorizontalAlignment">
      <summary>
            Ges or sets the text horizontal alignment.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.TextVerticalAlignment">
      <summary>
            Gets or sets the text vertical alignment of text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.RotationAngle">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Title.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.Text">
      <summary>
            Gets or sets the text of a frame's title.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.IsVisible">
      <summary>
            Represents whether the title is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.X">
      <summary>
            Gets or sets the x coordinate of the upper left corne in units of 1/4000 of the chart area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.Y">
      <summary>
            Gets or sets the y coordinate of the upper left corner in units of 1/4000 of the chart area.		
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.LinkedSource">
      <summary>
            Gets and sets a reference to the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Title.OverLay">
      <summary>
            Represents overlay centered title on chart without resising chart.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextureFill">
      <summary>
            Encapsulates the object that represents texture fill format
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.Type">
      <summary>
            Gets and sets the texture type
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.ImageData">
      <summary>
            Gets and sets the image data of the fill.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.PicFormatOption">
      <summary>
            Gets or sets pictrue format option.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.TilePicOption">
      <summary>
            Gets or sets tile picture option.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.PictureFormatType">
      <summary>
            Gets and sets the picture format type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.Scale">
      <summary>
            Gets and sets the picture format scale.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextureFill.Transparency">
      <summary>
            Returns or sets the degree of transparency of the area as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillPictureType">
      <summary>
            Represents the picture fill type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.Stretch">
      <summary>
            Stretch
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.Stack">
      <summary>
            Stack
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.StackAndScale">
      <summary>
            StackAndScale
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoDrawingType">
      <summary>
            Represents office drawing objects type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Group">
      <summary>
            Group
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Line">
      <summary>
            Line
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Rectangle">
      <summary>
            Rectangle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Oval">
      <summary>
            Oval
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Arc">
      <summary>
            Arc
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Chart">
      <summary>
            Chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.TextBox">
      <summary>
            TextBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Button">
      <summary>
            Button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Polygon">
      <summary>
            Polygon
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.CheckBox">
      <summary>
            CheckBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.RadioButton">
      <summary>
            RadioButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Label">
      <summary>
            Label
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.DialogBox">
      <summary>
            DialogBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Spinner">
      <summary>
            Spinner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ScrollBar">
      <summary>
            ScrollBar
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ListBox">
      <summary>
            ListBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.GroupBox">
      <summary>
            GroupBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ComboBox">
      <summary>
            ComboBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Comment">
      <summary>
            Comment
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.OleObject">
      <summary>
            OleObject
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.CellsDrawing">
      <summary>
            Only for preserving the drawing object in the template file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Unknown">
      <summary>
            Only for preserving the drawing object in the xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Slicer">
      <summary>
            Slicer
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoPresetTextEffect">
      <summary>
            Represents preset text effect type of WordArt.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect1">
      <summary>
            TextEffect1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect2">
      <summary>
            TextEffect2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect3">
      <summary>
            TextEffect3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect4">
      <summary>
            TextEffect4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect5">
      <summary>
            TextEffect5
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect6">
      <summary>
            TextEffect6
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect7">
      <summary>
            TextEffect7
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect8">
      <summary>
            TextEffect8
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect9">
      <summary>
            TextEffect9
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect10">
      <summary>
            TextEffect10
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect11">
      <summary>
            TextEffect11
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect12">
      <summary>
            TextEffect12
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect13">
      <summary>
            TextEffect13
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect14">
      <summary>
            TextEffect14
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect15">
      <summary>
            TextEffect15
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect16">
      <summary>
            TextEffect16
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect17">
      <summary>
            TextEffect17
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect18">
      <summary>
            TextEffect18
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect19">
      <summary>
            TextEffect19
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect20">
      <summary>
            TextEffect20
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect21">
      <summary>
            TextEffect21
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect22">
      <summary>
            TextEffect22
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect23">
      <summary>
            TextEffect23
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect24">
      <summary>
            TextEffect24
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect25">
      <summary>
            TextEffect25
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect26">
      <summary>
            TextEffect26
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect27">
      <summary>
            TextEffect27
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect28">
      <summary>
            TextEffect28
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect29">
      <summary>
            TextEffect29
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect30">
      <summary>
            TextEffect30
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoPresetTextEffectShape">
      <summary>
            Represents preset text effect shape type of WordArt.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.PlainText">
      <summary>
            PlainText
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Stop">
      <summary>
            Stop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.TriangleUp">
      <summary>
            TriangleUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.TriangleDown">
      <summary>
            TriangleDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ChevronUp">
      <summary>
            ChevronUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ChevronDown">
      <summary>
            ChevronDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.RingInside">
      <summary>
            RingInside
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.RingOutside">
      <summary>
            RingOutside
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchUpCurve">
      <summary>
            ArchUpCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchDownCurve">
      <summary>
            ArchDownCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CircleCurve">
      <summary>
            CircleCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ButtonCurve">
      <summary>
            ButtonCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchUpPour">
      <summary>
            ArchUpPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchDownPour">
      <summary>
            ArchDownPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CirclePour">
      <summary>
            CirclePour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ButtonPour">
      <summary>
            ButtonPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CurveUp">
      <summary>
            CurveUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CurveDown">
      <summary>
            CurveDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CanUp">
      <summary>
            CanUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CanDown">
      <summary>
            CanDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Wave1">
      <summary>
            Wave1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Wave2">
      <summary>
            Wave2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DoubleWave1">
      <summary>
            DoubleWave1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DoubleWave2">
      <summary>
            DoubleWave2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Inflate">
      <summary>
            Inflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Deflate">
      <summary>
            Deflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.InflateBottom">
      <summary>
            InflateBottom
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateBottom">
      <summary>
            DeflateBottom
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.InflateTop">
      <summary>
            InflateTop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateTop">
      <summary>
            DeflateTop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateInflate">
      <summary>
            DeflateInflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateInflateDeflate">
      <summary>
            DeflateInflateDeflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeRight">
      <summary>
            FadeRight
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeLeft">
      <summary>
            FadeLeft
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeUp">
      <summary>
            FadeUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeDown">
      <summary>
            FadeDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.SlantUp">
      <summary>
            SlantUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.SlantDown">
      <summary>
            SlantDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CascadeUp">
      <summary>
            CascadeUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CascadeDown">
      <summary>
            CascadeDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Mixed">
      <summary>
            Mixed
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextEffectFormat">
      <summary>
            Contains properties and methods that apply to WordArt objects.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            Shapes shapes = workbook.Worksheets[0].Shapes;
            shapes.AddTextEffect(MsoPresetTextEffect.TextEffect1, "Aspose", "Arial", 30, false, false, 0, 0, 0, 0, 100, 200);
            TextEffectFormat textEffectFormat = shapes[0].TextEffect;
            textEffectFormat.SetTextEffect(MsoPresetTextEffect.TextEffect10);
            workbook.Save("C:\\Book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            Dim shapes As Shapes = workbook.Worksheets(0).Shapes
            shapes.AddTextEffect(MsoPresetTextEffect.TextEffect1, "Aspose", "Arial", 30, false, false, 0, 0, 0, 0, 100, 200)
            Dim textEffectFormat As TextEffectFormat = shapes(0).TextEffect
            TextEffectFormat.SetTextEffect(MsoPresetTextEffect.TextEffect10)
            workbook.Save("C:\\Book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.TextEffectFormat.SetTextEffect(Aspose.Cells.Drawing.MsoPresetTextEffect)">
      <summary>
            Sets the preset text effect.
            </summary>
      <param name="effect">The preset tect effect.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.Text">
      <summary>
            The text in the WordArt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.FontName">
      <summary>
            The name of the font used in the WordArt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.FontBold">
      <summary>
            Indicates whether font is bold.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.FontItalic">
      <summary>
            Indicates whether font is italic.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.RotatedChars">
      <summary>
            If true,characters in the specified WordArt are rotated 90 degrees relative to the WordArt's bounding shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.FontSize">
      <summary>
            The size (in points) of the font used in the WordArt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextEffectFormat.PresetShape">
      <summary>
            Gets and sets the preset shape type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoFillFormat">
      <summary>
            Represents fill formatting for a shape. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.MsoFillFormat.SetOneColorGradient(System.Drawing.Color,System.Double,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a one-color gradient.
            </summary>
      <param name="color">One gradient color.</param>
      <param name="degree">The gradient degree. Can be a value from 0.0 (dark) through 1.0 (light).</param>
      <param name="style">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.ForeColor">
      <summary>
            Gets and sets the fill fore color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.BackColor">
      <summary>
            Gets and sets the file back color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.ImageData">
      <summary>
            Gets and sets the Texture and Picture fill data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.Texture">
      <summary>
            Gets the texture fill type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFillFormat.IsVisible">
      <summary>
            Indicats whether there is fill. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoFormatPicture">
      <summary>
            Reprensents the picture format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.TopCrop">
      <summary>
            Reprensents the location of the top of the crop rectangle expressed, expressed as a ratio of the image's height.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.BottomCrop">
      <summary>
            Reprensents the location of the bottom of the crop rectangle expressed, expressed as a ratio of the image's height.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.LeftCrop">
      <summary>
             Reprensents the location of the left of the crop rectangle expressed, expressed as a ratio of the image's width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.RightCrop">
      <summary>
            Reprensents the location of the right of the crop rectangle expressed, expressed as a ratio of the image's width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.TransparentColor">
      <summary>
            Gets and sets the transparent color of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.Contrast">
      <summary>
            Represents the contrast modification for the picture.in unit of percentage.
            </summary>
      <remarks>
            It is between -100% and 100%. It works same as Excel 2007 or above version.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.Brightness">
      <summary>
            Represents the brightness modification for the picture in unit of percentage.
            </summary>
      <remarks>
            It is between -100% and 100%. It works same as Excel 2007 or above version.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.IsBiLevel">
      <summary>
            Indicates whether whether this picture SHOULD be displayed in two-color black and white.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoFormatPicture.IsGray">
      <summary>
            Indicates whether this picture SHOULD be displayed in grayscale.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoLineDashStyle">
      <summary>
            Represents style of dash drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Dash">
      <summary>
            Represent a dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashDot">
      <summary>
            Represents a dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashDotDot">
      <summary>
             Represents a dash-dot-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashLongDash">
      <summary>
             Represents a long dash-short dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashLongDashDot">
      <summary>
            Represents a long dash-short dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.RoundDot">
      <summary>
            Represents a round-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Solid">
      <summary>
            Represent a solid line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.SquareDot">
      <summary>
            Represents a square-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Custom">
      <summary>
            Custom dash style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoLineFormat">
      <summary>
            Represents line and arrowhead formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.IsVisible">
      <summary>
            Indicates whether the object is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.Style">
      <summary>
            Returns a Style object that represents the style of the specified range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.ForeColor">
      <summary>
            Gets and sets the border line fore color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.BackColor">
      <summary>
            Gets and sets the border line back color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.DashStyle">
      <summary>
            Gets or sets the dash style for the specified line.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.Transparency">
      <summary>
            Returns or sets the degree of transparency of the specified fill as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoLineFormat.Weight">
      <summary>
            Returns or sets the weight of the line ,in units of pt.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoLineStyle">
      <summary>
            Represents style of drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.Single">
      <summary>
            Single line (of width lineWidth)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThickBetweenThin">
      <summary>
            Three lines, thin, thick, thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThinThick">
      <summary>
            Double lines, one thin, one thick
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThickThin">
      <summary>
            Double lines, one thick, one thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThinThin">
      <summary>
            Double lines of equal width
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoTextFrame">
      <summary>
            Represents the text frame in a Shape object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.AutoSize">
      <summary>
            Indicates if size of shape is adjusted automatically according to its content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.IsAutoMargin">
      <summary>
            Indicates whether the margin is auto calculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.LeftMarginPt">
      <summary>
            Returnt the left margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.RightMarginPt">
      <summary>
            Returnt the right margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.TopMarginPt">
      <summary>
            Returns the top margin in unit of Points
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.MsoTextFrame.BottomMarginPt">
      <summary>
            Returnt the bottom margin in unit of Points
            </summary>
    </member>
    <member name="T:Aspose.Cells.Name">
      <summary>
             Represents a defined name for a range of cells.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             //Accessing the first worksheet in the Excel file
             Worksheet worksheet = workbook.Worksheets[0];
             //Creating a named range
             Range range = worksheet.Cells.CreateRange("B4", "G14");
             //Setting the name of the named range
             range.Name = "TestRange";
             //Saving the modified Excel file in default (that is Excel 2000) format
             workbook.Save("C:\\output.xls");   
            
             [Visual Basic]
             
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             'Accessing the first worksheet in the Excel file
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             'Creating a named range
             Dim range As Range = worksheet.Cells.CreateRange("B4", "G14")
             'Setting the name of the named range
             range.Name = "TestRange"
             'Saving the modified Excel file in default (that is Excel 2000) format
             workbook.Save("C:\\output.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Name.ToString">
      <summary>
            Returns a string represents the current Range object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRanges">
      <summary>
            Gets all ranges which referred by this name.
            </summary>
      <returns>All ranges.</returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRange">
      <summary>
            Gets the range if this name refers to a range.
            </summary>
      <returns>The range.</returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRange(System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the range if this name refers to a range.
            If the reference is not absolute reference, the range will be different in different cell.
            </summary>
      <param name="sheetIndex">The according sheet index.</param>
      <param name="row">The according row index.</param>
      <param name="column">The according column index</param>
      <returns>The range.</returns>
    </member>
    <member name="P:Aspose.Cells.Name.Comment">
      <summary>
            Gets and sets the commont of the name.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.Text">
      <summary>
            Gets the name text of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.FullText">
      <summary>
            Gets the name  full text of the object with the scope setting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.RefersTo">
      <summary>
            Returns or sets the formula that the name is defined to refer to, beginning with an equal sign.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.R1C1RefersTo">
      <summary>
             Gets or sets a R1C1 reference of the <see cref="T:Aspose.Cells.Name" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.IsReferred">
      <summary>
            Indicates whether this name is referred by other formulas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.IsVisible">
      <summary>
            Indicates whether the name is visible. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.SheetIndex">
      <summary>
            Indicates this name belongs to Workbook or Worksheet.
            0 = Global name, otherwise index to sheet (one-based)
            </summary>
    </member>
    <member name="T:Aspose.Cells.NameCollection">
      <summary>
            Represents a collection of all the <see cref="T:Aspose.Cells.Name" /> objects in the spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Add(System.String)">
      <summary>
            Defines a new name.
            </summary>
      <param name="text">The text to use as the name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Name" /> object index.</returns>
      <remarks>Name cannot include spaces and cannot look like cell references.</remarks>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Remove(System.String[])">
      <summary>
            Remove an array of name
            </summary>
      <param name="names">The names' text.</param>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Remove(System.String)">
      <summary>
            Remove the name.
            </summary>
      <param name="text">The name text.</param>
    </member>
    <member name="M:Aspose.Cells.NameCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the name at the specific index.
            </summary>
      <param name="index">
      </param>
      <remarks>
            Please make sure that the name is not referred by the other formulas before calling the method.
            And if the name is referred,please only set Name.RefersTo as null.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Clear">
      <summary>
            Remove all defined names which are not refered by the formulas and data source.
            If the defined name is refered, we only set Name.ReferTo as null and hide them.
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.RemoveDuplicateNames">
      <summary>
            Remove the duplicate defined names
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Sort">
      <summary>
            Sorts defined names.
            </summary>
      <remarks>If you create a large amount of named ranges in the Excel file, please call this method after all named ranges are created and before saving </remarks>
    </member>
    <member name="P:Aspose.Cells.NameCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.NameCollection.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element with the specified name.
             </summary>
      <param name="text">Name text.</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.SeriesCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Charts.Series" /> objects.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Excel object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "A4" cell
            worksheet.Cells["A4"].PutValue(200);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a sample value to "B4" cell
            worksheet.Cells["B4"].PutValue(40);
            //Adding a sample value to "C1" cell as category data
            worksheet.Cells["C1"].PutValue("Q1");
            //Adding a sample value to "C2" cell as category data
            worksheet.Cells["C2"].PutValue("Q2");
            //Adding a sample value to "C3" cell as category data
            worksheet.Cells["C3"].PutValue("Y1");
            //Adding a sample value to "C4" cell as category data
            worksheet.Cells["C4"].PutValue("Y2");
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", true);
            //Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4";
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Excel object
            Dim sheetIndex As Integer = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "A4" cell
            worksheet.Cells("A4").PutValue(200)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a sample value to "B4" cell
            worksheet.Cells("B4").PutValue(40)
            'Adding a sample value to "C1" cell as category data
            worksheet.Cells("C1").PutValue("Q1")
            'Adding a sample value to "C2" cell as category data
            worksheet.Cells("C2").PutValue("Q2")
            'Adding a sample value to "C3" cell as category data
            worksheet.Cells("C3").PutValue("Y1")
            'Adding a sample value to "C4" cell as category data
            worksheet.Cells("C4").PutValue("Y2")
            'Adding a chart to the worksheet
            Dim chartIndex As Integer = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", True)
            'Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4"
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.SeriesCollection.GetSeriesByOrder(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Charts.Series" /> element by order.
            </summary>
      <param name="order">The order of series</param>
      <returns>The element series</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.SeriesCollection.RemoveAt(System.Int32)">
      <summary>
            Remove at a series at the specific index.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Aspose.Cells.Charts.SeriesCollection.ChangeSeriesOrder(System.Int32,System.Int32)">
      <summary>
            Directly chanages the orders of the two series.
            </summary>
      <param name="sourceIndex">The current index</param>
      <param name="destIndex">The dest index</param>
    </member>
    <member name="M:Aspose.Cells.Charts.SeriesCollection.AddR1C1(System.String,System.Boolean)">
      <summary>
            Adds the <see cref="T:Aspose.Cells.Charts.SeriesCollection" /> collection to a chart.
            </summary>
      <param name="area">Specifies values from which to plot the data series</param>
      <param name="isVertical">Specifies whether to plot the series from a range of cell values by row or by column.</param>
      <returns>Return the first index of the added ASeries in the NSeries.</returns>
      <remarks>
        <br>If set data on contiguous cells, use colon to seperate them.For example, R[1]C[1]:R[3]C[2].</br>
        <br>If set data on contiguous cells, use comma to seperate them.For example,R[1]C[1],R[3]C[2].</br>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Charts.SeriesCollection.Add(System.String,System.Boolean)">
      <summary>
            Adds the <see cref="T:Aspose.Cells.Charts.SeriesCollection" /> collection to a chart.
            </summary>
      <param name="area">Specifies values from which to plot the data series</param>
      <param name="isVertical">Specifies whether to plot the series from a range of cell values by row or by column.</param>
      <returns>Return the first index of the added ASeries in the NSeries.</returns>
      <remarks>
        <br>If set data on contiguous cells, use colon to seperate them.For example, C2:C5.</br>
        <br>If set data on non contiguous cells, use comma to seperate them.For example, C2,D5.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.SeriesCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Charts.Series" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Charts.SeriesCollection.CategoryData">
      <summary>
            Gets or sets the range of category Axis values. 
             It can be a range of cells (such as, "d1:e10"), 
             or a sequence of values (such as,"{2,6,8,10}"). 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SeriesCollection.SecondCatergoryData">
      <summary>
            Gets or sets the range of second category Axis values. 
             It can be a range of cells (such as, "d1:e10"), 
             or a sequence of values (such as,"{2,6,8,10}"). 
             Only effects when some ASerieses plot on the second axis.
             </summary>
      <remarks>
             NOTE: This member is now obsolete. Instead, 
             please use SeriesCollection.SecondCategoryData property.
             This property will be removed 12 months later since February 2014. 
             Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.SeriesCollection.SecondCategoryData">
      <summary>
            Gets or sets the range of second category Axis values. 
             It can be a range of cells (such as, "d1:e10"), 
             or a sequence of values (such as,"{2,6,8,10}"). 
             Only effects when some ASerieses plot on the second axis.
             </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.SeriesCollection.IsColorVaried">
      <summary>
            Represents if the color of points is varied. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.OleObject">
      <summary>
            Represents an OleObject in a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiate a new Workbook.
            Workbook workbook = new Workbook();
            //Get the first worksheet. 
            Worksheet sheet = workbook.Worksheets[0];
            //Define a string variable to store the image path.
            string ImageUrl = @"C:\school.jpg";
            //Get the picture into the streams.
            FileStream fs = File.OpenRead(ImageUrl);
            //Define a byte array.
            byte[] imageData = new Byte[fs.Length];
            //Obtain the picture into the array of bytes from streams.
            fs.Read(imageData, 0, imageData.Length);
            //Close the stream.
            fs.Close();
            //Get an excel file path in a variable.
            string path = @"C:\Book1.xls";
            //Get the file into the streams.
            fs = File.OpenRead(path);
            //Define an array of bytes. 
            byte[] objectData = new Byte[fs.Length];
            //Store the file from streams.
            fs.Read(objectData, 0, objectData.Length);
            //Close the stream.
            fs.Close();
            //Add an Ole object into the worksheet with the image
            //shown in MS Excel.
            sheet.OleObjects.Add(14, 3, 200, 220, imageData);
            //Set embedded ole object data.     
            sheet.OleObjects[0].ObjectData = objectData;
            //Save the excel file
            workbook.Save(@"C:\oleobjects.xls");
            
            
            [Visual Basic]
            
            'Instantiate a new Workbook.
            Dim workbook As Workbook = New Workbook()
            'Get the first worksheet. 
            Dim sheet As Worksheet = workbook.Worksheets(0)
            'Define a string variable to store the image path.
            Dim ImageUrl As String = @"C:\school.jpg"
            'Get the picture into the streams.
            Dim fs As FileStream = File.OpenRead(ImageUrl)
            'Define a byte array.
            Dim imageData(fs.Length) As Byte
            'Obtain the picture into the array of bytes from streams.
            fs.Read(imageData, 0, imageData.Length)
            'Close the stream.
            fs.Close()
            'Get an excel file path in a variable.
            Dim path As String = @"C:\Book1.xls"
            'Get the file into the streams.
            fs = File.OpenRead(path)
            'Define an array of bytes. 
            Dim objectData(fs.Length) As Byte
            'Store the file from streams.
            fs.Read(objectData, 0, objectData.Length)
            'Close the stream.
            fs.Close()
            'Add an Ole object into the worksheet with the image
            'shown in MS Excel.
            sheet.OleObjects.Add(14, 3, 200, 220, imageData)
            'Set embedded ole object data.     
            sheet.OleObjects(0).ObjectData = objectData
            'Save the excel file
            workbook.Save("C:\oleobjects.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.OleObject.SetNativeSourceFullName(System.String)">
      <summary>
            Sets the ole native source full file name with path.
            </summary>
      <param name="sourceFullName">the ole native source full file name</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.IsAutoSize">
      <summary>
            True indicates that the size of the ole object will be auto changed as the size of snapshop of the embedded content
            when the ole object is activated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.IsLink">
      <summary>
            Returns true if the OleObject is linked
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.DisplayAsIcon">
      <summary>
            True if the specified object is displayed as an icon 
            and the image will not be auto changed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ImageData">
      <summary>
            Represents image of ole object as byte array.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ObjectData">
      <summary>
            Represents embedded ole object data as byte array.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ImageSourceFullName">
      <summary>
            Gets or sets the path and name of the source file for the linked image. 
            </summary>
      <remarks>
            The default value is an empty string.
            If SourceFullName is not an empty string, the image is linked.
            If SourceFullName is not an empty string, but Data is null, then the image is linked and not stored in the file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ProgID">
      <summary>
            Gets or sets the ProgID of the OLE object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.FileFormatType">
      <summary>
            Gets and sets the file type of the embedded ole object data
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.FileType">
      <summary>
            Gets and sets the file type of the embedded ole object data
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use OleObject.FileFormatType property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ObjectSourceFullName">
      <summary>
            Returns the source full name of the source file for the linked OLE object.
            </summary>
      <remarks>Only supports setting the source full name when the file type is OleFileType.Unknown.
            Such as wav file ,avi file..etc..
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.SourceFullName">
      <summary>
            Returns the source full name of the source file for the linked OLE object.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use OleObject.ObjectSourceFullName property.
            This property will be removed 12 months later since November 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.AutoUpdate">
      <summary>
            Specifies whether the link to the OleObject is automatically updated or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.AutoLoad">
      <summary>
            Specifies whether the host application for the embedded object shall be called to load
            the object data automatically when the parent workbook is opened.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObject.ImageFormat">
      <summary>
            Gets the image format of the picture.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.OleObjectCollection">
      <summary>
            Represents embedded OLE objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.OleObjectCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
            Adds an OleObject to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of oleObject, in unit of pixel.</param>
      <param name="width">Width of oleObject, in unit of pixel.</param>
      <param name="imageData"> Image of ole object as byte array.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.OleObject" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.OleObjectCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.String)">
      <summary>
            Adds an linked OleObject to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of oleObject, in unit of pixel.</param>
      <param name="width">Width of oleObject, in unit of pixel.</param>
      <param name="imageData"> Image of ole object as byte array.</param>
      <param name="linkedFile">
      </param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.OleObject" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.OleObjectCollection.Clear">
      <summary>
            Remove all embedded OLE objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.OleObjectCollection.RemoveAt(System.Int32)">
      <summary>
             Removes the element at the specified index.
            </summary>
      <param name="index">The specified index.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.OleObjectCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.OleObject" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.OperatorType">
      <summary>
            Represents the operator type of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Between">
      <summary>
            Represents Between operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Equal">
      <summary>
            Represents Equal operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessThan">
      <summary>
            Represents LessThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotBetween">
      <summary>
            Represents NotBetween operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotEqual">
      <summary>
            Represents NotEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Outline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryRowBelow">
      <summary>
            Indicates if the summary row will be positioned below the detail rows in the outline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryColumnRight">
      <summary>
            Indicates if the summary column will be positioned to the right of the detail columns in the outline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Oval">
      <summary>
            Represents the oval shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageOrientationType">
      <summary>
            Represents print orientation constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Landscape">
      <summary>
            Landscape orientation
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Portrait">
      <summary>
            Portrait orientation
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageSetup">
      <summary>
            Encapsulates the object that represents the page setup description. 
            The PageSetup object contains all page setup options.
            </summary>
      <example>
        <code>
            [C#]
            sheet.PageSetup.PrintArea = "D1:K13";
            sheet.PageSetup.PrintTitleRows = "$5:$7";
            sheet.PageSetup.PrintTitleColumns = "$A:$B";
            
            [Visual Basic]
            sheet.PageSetup.PrintArea = "D1:K13"
            sheet.PageSetup.PrintTitleRows = "$5:$7"
            sheet.PageSetup.PrintTitleColumns = "$A:$B"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.PageSetup.ClearHeaderFooter">
      <summary>
            Clears header and footer setting.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetHeader(System.Int32)">
      <summary>
             Gets a script formatting the header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetCommands(System.String)">
      <summary>
            Gets all commands of header or footer.
            </summary>
      <param name="headerFooterScript">The header/footer script</param>
      <returns>Returns all commands of header or footer.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFooter(System.Int32)">
      <summary>
             Gets a script formatting the footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the header of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>¡¡</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size.If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;K"</td>
            <td width="75%">Font color, for exampe(RED): &amp;FF0000</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Header Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the footer of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>¡¡</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size.If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Footer Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetEvenHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the even page header of an Excel file.
            Only effect in Excel 2007 when IsHFDiffOddEven is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetEvenHeader(System.Int32)">
      <summary>
             Gets a script formatting the even header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetEvenFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the even page footer of an Excel file.
            Only effect in Excel 2007 when IsHFDiffOddEven is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetEvenFooter(System.Int32)">
      <summary>
             Gets a script formatting the even footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFirstPageHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the first page header of an Excel file.
            Only effect in Excel 2007 when IsHFDiffFirst is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFirstPageHeader(System.Int32)">
      <summary>
             Gets a script formatting the first page header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFirstPageFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the first page footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFirstPageFooter(System.Int32)">
      <summary>
             Gets a script formatting the first page footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetHeaderPicture(System.Int32,System.Byte[])">
      <summary>
            Sets an image in the header of a worksheet.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerPicture">Image data.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.Picture" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFooterPicture(System.Int32,System.Byte[])">
      <summary>
            Sets an image in the footer of a worksheet.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerPicture">Image data.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.Picture" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetPicture(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Byte[])">
      <summary>
            Sets an image in the header/footer of a worksheet.
            </summary>
      <param name="isFirst">Indicateds whether setting the picture of first page header/footer. </param>
      <param name="isEven">Indicateds whether setting the picture of even page header/footer.</param>
      <param name="isHeader">Indicateds whether setting the picture of header/footer.</param>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="imageData">Image data.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.Picture" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetPicture(System.Boolean,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Drawing.Picture" /> object of the header / footer.
            </summary>
      <param name="isHeader">Indicates whether it is in the header or footer.</param>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.Picture" /> object.
            Returns null if there is no picture.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetPicture(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.Picture" /> object of the header / footer.
            </summary>
      <param name="isFirst">Indicateds whether getting the picture of first page header/footer. </param>
      <param name="isEven">Indicateds whether getting the picture of even page header/footer.</param>
      <param name="isHeader">Indicateds whether getting the picture of header/footer.</param>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <returns>Returns <see cref="T:Aspose.Cells.Drawing.Picture" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintArea">
      <summary>
            Represents the range to be printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleColumns">
      <summary>
            Represents the columns that contain the cells to be repeated on the left side of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            cells.PageSetup.PrintTitleColumns = "$A:$A";
            
            [Visula Basic]
            
            cells.PageSetup.PrintTitleColumns = "$A:$A"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleRows">
      <summary>
            Represents the rows that contain the cells to be repeated at the top of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            cells.PageSetup.PrintTitleRows = "$1:$1";
            
            [Visula Basic]
            
            cells.PageSetup.PrintTitleRows = "$1:$1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BlackAndWhite">
      <summary>
            Represents if elements of the document will be printed in black and white.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterHorizontally">
      <summary>
            Represent if the sheet is printed centered horizontally.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterVertically">
      <summary>
            Represent if the sheet is printed centered vertically.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Draft">
      <summary>
            Represents if the sheet will be printed without graphics.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use PageSetup.PrintDraft property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintDraft">
      <summary>
            Represents if the sheet will be printed without graphics.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMargin">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMarginInch">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMargin">
      <summary>
            Represents the distance from the top of the page to the header, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMarginInch">
      <summary>
            Represents the distance from the top of the page to the header, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMargin">
      <summary>
            Represents the size of the left margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMarginInch">
      <summary>
            Represents the size of the left margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMargin">
      <summary>
            Represents the size of the right margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMarginInch">
      <summary>
            Represents the size of the right margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMargin">
      <summary>
            Represents the size of the top margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMarginInch">
      <summary>
            Represents the size of the top margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMargin">
      <summary>
            Represents the size of the bottom margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMarginInch">
      <summary>
            Represents the size of the bottom margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FirstPageNumber">
      <summary>
            Represents the first page number that will be used when this sheet is printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesTall">
      <summary>
            Represents  the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesWide">
      <summary>
            Represents the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsPercentScale">
      <summary>
            If this property is False, the FitToPagesWide and FitToPagesTall properties control how the worksheet is scaled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Order">
      <summary>
            Represents the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PaperSize">
      <summary>
            Represents the size of the paper.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Orientation">
      <summary>
            Represents page print orientation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintComments">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintErrors">
      <summary>
            Specifies the type of print error displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintHeadings">
      <summary>
            Represents if row and column headings are printed with this page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintGridlines">
      <summary>
            Represents if cell gridlines are printed on the page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be between 10 and 400.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsAutoFirstPageNumber">
      <summary>
            Indicates whether the first the page number is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintQuality">
      <summary>
            Represents the print quality.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintCopies">
      <summary>
            Get and sets number of copies to print.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFDiffOddEven">
      <summary>
            True means that the header/footer of the odd pages is different with odd pages.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFDiffFirst">
      <summary>
            True means that the header/footer of the first page is different with other pages.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFScaleWithDoc">
      <summary>
            Indicates whether header and footer are scaled with document scaling.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFAlignMargins">
      <summary>
            Indicates whether header and footer margins are aligned with the page margins.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PaneCollection">
      <summary>
            Represents all Pane objects shown in the specified window.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PaneCollection.FirstVisibleRowOfBottomPane">
      <summary>
            Gets and sets the first visible row of the bottom pane.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PaneCollection.FirstVisibleColumnOfRightPane">
      <summary>
            Gets and sets the first visible column of the right pane.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PaneCollection.AcitvePaneType">
      <summary>
            Gets and sets the active pane.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PaperSizeType">
      <summary>
            Represents paper size constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetter">
      <summary>
            Letter (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterSmall">
      <summary>
            Letter Small (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperTabloid">
      <summary>
            Tabloid (11 in. x 17 in.) 
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLedger">
      <summary>
            Ledger (17 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLegal">
      <summary>
            Legal (8-1/2 in. x 14 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperStatement">
      <summary>
            Statement (5-1/2 in. x 8-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperExecutive">
      <summary>
            Executive (7-1/4 in. x 10-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3">
      <summary>
            A3 (297 mm x 420 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4">
      <summary>
            A4 (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Small">
      <summary>
            A4 Small (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5">
      <summary>
            A5 (148 mm x 210 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB4">
      <summary>
            JIS B4 (257 mm x 364 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB5">
      <summary>
            JIS B5 (182 mm x 257 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFolio">
      <summary>
            Folio (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperQuarto">
      <summary>
            Quarto (215 mm x 275 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper10x14">
      <summary>
            10 in. x 14 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper11x17">
      <summary>
            11 in. x 17 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperNote">
      <summary>
            Note (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope9">
      <summary>
            Envelope #9 (3-7/8 in. x 8-7/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope10">
      <summary>
            Envelope #10 (4-1/8 in. x 9-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope11">
      <summary>
            Envelope #11 (4-1/2 in. x 10-3/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope12">
      <summary>
            Envelope #12 (4-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope14">
      <summary>
            Envelope #14 (5 in. x 11-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperCSheet">
      <summary>
            C size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperDSheet">
      <summary>
            D size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperESheet">
      <summary>
            E size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeDL">
      <summary>
            Envelope DL (110 mm x 220 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC5">
      <summary>
            Envelope C5 (162 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC3">
      <summary>
            Envelope C3 (324 mm x 458 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC4">
      <summary>
            Envelope C4 (229 mm x 324 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC6">
      <summary>
            Envelope C6 (114 mm x 162 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC65">
      <summary>
            Envelope C65 (114 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB4">
      <summary>
            Envelope B4 (250 mm x 353 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB5">
      <summary>
            Envelope B5 (176 mm x 250 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB6">
      <summary>
            Envelope B6 (176 mm x 125 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeItaly">
      <summary>
            Envelope Italy (110 mm x 230 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeMonarch">
      <summary>
            Envelope Monarch (3-7/8 in. x 7-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopePersonal">
      <summary>
            Envelope (3-5/8 in. x 6-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldUS">
      <summary>
            U.S. Standard Fanfold (14-7/8 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldStdGerman">
      <summary>
            German Standard Fanfold (8-1/2 in. x 12 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldLegalGerman">
      <summary>
            German Legal Fanfold (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperISOB4">
      <summary>
            B4 (ISO) 250 x 353 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapanesePostcard">
      <summary>
            Japanese Postcard (100mm ¡Á 148mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper9x11">
      <summary>
            9? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper10x11">
      <summary>
            10? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper15x11">
      <summary>
            15? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeInvite">
      <summary>
            Envelope Invite(220mm ¡Á 220mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterExtra">
      <summary>
            US Letter Extra 9 \275 x 12 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLegalExtra">
      <summary>
            US Legal Extra 9 \275 x 15 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperTabloidExtra">
      <summary>
            US Tabloid Extra 11.69 x 18 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Extra">
      <summary>
            A4 Extra 9.27 x 12.69 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterTransverse">
      <summary>
            Letter Transverse 8 \275 x 11 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Transverse">
      <summary>
            A4 Transverse 210 x 297 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterExtraTransverse">
      <summary>
            Letter Extra Transverse 9\275 x 12 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperSuperA">
      <summary>
            SuperA/SuperA/A4 227 x 356 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperSuperB">
      <summary>
            SuperB/SuperB/A3 305 x 487 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterPlus">
      <summary>
            US Letter Plus 8.5 x 12.69 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Plus">
      <summary>
            A4 Plus 210 x 330 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Transverse">
      <summary>
            A5 Transverse 148 x 210 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB5Transverse">
      <summary>
            B5 (JIS) Transverse 182 x 257 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Extra">
      <summary>
            A3 Extra 322 x 445 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Extra">
      <summary>
            A5 Extra 174 x 235 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperISOB5Extra">
      <summary>
            B5 (ISO) Extra 201 x 276 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA2">
      <summary>
            A2 420 x 594 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Transverse">
      <summary>
            A3 Transverse 297 x 420 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3ExtraTransverse">
      <summary>
            A3 Extra Transverse 322 x 445 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseDoublePostcard">
      <summary>
            Japanese Double Postcard 200 x 148 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA6">
      <summary>
            A6 105 x 148 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku2">
      <summary>
            Japanese Envelope Kaku #2
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku3">
      <summary>
            Japanese Envelope Kaku #3
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou3">
      <summary>
            Japanese Envelope Chou #3
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou4">
      <summary>
            Japanese Envelope Chou #4
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterRotated">
      <summary>
            11in ¡Á 8.5in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Rotated">
      <summary>
            420mm ¡Á 297mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Rotated">
      <summary>
            297mm ¡Á 210mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Rotated">
      <summary>
            210mm ¡Á 148mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB4Rotated">
      <summary>
            B4 (JIS) Rotated 364 x 257 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB5Rotated">
      <summary>
            B5 (JIS) Rotated 257 x 182 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapanesePostcardRotated">
      <summary>
            Japanese Postcard Rotated 148 x 100 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseDoublePostcardRotated">
      <summary>
            Double Japanese Postcard Rotated 148 x 200 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA6Rotated">
      <summary>
            A6 Rotated 148 x 105 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku2Rotated">
      <summary>
            Japanese Envelope Kaku #2 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku3Rotated">
      <summary>
            Japanese Envelope Kaku #3 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou3Rotated">
      <summary>
            Japanese Envelope Chou #3 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou4Rotated">
      <summary>
            Japanese Envelope Chou #4 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB6">
      <summary>
            B6 (JIS) 128 x 182 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB6Rotated">
      <summary>
            B6 (JIS) Rotated 182 x 128 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper12x11">
      <summary>
            12 x 11 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeYou4">
      <summary>
            Japanese Envelope You #4
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeYou4Rotated">
      <summary>
            Japanese Envelope You #4 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC16K">
      <summary>
            PRC 16K 146 x 215 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC32K">
      <summary>
            PRC 32K 97 x 151 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCBig32K">
      <summary>
            PRC 32K(Big) 97 x 151 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope1">
      <summary>
            PRC Envelope #1 102 x 165 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope2">
      <summary>
            PRC Envelope #2 102 x 176 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope3">
      <summary>
            PRC Envelope #3 125 x 176 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope4">
      <summary>
            PRC Envelope #4 110 x 208 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope5">
      <summary>
            PRC Envelope #5 110 x 220 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope6">
      <summary>
            PRC Envelope #6 120 x 230 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope7">
      <summary>
            PRC Envelope #7 160 x 230 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope8">
      <summary>
            PRC Envelope #8 120 x 309 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope9">
      <summary>
            PRC Envelope #9 229 x 324 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope10">
      <summary>
            PRC Envelope #10 324 x 458 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC16KRotated">
      <summary>
            PRC 16K Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC32KRotated">
      <summary>
            PRC 32K Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCBig32KRotated">
      <summary>
            PRC 32K(Big) Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope1Rotated">
      <summary>
            PRC Envelope #1 Rotated 165 x 102 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope2Rotated">
      <summary>
            PRC Envelope #2 Rotated 176 x 102 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope3Rotated">
      <summary>
            PRC Envelope #3 Rotated 176 x 125 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope4Rotated">
      <summary>
            PRC Envelope #4 Rotated 208 x 110 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope5Rotated">
      <summary>
            PRC Envelope #5 Rotated 220 x 110 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope6Rotated">
      <summary>
            PRC Envelope #6 Rotated 230 x 120 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope7Rotated">
      <summary>
            PRC Envelope #7 Rotated 230 x 160 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope8Rotated">
      <summary>
            PRC Envelope #8 Rotated 309 x 120 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope9Rotated">
      <summary>
            PRC Envelope #9 Rotated 324 x 229 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope10Rotated">
      <summary>
            PRC Envelope #10 Rotated 458 x 324 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB3">
      <summary>
            usual B3(13.9 x 19.7 in)
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperBusinessCard">
      <summary>
            Business Card(90mm x 55 mm)
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperThermal">
      <summary>
            Thermal(3 x 11 in)
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Picture">
      <summary>
            Encapsulates the object that represents a single picture in a spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Workbook object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a picture at the location of a cell whose row and column indices
            //are 5 in the worksheet. It is "F6" cell
            worksheet.Pictures.Add(5, 5, "C:\\image.gif");
            //Saving the Excel file
            workbook.Save(saveFileDialog1.FileName, SaveFormat.Excel97To2003);
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Workbook object
            Dim sheetIndex As Integer = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a picture at the location of a cell whose row and column indices
            'are 5 in the worksheet. It is "F6" cell
            worksheet.Pictures.Add(5, 5, "C:\image.gif")
            'Saving the Excel file
            workbook.Save("C:\book1.xls", SaveFormat.Excel97To2003)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Drawing.Picture.Move(System.Int32,System.Int32)">
      <summary>
            Moves the picture to a specified location.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalHeight">
      <summary>
            Gets the original height of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalWidth">
      <summary>
            Gets the original width of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.BorderLineColor">
      <summary>
            Represents the <see cref="T:System.Drawing.Color" /> of the border line of a picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.BorderWeight">
      <summary>
            Gets or sets the weight of the border line of a picture in units of pt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.Data">
      <summary>
            Gets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.SourceFullName">
      <summary>
            Gets or sets the path and name of the source file for the linked image. 
            </summary>
      <remarks>
            The default value is an empty string.
            If SourceFullName is not an empty string, the image is linked.
            If SourceFullName is not an empty string, but Data is null, then the image is linked and not stored in the file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.Formula">
      <summary>
            Gets and sets the data of the formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.IsAutoSize">
      <summary>
            True indicates that the size of the ole object will be auto changed as the size of snapshop of the embedded content
            when the ole object is activated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.IsLink">
      <summary>
            Returns true if the OleObject is linked
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.IsDynamicDataExchange">
      <summary>
            Gets or sets whether dynamic data exchange
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.DisplayAsIcon">
      <summary>
            True if the specified object is displayed as an icon 
            and the image will not be auto changed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.ImageFormat">
      <summary>
            Gets the image format of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalHeightCM">
      <summary>
            Gets the original height of picture, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalWidthCM">
      <summary>
            Gets the original width of picture, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalHeightInch">
      <summary>
            Gets the original height of picture, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.OriginalWidthInch">
      <summary>
            Gets the original width of picture, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Picture.SignatureLine">
      <summary>
            Gets and sets the singature line
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PictureCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Drawing.Picture" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image height, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image height, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.Clear">
      <summary>
            Clear all pictures.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.PictureCollection.RemoveAt(System.Int32)">
      <summary>
            Remove shapes at the specific index
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.PictureCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.Picture" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.PlacementType">
      <summary>
            Represents the way the drawing object is attached to the cells below it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.FreeFloating">
      <summary>
            Don't move or size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.Move">
      <summary>
            Move but don't size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.MoveAndSize">
      <summary>
            Move and size with cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintCommentsType">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintInPlace">
      <summary>
            Represents to print comments as displayed on sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintNoComments">
      <summary>
            Represents not to print comments.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintSheetEnd">
      <summary>
            Represents to print comments at end of sheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintErrorsType">
      <summary>
            Represents print errors constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsBlank">
      <summary>
            Represents not to print errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDash">
      <summary>
            Represents to print errors as "--".
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDisplayed">
      <summary>
            Represents to print errors as displayed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsNA">
      <summary>
            Represents to print errors as "#N/A".
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintOrderType">
      <summary>
            Represent print order constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.DownThenOver">
      <summary>
            Down, then over
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.OverThenDown">
      <summary>
            Over, then down
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintSizeType">
      <summary>
            Represents the printed chart size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Full">
      <summary>
            Use full page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Fit">
      <summary>
            Scale to fit page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Custom">
      <summary>
            Custom.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. 
            Only used in ExcelXP and above version.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Allowing users to select locked cells of the worksheet
            worksheet.Protection.AllowSelectingLockedCell = true;
            //Allowing users to select unlocked cells of the worksheet
            worksheet.Protection.AllowSelectingUnlockedCell = true;  
            
            [Visual Basic]
            
            'Allowing users to select locked cells of the worksheet
            worksheet.Protection.AllowSelectingLockedCell = True
            'Allowing users to select unlocked cells of the worksheet
            worksheet.Protection.AllowSelectingUnlockedCell = True
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Protection.Copy(Aspose.Cells.Protection)">
      <summary>
            Copy protection info.
            </summary>
      <param name="source">
      </param>
    </member>
    <member name="M:Aspose.Cells.Protection.GetPasswordHash">
      <summary>
            Gets the hash of current password.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Protection.VerifyPassword(System.String)">
      <summary>
             Verifies password.
            </summary>
      <param name="password">The password.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowDeletingColumn">
      <summary>
            Represents if the deletion of columns is allowed on a protected worksheet.
            </summary>
      <remarks>The columns containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingColumnsAllowed">
      <summary>
            Represents if the deletion of columns is allowed on a protected worksheet.
            </summary>
      <remarks>The columns containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowDeletingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowDeletingRow">
      <summary>
            Represents if the deletion of rows is allowed on a protected worksheet.
            </summary>
      <remarks>The rows containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingRowsAllowed">
      <summary>
            Represents if the deletion of rows is allowed on a protected worksheet.
            </summary>
      <remarks>The rows containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowDeletingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFiltering">
      <summary>
            Represents if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFilteringAllowed">
      <summary>
            Represents if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFiltering property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingCell">
      <summary>
            Represents if the formatting of cells is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingCellsAllowed">
      <summary>
            Represents if the formatting of cells is allowed on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingColumn">
      <summary>
            Represents if the formatting of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingColumnsAllowed">
      <summary>
            Represents if the formatting of columns is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingRow">
      <summary>
            Represents if the formatting of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingRowsAllowed">
      <summary>
            Represents if the formatting of rows is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingColumn">
      <summary>
            Represents if the insertion of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingColumnsAllowed">
      <summary>
            Represents if the insertion of columns is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingHyperlink">
      <summary>
            Represents if the insertion of hyperlinks is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingHyperlinksAllowed">
      <summary>
            Represents if the insertion of hyperlinks is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingHyperlink property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingRow">
      <summary>
            Represents if the insertion of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingRowsAllowed">
      <summary>
            Represents if the insertion of rows is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSorting">
      <summary>
            Represents if the sorting option is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSortingAllowed">
      <summary>
            Represents if the sorting option is allowed on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSorting property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowUsingPivotTable">
      <summary>
            Represents if the user is allowed to manipulate pivot tables on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsUsingPivotTablesAllowed">
      <summary>
            Represents if the user is allowed to manipulate pivot tables on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowUsingPivotTable property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingContent">
      <summary>
            Represents if the user is allowed to edit contents of locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingContentsAllowed">
      <summary>
            Represents if the user is allowed to edit contents of locked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingContent property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingObject">
      <summary>
            Represents if the user is allowed to manipulate drawing objects on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingObjectsAllowed">
      <summary>
            Represents if the user is allowed to manipulate drawing objects on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingObject property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingScenario">
      <summary>
            Represents if the user is allowed to edit scenarios on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingScenariosAllowed">
      <summary>
            Represents if the user is allowed to edit scenarios on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingScenario property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.Password">
      <summary>
            Represents the password to protect the worksheet.
            </summary>
      <remarks>
            If password is set to null or blank string, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsProtectedWithPassword">
      <summary>
            Indicates whether the worksheets is protected with password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSelectingLockedCell">
      <summary>
            Represents if the user is allowed to select locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingLockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select locked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSelectingLockedCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSelectingUnlockedCell">
      <summary>
            Represents if the user is allowed to select unlocked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingUnlockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select unlocked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSelectingUnlockedCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="T:Aspose.Cells.ProtectionType">
      <summary>
            Represents workbook/worksheet protection type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.All">
      <summary>
            Represents to protect all.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Contents">
      <summary>
            Represents to protect contents, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Objects">
      <summary>
            Represents to protect objects, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Scenarios">
      <summary>
            Represents to protect scenarios, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Structure">
      <summary>
            Represents to protect structure, used in Workbook protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Windows">
      <summary>
            Represents to protect window, used in Workbook protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.None">
      <summary>
            Represents no protection. Only for Reading property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.RadioButton">
      <summary>
            Represents a radion button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.RadioButton.LinkedCell">
      <summary>
             Represents the cell linked to value of the radiobutton.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.RadioButton.IsChecked">
      <summary>
            Indicates if the radiobutton is checked or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.RadioButton.Shadow">
      <summary>
            Indicates whether the combobox has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.RadioButton.GroupBox">
      <summary>
            Gets the GroupBox that contains this RadioButton.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Range">
      <summary>
            Encapsulates the object that represents a range of cells within a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumertor</returns>
    </member>
    <member name="M:Aspose.Cells.Range.IsIntersect(Aspose.Cells.Range)">
      <summary>
            Indicates whether the range is intersect.
            </summary>
      <param name="range">The range.</param>
      <returns> Whether the range is intersect.</returns>
      <remarks>If the two rangs area not in the same worksheet ,return false.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.Intersect(Aspose.Cells.Range)">
      <summary>
            Returns a Range object that represents the rectangular intersection of two ranges.
            </summary>
      <param name="range">The intersecting range.</param>
      <returns>a Range object</returns>
      <remarks>If the two ranges are not intersected ,returns null.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.Union(Aspose.Cells.Range)">
      <summary>
            Returns the union of two ranges.
            </summary>
      <param name="range">The range</param>
      <returns>The union of two ranges.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Range.Merge">
      <summary>
             Combines a range of cells into a single cell. 		
             </summary>
      <remarks>
             Reference the merged cell via the address of the upper-left cell in the range.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.UnMerge">
      <summary>
            Unmerges merged cells of this range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the range, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="M:Aspose.Cells.Range.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole range.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
      <remarks>Each cell in this range will contains a <see cref="T:Aspose.Cells.Style" /> object. 
            So this is a memory-consuming method. Please use it carefully.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.SetStyle(Aspose.Cells.Style)">
      <summary>
            Sets the style of the range.
            </summary>
      <param name="style">The Style object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorders(Aspose.Cells.CellBorderType,System.Drawing.Color)">
      <summary>
            Sets the outline borders around a range of cells with same border style and color.
            </summary>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorders(Aspose.Cells.CellBorderType[],System.Drawing.Color[])">
      <summary>
            Sets out line borders around a range of cells.
            </summary>
      <param name="borderStyles">Border styles.</param>
      <param name="borderColors">Border colors.</param>
      <remarks>
            Both the length of borderStyles and borderStyles must be 4.
            The order of of borderStyles and borderStyles must be top,bottom,left,right
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,System.Drawing.Color)">
      <summary>
            Sets outline border around a range of cells.
            </summary>
      <param name="borderEdge">Border edge.</param>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="M:Aspose.Cells.Range.MoveTo(System.Int32,System.Int32)">
      <summary>
            Move the current range to the dest range.
            </summary>
      <param name="destRow">The start row of the dest range.</param>
      <param name="destColumn">The start column of the dest range.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyData(Aspose.Cells.Range)">
      <summary>
            Copies cell data (including formulas) from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyValue(Aspose.Cells.Range)">
      <summary>
            Copies cell value from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyStyle(Aspose.Cells.Range)">
      <summary>
            Copies style settings from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.Copy(Aspose.Cells.Range,Aspose.Cells.PasteOptions)">
      <summary>
            Copying the range with paste special options.
            </summary>
      <param name="range">The soure range.</param>
      <param name="options">The paste special options.</param>
    </member>
    <member name="M:Aspose.Cells.Range.Copy(Aspose.Cells.Range)">
      <summary>
            Copies data (including formulas), formatting, drawing objects etc. from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.GetCellOrNull(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object or null in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Range.ToString">
      <summary>
            Returns a string represents the current Range object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Range.ExportDataTable">
      <summary>
            Exports data in this range to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Range.ExportDataTableAsString">
      <summary>
            Exports data in this range to a <see cref="T:System.Data.DataTable" /> object.
            </summary>
      <returns>Exported <see cref="T:System.Data.DataTable" /> object.</returns>
      <remarks>All data in the <see cref="T:Aspose.Cells.Cells" /> collection are converted to strings.</remarks>
    </member>
    <member name="P:Aspose.Cells.Range.RowCount">
      <summary>
            Gets the count of rows in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnCount">
      <summary>
            Gets the count of columns in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Name">
      <summary>
            Gets or sets the name of the range.
            </summary>
      <remarks>Named range is supported. For example,
            <p>range.Name = "Sheet1!MyRange";</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Range.RefersTo">
      <summary>
            Gets the range's refers to.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.FirstRow">
      <summary>
            Gets the index of the first row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.FirstColumn">
      <summary>
            Gets the index of the first column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Value">
      <summary>
            Gets and sets the value of the range.
            </summary>
      <remarks>
            If the range contains multiple cells, return a two-dimension <see cref="T:System.Array" /> object.
            If applies object array to the range, it should be a two-dimension <see cref="T:System.Array" /> object.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnWidth">
      <summary>
             Sets or gets the column width of this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.RowHeight">
      <summary>
            Sets or gets the height of rows in this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Item(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Range.Worksheet">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Range.Worksheet" />object which contains this range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.RangeCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Range" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeCollection.Add(Aspose.Cells.Range)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.Range" /> item to the collection.
            </summary>
      <param name="range">Range object</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.RangeCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Range" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.RectangleShape">
      <summary>
            Represents the rectangle shape.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Row">
      <summary>
            Represents a single row in a worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Row.GetCellByIndex(System.Int32)">
      <summary>
            Get the cell by specific index in the list.
            </summary>
      <param name="index">The position.</param>
      <returns>The Cell object.</returns>
      <remarks>NOTE: This member is now obsolete. 
            Instead,please use Row.GetEnumerator() method to iterate all cells in this row.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Row.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.Row.GetCellOrNull(System.Int32)">
      <summary>
            Gets the cell or null in the specific index.
            </summary>
      <param name="column">The column index</param>
      <returns>Returns the cell object if the cell exists.
            Or returns null if the cell object does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.Row.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formattings for a whole row.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Row.Equals(System.Object)">
      <summary>
            Checks whether this object refers to the same row with another.
            </summary>
      <param name="obj">another object</param>
      <returns>true if two objects refers to the same row.</returns>
    </member>
    <member name="M:Aspose.Cells.Row.Equals(Aspose.Cells.Row)">
      <summary>
            Checks whether this object refers to the same row with another row object.
            </summary>
      <param name="row">another row object</param>
      <returns>true if two row objects refers to the same row.</returns>
    </member>
    <member name="P:Aspose.Cells.Row.IsBlank">
      <summary>
            Indicates whether the row contains any data
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Item(System.Int32)">
      <summary>
            Gets the cell.
            </summary>
      <param name="column">The column index</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Row.Height">
      <summary>
            Gets and sets the row height in unit of Points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.IsHidden">
      <summary>
            Indicates whether the row is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Index">
      <summary>
            Gets the index of this row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.GroupLevel">
      <summary>
            Gets the group level of the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.IsHeightMatched">
      <summary>
            Indicates that row height and default font height matches
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Style">
      <summary>
            Represents the style of this row.
            </summary>
      <remarks> You have to call Row.ApplyStyle() method to save your changing with the row style,
            otherwise it will not effect.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Row.FirstCell">
      <summary>
            Gets the first cell in the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.LastCell">
      <summary>
            Gets the last cell in the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.LastDataCell">
      <summary>
            Gets the last cell in the row.
            </summary>
    </member>
    <member name="T:Aspose.Cells.RowCollection">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Row" /> objects that represent the individual rows in a worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RowCollection.GetEnumerator">
      <summary>
            Gets an enumerator that iterates through this collection
            </summary>
      <returns>enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.RowCollection.GetRowByIndex(System.Int32)">
      <summary>
            Gets the row object by the position in the list.
            </summary>
      <param name="index">The position.</param>
      <returns>The Row object at given position.</returns>
    </member>
    <member name="M:Aspose.Cells.RowCollection.Clear">
      <summary>
            Clear all rows and cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RowCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the row at the specified index
            </summary>
      <param name="index">zero-based row index</param>
    </member>
    <member name="P:Aspose.Cells.RowCollection.Count">
      <summary>
            Gets the number of rows in this collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RowCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Row" /> object by given row index. The Row object of given row index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SaveType">
      <summary>
            Enumerates spreadsheet creation and saving types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.Default">
      <summary>
            Writes the spreadsheet directly to the hard disk. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInExcel">
      <summary>
            Returns the spreadsheet as a stream of binary data and 
            asks the user to either save or open it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInBrowser">
      <summary>
            Sends the spreadsheet to browser and opens it in browser. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ScrollBar">
      <summary>
            Represents a scroll bar object.
            </summary>
      <remarks>Scroll value must be between 0 and 30000.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.CurrentValue">
      <summary>
            Gets or sets the current value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.Min">
      <summary>
            Gets or sets the minimum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.Max">
      <summary>
            Gets or sets the maximum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.IncrementalChange">
      <summary>
            Gets or sets the amount that the scroll bar or spinner is incremented a line scroll.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.PageChange">
      <summary>
            Gets or sets page change
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.Shadow">
      <summary>
            Indicates whether the shape has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ScrollBar.IsHorizontal">
      <summary>
            Indicates whether this is a horizontal scroll bar.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.SelectionType">
      <summary>
            The selection type of list box.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Single">
      <summary>
            Sigle selection type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Multi">
      <summary>
            Multiple selection type. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Extend">
      <summary>
            Externd selection type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeCollection">
      <summary>
            Represents all the shape in a worksheet/chart.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddCopy(Aspose.Cells.Drawing.Shape,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds and copy a shape to the worksheet..
            </summary>
      <param name="sourceShape"> Source shape.</param>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="top">Represents the vertical  offset of checkbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <returns>The new shape object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddCheckBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a checkbox to the worksheet.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="top">Represents the vertical  offset of checkbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <param name="height">Height of textbox, in unit of pixel.</param>
      <param name="width">Width of textbox, in unit of pixel.</param>
      <returns>The new CheckBox object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddTextBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a text box to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of textbox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of textbox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of textbox, in unit of pixel. </param>
      <param name="width">Represents the width of textbox, in unit of pixel. </param>
      <returns>A <see cref="T:Aspose.Cells.Drawing.TextBox" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddSpinner(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Spinner to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Spinner from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Spinner from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Spinner, in unit of pixel. </param>
      <param name="width">Represents the width of Spinner, in unit of pixel. </param>
      <returns>A Spinner object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddScrollBar(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ScrollBar to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ScrollBar from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ScrollBar from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ScrollBar, in unit of pixel. </param>
      <param name="width">Represents the width of ScrollBar, in unit of pixel. </param>
      <returns>A ScrollBar object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddRadioButton(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a RadioButton to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of RadioButton from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of RadioButton from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of RadioButton, in unit of pixel. </param>
      <param name="width">Represents the width of RadioButton, in unit of pixel. </param>
      <returns>A RadioButton object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddListBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ListBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ListBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ListBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ListBox, in unit of pixel. </param>
      <param name="width">Represents the width of ListBox, in unit of pixel. </param>
      <returns>A ListBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddComboBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ComboBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ComboBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ComboBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ComboBox, in unit of pixel. </param>
      <param name="width">Represents the width of ComboBox, in unit of pixel. </param>
      <returns>A ComboBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddGroupBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a GroupBox to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of GroupBox from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of GroupBox from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of GroupBox, in unit of pixel. </param>
      <param name="width">Represents the width of GroupBox, in unit of pixel. </param>
      <returns>A GroupBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddButton(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Button to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Button from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Button from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Button, in unit of pixel. </param>
      <param name="width">Represents the width of Button, in unit of pixel. </param>
      <returns>A Button object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddLabel(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Label to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Label from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Label from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Label, in unit of pixel. </param>
      <param name="width">Represents the width of Label, in unit of pixel. </param>
      <returns>A Label object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddLabelInChart(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a label to the chart.
            </summary>
      <param name="top">Represents the vertical offset of label from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of label from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of label, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of label, in units of 1/4000 of the chart area.</param>
      <returns>A new Label object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddTextBoxInChart(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the chart.
            </summary>
      <param name="top">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of textbox, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of textbox, in units of 1/4000 of the chart area.</param>
      <returns>A TextBox object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddTextEffectInChart(Aspose.Cells.Drawing.MsoPresetTextEffect,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a WordArt object to the chart
            </summary>
      <param name="effect">The mso preset text effect type.</param>
      <param name="text">The WordArt text.</param>
      <param name="fontName">The font name.</param>
      <param name="size">The font size</param>
      <param name="fontBold">Indicates whether font is bold.</param>
      <param name="fontItalic">Indicates whether font is italic.</param>
      <param name="top">Represents the vertical offset of shape from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of shape from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of shape, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of shape, in units of 1/4000 of the chart area.</param>
      <returns>Returns a Shape object that represents the new WordArt object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddTextEffect(Aspose.Cells.Drawing.MsoPresetTextEffect,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Inserts a WordArt object.
            </summary>
      <param name="effect">The mso preset text effect type.</param>
      <param name="text">The WordArt text.</param>
      <param name="fontName">The font name.</param>
      <param name="size">The font size</param>
      <param name="fontBold">Indicates whether font is bold.</param>
      <param name="fontItalic">Indicates whether font is italic.</param>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of shape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of shape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of shape, in unit of pixel. </param>
      <param name="width">Represents the width of shape, in unit of pixel. </param>
      <returns>Returns a Shape object that represents the new WordArt object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a RectangleShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of RectangleShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of RectangleShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of RectangleShape, in unit of pixel. </param>
      <param name="width">Represents the width of RectangleShape, in unit of pixel. </param>
      <returns>A RectangleShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddOval(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Oval to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Oval from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Oval from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Oval, in unit of pixel. </param>
      <param name="width">Represents the width of Oval, in unit of pixel. </param>
      <returns>A Oval object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a LineShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of LineShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of LineShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of LineShape, in unit of pixel. </param>
      <param name="width">Represents the width of LineShape, in unit of pixel. </param>
      <returns>A LineShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddFreeFloatingShape(Aspose.Cells.Drawing.MsoDrawingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Boolean)">
      <summary>
            Adds a free floating shape to the worksheet.Only applies for line/image shape.
            </summary>
      <param name="type">The shape type.</param>
      <param name="top">Represents the vertical  offset of shape from the worksheet's top row, in unit of pixel.</param>
      <param name="left">Represents the horizontal offset of shape from the worksheet's left column, in unit of pixel.</param>
      <param name="height">Represents the height of LineShape, in unit of pixel. </param>
      <param name="width">Represents the width of LineShape, in unit of pixel. </param>
      <param name="imageData">The image data,only applies for the picture.</param>
      <param name="isOriginalSize">Whether the shape use original size if the shape is image.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddShapeInChart(Aspose.Cells.Drawing.MsoDrawingType,Aspose.Cells.Drawing.PlacementType,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
            Add a shape to chart .All unit is 1/4000 of chart area.
            </summary>
      <param name="type">The drawing type.</param>
      <param name="placement">the placement type.</param>
      <param name="left">In unit of 1/4000 chart area width.</param>
      <param name="top">In unit of 1/4000 chart area height.</param>
      <param name="right">In unit of 1/4000 chart area width.</param>
      <param name="bottom">In unit of 1/4000 chart area height.</param>
      <param name="imageData">If the shape is not a picture or ole object,imageData should be null.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddShapeInChart(Aspose.Cells.Drawing.MsoDrawingType,Aspose.Cells.Drawing.PlacementType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Add a shape to chart .All unit is 1/4000 of chart area.
            </summary>
      <param name="type">The drawing type.</param>
      <param name="placement">the placement type.</param>
      <param name="left">In unit of 1/4000 chart area width.</param>
      <param name="top">In unit of 1/4000 chart area height.</param>
      <param name="right">In unit of 1/4000 chart area width.</param>
      <param name="bottom">In unit of 1/4000 chart area height.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a ArcShape to the worksheet.
            </summary>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of ArcShape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of ArcShape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of ArcShape, in unit of pixel. </param>
      <param name="width">Represents the width of ArcShape, in unit of pixel. </param>
      <returns>A ArcShape object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddShape(Aspose.Cells.Drawing.MsoDrawingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a Shape to the worksheet.
            </summary>
      <param name="type">Mso drawing type.</param>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Shape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Shape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Shape, in unit of pixel. </param>
      <param name="width">Represents the width of Shape, in unit of pixel. </param>
      <returns>A Shape object.</returns>
      <remarks>The type could not be Chart/Comment/Picuter/OleObject/Polygon/DialogBox</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddAutoShape(Aspose.Cells.Drawing.AutoShapeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a AutoShape to the worksheet.
            </summary>
      <param name="type">Auto shape type.</param>
      <param name="upperLeftRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Shape from its left row, in unit of pixel. </param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Shape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Shape, in unit of pixel. </param>
      <param name="width">Represents the width of Shape, in unit of pixel. </param>
      <returns>A Shape object.</returns>
      <remarks>The type could not be Chart/Comment/Picuter/OleObject/Polygon/DialogBox</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddAutoShapeInChart(Aspose.Cells.Drawing.AutoShapeType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a AutoShape to the chart.
            </summary>
      <param name="type">Auto shape type.</param>
      <param name="top">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of textbox from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="height">Represents the height of textbox, in units of 1/4000 of the chart area.</param>
      <param name="width">Represents the width of textbox, in units of 1/4000 of the chart area.</param>
      <returns>Returns a shape objct.</returns>
      <remarks>The type could not be Chart/Comment/Picuter/OleObject/Polygon/DialogBox</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddActiveXControl(Aspose.Cells.Drawing.ActiveXControls.ControlType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates an Activex Control.
            </summary>
      <param name="type">The type of the control.</param>
      <param name="topRow"> Upper left row index.</param>
      <param name="top">Represents the vertical  offset of Shape from its left row, in unit of pixel. </param>
      <param name="leftColumn">Upper left column index.</param>
      <param name="left">Represents the horizontal offset of Shape from its left column, in unit of pixel. </param>
      <param name="height">Represents the height of Shape, in unit of pixel. </param>
      <param name="width">Represents the width of Shape, in unit of pixel. </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddPicture(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddPicture(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddLinkedPicture(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Add a linked picture.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">The height of the shape. In unit of pixels</param>
      <param name="width">The width of the shape. In unit of pixels</param>
      <param name="sourceFullName">
            The path and name of the source file for the linked image</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddOleObjectWithLinkedImage(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Add a linked picture.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">The height of the shape. In unit of pixels</param>
      <param name="width">The width of the shape. In unit of pixels</param>
      <param name="sourceFullName">
            The path and name of the source file for the linked image</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddPictureInChart(System.Int32,System.Int32,System.IO.Stream,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the chart.
            </summary>
      <param name="top">Represents the vertical offset of shape from the upper left corner in units of 1/4000 of the chart area. </param>
      <param name="left">Represents the vertical offset of shape from the upper left corner in units of 1/4000 of the chart area.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image width, a percentage.</param>
      <returns>Returns a Picture objct.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.AddOleObject(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
      </summary>
      <param name="upperLeftRow">
      </param>
      <param name="top">
      </param>
      <param name="upperLeftColumn">
      </param>
      <param name="left">
      </param>
      <param name="height">
      </param>
      <param name="width">
      </param>
      <param name="imageData">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.CopyCommentsInRange(Aspose.Cells.Drawing.ShapeCollection,Aspose.Cells.CellArea,System.Int32,System.Int32)">
      <summary>
            Copy all comments in the range.
            </summary>
      <param name="shapes">The source shapes.</param>
      <param name="ca">The source range.</param>
      <param name="destRow">The dest range start row.</param>
      <param name="destColumn">The dest range start column.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.CopyInRange(Aspose.Cells.Drawing.ShapeCollection,Aspose.Cells.CellArea,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Copy shapes in the range to destination range.
            </summary>
      <param name="sourceShapes">Source shapes.</param>
      <param name="ca">The source range.</param>
      <param name="destRow">The dest row index of the dest range.</param>
      <param name="destColumn">The dest column of the dest range.</param>
      <param name="isContained">Whether only copy the shapes which are contained in the range.
            If true,only copies the shapes in the range. 
            Otherwise,it works as MS Office.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.DeleteInRange(Aspose.Cells.CellArea)">
      <summary>
            Delete shapes in the range.Comment shapes will not be deleted.
            </summary>
      <param name="ca">The range.If the shapes are contained in the range, they will be removed.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.DeleteShape(Aspose.Cells.Drawing.Shape)">
      <summary>
            Delete a shape. If the shape is in the group or is a comment shape, it will not be deleted.
            </summary>
      <param name="shape">
      </param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.Group(Aspose.Cells.Drawing.Shape[])">
      <summary>
            Group the shapes.
            </summary>
      <param name="groupItems">the group items.</param>
      <returns>Return the group shape.</returns>
      <remarks>
            
            The shape in the groupItems should not be grouped.
            The shape must be in this Shapes collection.</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.Ungroup(Aspose.Cells.Drawing.GroupShape)">
      <summary>
            Ungroups the shape items.
            </summary>
      <param name="group">The group shape.</param>
      <remarks>If the group shape is grouped by another group shape,nothing will be done.</remarks>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the shape.
            </summary>
      <param name="index">The index of the shape.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.Remove(Aspose.Cells.Drawing.Shape)">
      <summary>
            Remove the shape.
            </summary>
      <param name="shape">
      </param>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.Clear">
      <summary>
            Clear all shapes.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ShapeCollection.UpdateSelectedValue">
      <summary>
            Update the selected value by the value of the linked cell of the shapes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeCollection.Item(System.Int32)">
      <summary>
            Gets the shape object at the specific index.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.ShapeCollection.Item(System.String)">
      <summary>
            Gets the shape object by the shape image
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Rendering.ImageOrPrintOptions">
      <summary>
            Allows to specify options when rendering worksheet to images, printing worksheet or rendering chart to image.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Set Image Or Print Options
            ImageOrPrintOptions options = new ImageOrPrintOptions();
            
            //set Horizontal resolution
            options.HorizontalResolution = 200;
            
            //set Vertica; Resolution
            options.VerticalResolution = 300;
            
            //Instantiate Workbook
            Workbook book = new Workbook(@"c:\test.xls");
            
            //Save chart as Image using ImageOrPrint Options
            Bitmap chartObject = book.Worksheets[0].Charts[0].ToImage(options);
            
            [VB.NET]
            
            'Set Image Or Print Options
            Dim options As New ImageOrPrintOptions()
            
            'set Horizontal resolution
            options.HorizontalResolution = 200
            
            'set Vertica; Resolution
            options.VerticalResolution = 300
            
            'Instantiate Workbook
            Dim book As New Workbook("c:\test.xls")
            
            'Save chart as Image using ImageOrPrint Options
            Dim chartObject As Bitmap = book.Worksheets(0).Charts(0).ToImage(options)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Rendering.ImageOrPrintOptions.SetDesiredSize(System.Int32,System.Int32)">
      <summary>
            Sets desired width and height of image.
            </summary>
      <param name="desiredWidth">desired width in pixels</param>
      <param name="desiredHeight">desired height in pixels</param>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.SaveFormat">
      <summary>
            Gets or sets the output file format type
            Support Tiff/XPS
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.CustomPrintPageEventHandler">
      <summary>
            Client can special output to printer when print each page using this EventHandler
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.CustomQueryPageSettingsEventHandler">
      <summary>
            Client can control page setting of printer when print each page using this EventHandler
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.PrintWithStatusDialog">
      <summary>
            If PrintWithStatusDialog = true , there will be a dialog that shows current print status.
            else no such dialog will show.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution for generated images, in dots per inch.
            Applies generating image method except Emf format images.
            </summary>
      <remarks>
            The default value is 96.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.VerticalResolution">
      <summary>
            Gets or sets the vertical  resolution for generated images, in dots per inch.
            Applies generating image method except Emf format image.
            </summary>
      <remarks>
            The default value is 96.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.TiffCompression">
      <summary>
            Gets or sets the type of compression to apply only when saving pages to the <c>Tiff</c> format. 
            </summary>
      <remarks>
            Has effect only when saving to TIFF.
            The default value is Lzw.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.PrintingPage">
      <summary>
            Indicates which pages will not be printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.Quality">
      <summary>
            Gets or sets a value determining the quality of the generated  images
            to apply only when saving pages to the <c>Jpeg</c> format. The default value is 100
            </summary>
      <remarks>
            Has effect only when saving to JPEG.
            The value must be between 0 and 100.
            The default value is 100.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.ImageFormat">
      <summary>
            Gets or sets the format of the generated images.
            Don't apply the method that returns a <c>Bitmap</c> object.
            </summary>
      <remarks>
            The default value is ImageFormat.Bmp.
            Don't apply the method that returns a <c>Bitmap</c> object.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.IsCellAutoFit">
      <summary>
            Indicates whether the width and height of the cells is automatically fitted by cell value. 
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.IsImageFitToPage">
      <summary>
            When set the value to true, the page only include the cells that have data.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.OnePagePerSheet">
      <summary>
            If OnePagePerSheet is true , all content of one sheet will output to only one page in result. 
            The paper size of pagesetup will be invalid, and the other settings of pagesetup 
            will still take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.AllColumnsInOnePagePerSheet">
      <summary>
            If AllColumnsInOnePagePerSheet is true , all column content of one sheet will output to only one page in result. 
            The width of paper size of pagesetup will be invalid, and the other settings of pagesetup 
            will still take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.DrawObjectEventHandler">
      <summary>
            Implements this interface to get DrawObject and Bound when rendering.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.ChartImageType">
      <summary>
            Indicate the chart imagetype when converting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.EmbededImageNameInSvg">
      <summary>
            Indicate the filename of embeded image in svg. 
            This should be full path with directory like "c:\\xpsEmbeded"
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.SVGFitToViewPort">
      <summary>
            if this property is true, the generated svg will fit to view port.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.OnlyArea">
      <summary>
            If this property is true , onle Area will be output, and no scale will take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.TextRenderingHint">
      <summary>
            Specifies the quality of text rendering.
            The defaul value is TextRenderingHint.SystemDefault
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.SmoothingMode">
      <summary>
            Specifies whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas.
            The defaul value is SmoothingMode.None
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.Transparent">
      <summary>
            Indicates if the background of generated image should be transparent.
            </summary>
      <remarks>
            The default value is false. That means the background of the generated images is white.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.PixelFormat">
      <summary>
            Gets or sets the pixel format for the generated images.
            </summary>
      <remarks>
            The default value is PixelFormat.Format32bppArgb.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.WarningCallback">
      <summary>
            Gets or sets warning callback.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Rendering.ImageOrPrintOptions.DefaultFont">
      <summary>
            When characters in the Excel are unicode and not be set with correct font in cell style,
            They may appear as block in pdf,image.
            Set the DefaultFont such as MingLiu or MS Gothic to show these characters.
            If this property is not set, Aspose.Cells will use system default font to show these unicode characters.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintingPageType">
      <summary>
            Indicates which pages will not be printed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintingPageType.Default">
      <summary>
            Prints all pages.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintingPageType.IgnoreBlank">
      <summary>
            Don't print the pages which the cells are blank. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintingPageType.IgnoreStyle">
      <summary>
            Don't print the pages which cells only contain styles. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.TiffCompression">
      <summary>
            Specifies what type of compression to apply when saving images into TIFF format file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.TiffCompression.CompressionNone">
      <summary>
            Specifies no compression. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.TiffCompression.CompressionRle">
      <summary>
            Specifies the RLE compression scheme. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.TiffCompression.CompressionLZW">
      <summary>
            Specifies the LZW compression scheme. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.TiffCompression.CompressionCCITT3">
      <summary>
            Specifies the CCITT3 compression scheme. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Rendering.TiffCompression.CompressionCCITT4">
      <summary>
            Specifies the CCITT4 compression scheme. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.SheetType">
      <summary>
            Specifies the worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.VB">
      <summary>
            Visual Basic module
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Worksheet">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Chart">
      <summary>
            Chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.BIFF4Macro">
      <summary>
            BIFF4 Macro sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Other">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ShiftType">
      <summary>
            Represent the shift options when deleting a range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Down">
      <summary>
            Shift cells down.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Left">
      <summary>
            Shift cells left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.None">
      <summary>
            Do not shift cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Right">
      <summary>
            Shift cells right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Up">
      <summary>
            Shift cells up.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SortOrder">
      <summary>
            Represents sort order for the data range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Ascending">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Descending">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Spinner">
      <summary>
            Represents the Forms control: Spinner.
            </summary>
      <remarks>Scroll value must be between 0 and 30000.</remarks>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.CurrentValue">
      <summary>
            Gets or sets the current value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.Min">
      <summary>
            Gets or sets the minimum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.Max">
      <summary>
            Gets or sets the maximum value of a scroll bar or spinner range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.IncrementalChange">
      <summary>
            Gets or sets the amount that the scroll bar or spinner is incremented a line scroll.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.Shadow">
      <summary>
            Indicates whether the shape has 3-D shading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Spinner.IsHorizontal">
      <summary>
            Indicates whether this is a horizontal scroll bar.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Style">
      <summary>
            Represents display style of excel document,such as font,
            color,alignment,border,etc.
            </summary>	
            The Style object contains all style attributes (font, number format, alignment, and so on) as properties.
            There are two methods to set a cell's style.	
            <example>	
            //First method
            <code>	
            [C#]
            int styleIndex = excel.CreateStyle();
            Style style = excel.Styles[styleIndex];
            style.Font.Name = "Times New Roman";
            style.Font.Color = Color.Blue;
            for(int i = 0; i &lt; 100; i ++)
            {
            	excel.Worksheets[0].Cells[0, i].SetStyle(style);
            }
            </code>
            //Second method
            <code>	
            [C#]
            Style style =  excel.Worksheets[0].Cells["A1"].GetStyle();
            style.Font.Name = "Times New Roman";
            style.Font.Color = Color.Blue;
            excel.Worksheets[0].Cells["A1"].SetStyle(style);
            </code>
            First method is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.
            If you want to change a single cell's style properties, second method can be used.
            </example></member>
    <member name="M:Aspose.Cells.Style.#ctor">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Style.Copy(Aspose.Cells.Style)">
      <summary>
            Copies data from another style object
            </summary>
      <param name="style">Source Style object</param>
      <remarks>
            This method does not copy the name of the style.
            If you want to copy the name ,please call the following codes after copying style:
            destStyle.Name = style.Name.</remarks>
    </member>
    <member name="M:Aspose.Cells.Style.Update">
      <summary>
            Apply the named style to the styles of the cells which use this named style.
            It works like clicking the "ok" button after you finished modifying the style.
            Only applies for named style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.IsModified(Aspose.Cells.StyleModifyFlag)">
      <summary>
            Checks whether the specified properties of the style have been modified.
            Used for style of ConditionalFormattings to check whether the specified properties of this style should be used when applying the ConditionalFormattings on a cell.
            </summary>
      <param name="modifyFlag">Style modified flags</param>
      <returns>true if the specified properties have been modified</returns>
    </member>
    <member name="M:Aspose.Cells.Style.Equals(System.Object)">
      <summary>
            Determines whether two Style instances are equal.
            </summary>
      <param name="obj">The Style object to compare with the current Style object. </param>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Style.GetHashCode">
      <summary>
            Serves as a hash function for a Style object.
            </summary>
      <returns>A hash code for the current Object.</returns>
      <remarks>This method is only for internal use.</remarks>
    </member>
    <member name="M:Aspose.Cells.Style.SetBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,System.Drawing.Color)">
      <summary>
            Sets the border of the style.
            </summary>
      <param name="borderEdge">
      </param>
      <param name="borderStyle">
      </param>
      <param name="borderColor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Style.SetCustom(System.String,System.Boolean)">
      <summary>
            Sets the custom number format string of a cell.
            </summary>
      <param name="custom">custom number format string, should be InvariantCulture pattern.</param>
      <param name="builtinPreference">If given custom number format string matches one of the built-in number formats
            corresponding to current regional settings, whether set the number format as built-in instead of custom.</param>
    </member>
    <member name="M:Aspose.Cells.Style.SetTwoColorGradient(System.Drawing.Color,System.Drawing.Color,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="gradientStyleType">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Style.GetTwoColorGradient(System.Drawing.Color@,System.Drawing.Color@,Aspose.Cells.Drawing.GradientStyleType@,System.Int32@)">
      <summary>
            Get the two-color gradient setting.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="gradientStyleType">Gradient shading style.</param>
      <param name="variant">The gradient variant.</param>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundThemeColor">
      <summary>
            Gets and sets the background theme color.
            </summary>
      <remarks>
            If the background color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundThemeColor">
      <summary>
            Gets and sets the foreground theme color.
            </summary>
      <remarks>
            If the forground color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Name">
      <summary>
            Gets or sets the name of the style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Pattern">
      <summary>
            Gets or sets the cell background pattern type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Borders">
      <summary>
            Gets the <see cref="T:Aspose.Cells.BorderCollection" /> of the style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundColor">
      <summary>
            Gets or sets a style's background color.
            </summary>
      <remarks>If you want to set a cell's color, please use Style.ForegroundColor property. 
            Only if the cell style pattern is other than none or solid, this property will take effect.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundArgbColor">
      <summary>
            Gets and sets the background color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundColor">
      <summary>
            Gets or sets a style's foreground color.
            </summary>
      <remarks>It means no color setting if Color.Empty is returned.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundArgbColor">
      <summary>
            Gets and sets the foreground color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ParentStyle">
      <summary>
            Gets the parent style of this style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IndentLevel">
      <summary>
            Represents the m_IndentLevel level for the cell or range. Can only be an integer from 0 to 15.
            </summary>
      <remarks>
            If text horizontal alignment type is set to value other than left or right, m_IndentLevel level will
            be reset to zero.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Style.Font" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.RotationAngle">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Style.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.VerticalAlignment">
      <summary>
             Gets or sets the vertical alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.HorizontalAlignment">
      <summary>
             Gets or sets the horizontal alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsTextWrapped">
      <summary>
            Gets or sets a value indicating whether the text within a cell is wrapped.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Number">
      <summary>
             Gets or sets the display format of numbers and dates.
             </summary>
      <remarks>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="33%">
              <font color="gray">
                <b>Value</b>
              </font>¡¡</td>
            <td width="33%">
              <font color="gray">
                <b>Type</b>
              </font>¡¡</td>
            <td width="33%">
              <font color="gray">
                <b>Format String</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="33%">0</td>
            <td width="33%">General</td>
            <td width="33%">General</td>
          </tr>
          <tr>
            <td width="33%">1</td>
            <td width="33%">Decimal</td>
            <td width="33%">0</td>
          </tr>
          <tr>
            <td width="33%">2</td>
            <td width="33%">Decimal</td>
            <td width="33%">0.00</td>
          </tr>
          <tr>
            <td width="33%">3</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0</td>
          </tr>
          <tr>
            <td width="33%">4</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">5</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">6</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;[Red]($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">7</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">8</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;[Red]($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">9</td>
            <td width="33%">Percentage</td>
            <td width="33%">0%</td>
          </tr>
          <tr>
            <td width="33%">10</td>
            <td width="33%">Percentage</td>
            <td width="33%">0.00%</td>
          </tr>
          <tr>
            <td width="33%">11</td>
            <td width="33%">Scientific</td>
            <td width="33%">0.00E+00</td>
          </tr>
          <tr>
            <td width="33%">12</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ?/?</td>
          </tr>
          <tr>
            <td width="33%">13</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ??/??</td>
          </tr>
          <tr>
            <td width="33%">14</td>
            <td width="33%">Date</td>
            <td width="33%">m/d/yyyy</td>
          </tr>
          <tr>
            <td width="33%">15</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">16</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm</td>
          </tr>
          <tr>
            <td width="33%">17</td>
            <td width="33%">Date</td>
            <td width="33%">mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">18</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm AM/PM</td>
          </tr>
          <tr>
            <td width="33%">19</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss AM/PM</td>
          </tr>
          <tr>
            <td width="33%">20</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm</td>
          </tr>
          <tr>
            <td width="33%">21</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">22</td>
            <td width="33%">Time</td>
            <td width="33%">m/d/yyyy h:mm</td>
          </tr>
          <tr>
            <td width="33%">37</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;(#,##0)</td>
          </tr>
          <tr>
            <td width="33%">38</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;[Red](#,##0)</td>
          </tr>
          <tr>
            <td width="33%">39</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;(#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">40</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;[Red](#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">41</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0_ ;_ * (#,##0)_ ;_ * "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">42</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0_ ;_ $* (#,##0)_ ;_ $* "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">43</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0.00_ ;_ * (#,##0.00)_ ;_ * "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">44</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0.00_ ;_ $* (#,##0.00)_ ;_ $* "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">45</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss</td>
          </tr>
          <tr>
            <td width="33%">46</td>
            <td width="33%">Time</td>
            <td width="33%">[h]:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">47</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss.0</td>
          </tr>
          <tr>
            <td width="33%">48</td>
            <td width="33%">Scientific</td>
            <td width="33%">##0.0E+00</td>
          </tr>
          <tr>
            <td width="33%">49</td>
            <td width="33%">Text</td>
            <td width="33%">@</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.IsLocked">
      <summary>
             Gets or sets a value indicating whether a cell can be modified or not.
             </summary>
      <remarks>Locking cells has no effect unless the worksheet is protected. </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Custom">
      <summary>
            Represents the custom number format string of a cell.
            If the custom number format is not set,we will return "".
            </summary>
      <remarks>
            It should be InvariantCulture .
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.CultureCustom">
      <summary>
            Gets and sets the culture custom number format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsFormulaHidden">
      <summary>
            Represents if the formula will be hidden when the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ShrinkToFit">
      <summary>
            Represents if text automatically shrinks to fit in the available column width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsJustifyDistributed">
      <summary>
            Indicates if the cells justified or distributed alignment should be used on the last line of text.     
            </summary>
      <remarks>
            This is typical for East Asian alignments but not typical in other contexts.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.QuotePrefix">
      <summary>
            Inidicates whether the cell's value starts with single quote mark.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsGradient">
      <summary>
            Indicates whether the cell shading is a gradient pattern.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsPercent">
      <summary>
            Indicates whether the number format is a percent format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsDateTime">
      <summary>
            Indicates whether the number format is a date format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.StyleFlag">
      <summary>
            Represents flags which indicates applied formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.All">
      <summary>
            All properties will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Borders">
      <summary>
            All borders settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.LeftBorder">
      <summary>
            Left border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.RightBorder">
      <summary>
            Right border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.TopBorder">
      <summary>
            Top border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.BottomBorder">
      <summary>
            Bottom border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.DiagonalDownBorder">
      <summary>
            Diagonal down border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.DiagonalUpBorder">
      <summary>
            Diagonal up border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Font">
      <summary>
            Font settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontSize">
      <summary>
            Font size setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontName">
      <summary>
            Font name setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontColor">
      <summary>
            Font color setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontBold">
      <summary>
            Font bold setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontItalic">
      <summary>
            Font italic setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontUnderline">
      <summary>
            Font underline setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontStrike">
      <summary>
            Font strikeout setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontScript">
      <summary>
            Font script setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.NumberFormat">
      <summary>
            Number format setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.HorizontalAlignment">
      <summary>
            Horizontal alignment setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.VerticalAlignment">
      <summary>
            Vertical alignment setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Indent">
      <summary>
            Indent level setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Rotation">
      <summary>
            Rotation setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.WrapText">
      <summary>
            Wrap text setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.ShrinkToFit">
      <summary>
            Shrink to fit setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.TextDirection">
      <summary>
            Text direction setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.CellShading">
      <summary>
            Cell shading setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Locked">
      <summary>
            Locked setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.HideFormula">
      <summary>
            Hide formula setting will be applied.
            </summary>
    </member>
    <member name="T:Aspose.Cells.StyleModifyFlag">
      <summary>
            The style mofied flags.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.All">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Borders">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.LeftBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.RightBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.TopBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.BottomBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HorizontalBorder">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.VerticalBorder">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Diagonal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.DiagonalDownBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.DiagonalUpBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Font">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSize">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontName">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontFamily">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontCharset">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontWeight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontItalic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontUnderline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontStrike">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSubscript">
      <summary>
      </summary>
      <remarks>NOTE: This member is now obsolete. Instead, please use FontScript. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSuperscript">
      <summary>
      </summary>
      <summary>
      </summary>
      <remarks>NOTE: This member is now obsolete. Instead, please use FontScript. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontScript">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.NumberFormat">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HorizontalAlignment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.VerticalAlignment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Indent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Rotation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.WrapText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.ShrinkToFit">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.TextDirection">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.CellShading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Pattern">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.ForegroundColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.BackgroundColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Locked">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HideFormula">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.AlignmentSettings">
      <summary>
            Includes horizontal/vertical Alignment, rotation,wrap Text,indent,shrinkToFit,Text Direction 
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontScheme">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontDirty">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSpellingError">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontUFillTx">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSpacing">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontKerning">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontEqualize">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontCap">
      <summary>
            unused.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableDataSourceType">
      <summary>
            Represents the table's data source type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.Worksheet">
      <summary>
            Excel Worksheet Table
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.SharePoint">
      <summary>
            Read-write SharePoint linked List
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.XML">
      <summary>
            XML mapper Table
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.QueryTable">
      <summary>
              Query Table
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElement">
      <summary>
            Represents the element of the table style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElement.GetElementStyle">
      <summary>
            Gets the element style.
            </summary>
      <returns>Returns the <see cref="T:Aspose.Cells.Style" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElement.SetElementStyle(Aspose.Cells.Style)">
      <summary>
            Sets the element style.
            </summary>
      <param name="style">The element style.</param>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElement.Size">
      <summary>
            Number of rows or columns in a single band of striping.
            Applies only when type is firstRowStripe, secondRowStripe, firstColumnStripe, or secondColumnStripe.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElement.Type">
      <summary>
            Gets the element type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElementCollection">
      <summary>
            Represents all elements of the table style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElementCollection.Add(Aspose.Cells.Tables.TableStyleElementType)">
      <summary>
            Adds an element.
            </summary>
      <param name="type">The type of the element</param>
      <returns>Returns the index of the element in the list.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElementCollection.Item(System.Int32)">
      <summary>
            Gets an element of the table style by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Tables.TableStyleElement" /> object</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElementCollection.Item(Aspose.Cells.Tables.TableStyleElementType)">
      <summary>
            Gets the element of the table style by the <see cref="T:Aspose.Cells.Tables.TableStyleElementType" /></summary>
      <param name="type">The element type.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Tables.TableStyleElement" /> object</returns>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyle">
      <summary>
            Represents the table style.
            </summary>
      <example>
        <code>
            
            [C#]
            
            Workbook workbook = new Workbook();
            Style firstColumnStyle = workbook.CreateStyle();
            firstColumnStyle.Pattern = BackgroundType.Solid;
            firstColumnStyle.BackgroundColor = System.Drawing.Color.Red;
            
            Style lastColumnStyle = workbook.CreateStyle();
            lastColumnStyle.Font.IsBold = true;
            lastColumnStyle.Pattern = BackgroundType.Solid;
            lastColumnStyle.BackgroundColor = System.Drawing.Color.Red;
            string tableStyleName = "Custom1";
            TableStyleCollection tableStyles = workbook.Worksheets.TableStyles;
            int index1 = tableStyles.AddTableStyle(tableStyleName);
            TableStyle tableStyle = tableStyles[index1];
            TableStyleElementCollection elements = tableStyle.TableStyleElements;
            index1 = elements.Add(TableStyleElementType.FirstColumn);
            TableStyleElement element = elements[index1];
            element.SetElementStyle(firstColumnStyle);
            index1 = elements.Add(TableStyleElementType.LastColumn);
            element = elements[index1];
            element.SetElementStyle(lastColumnStyle);
            Cells cells = workbook.Worksheets[0].Cells;
            for (int i = 0; i  &lt;5; i++)
            {
                cells[0, i].PutValue(CellsHelper.ColumnIndexToName(i));
            }
            for (int row = 1; row  &lt;10; row++)
            {
                for (int column = 0; column  &lt;5; column++)
                {
                    cells[row, column].PutValue(row * column);
                }
             }
            ListObjectCollection tables = workbook.Worksheets[0].ListObjects;
            int index = tables.Add(0, 0, 9, 4, true);
            ListObject table = tables[0];
            table.ShowTableStyleFirstColumn = true;
            table.ShowTableStyleLastColumn = true;
            table.TableStyleName = tableStyleName;
            workbook.Save(@"C:\Book1.xlsx");
            
            [Visual Basic]
            
              Dim workbook As Workbook = New Workbook()
            Dim firstColumnStyle As Style = workbook.CreateStyle()
            firstColumnStyle.Pattern = BackgroundType.Solid
            firstColumnStyle.BackgroundColor = System.Drawing.Color.Red
            Dim lastColumnStyle As Style = workbook.CreateStyle()
            
            lastColumnStyle.Font.IsBold = True
            lastColumnStyle.Pattern = BackgroundType.Solid
            lastColumnStyle.BackgroundColor = System.Drawing.Color.Red
            Dim tableStyleName As String = "Custom1"
            
            Dim tableStyles As TableStyleCollection = workbook.Worksheets.TableStyles
            Dim index1 As Int32 = tableStyles.AddTableStyle(tableStyleName)
            Dim tableStyle As TableStyle = tableStyles(index1)
            Dim elements As TableStyleElementCollection = tableStyle.TableStyleElements
            index1 = elements.Add(TableStyleElementType.FirstColumn)
            Dim element As TableStyleElement = elements(index1)
            element.SetElementStyle(firstColumnStyle)
            index1 = elements.Add(TableStyleElementType.LastColumn)
            element = elements(index1)
            element.SetElementStyle(lastColumnStyle)
            Dim cells As Cells = workbook.Worksheets(0).Cells
            For i As Int32 = 0 To 4
                cells(0, i).PutValue(CellsHelper.ColumnIndexToName(i))
            Next
            For row As Int32 = 1 To 9
                For column As Int32 = 0 To 4
                    cells(row, column).PutValue(row * column)
                Next
            Next
            Dim tables As ListObjectCollection = workbook.Worksheets(0).ListObjects
            Dim index As Int32 = tables.Add(0, 0, 9, 4, True)
            Dim table As ListObject = tables(0)
            table.ShowTableStyleFirstColumn = True
            table.ShowTableStyleLastColumn = True
            table.TableStyleName = tableStyleName
            workbook.Save("C:\Book1.xlsx")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyle.Name">
      <summary>
            Gets the name of table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyle.TableStyleElements">
      <summary>
            Gets all elements of the table style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElementType">
      <summary>
            Represents the Table or PivotTable style element type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.BlankRow">
      <summary>
            Table style element that applies to PivotTable's blank rows.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumn">
      <summary>
            Table style element that applies to table's first column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumnStripe">
      <summary>
            Table style element that applies to table's first column stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumnSubheading">
      <summary>
            Table style element that applies to PivotTable's first column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstHeaderCell">
      <summary>
            Table style element that applies to table's first header row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstRowStripe">
      <summary>
            Table style element that applies to table's first row stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstRowSubheading">
      <summary>
            Table style element that applies to PivotTable's first row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstSubtotalColumn">
      <summary>
            Table style element that applies to PivotTable's first subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstSubtotalRow">
      <summary>
            Table style element that applies to pivot table's first subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.GrandTotalColumn">
      <summary>
            Table style element that applies to pivot table's grand total column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.GrandTotalRow">
      <summary>
            Table style element that applies to pivot table's grand total row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstTotalCell">
      <summary>
            Table style element that applies to table's first total row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.HeaderRow">
      <summary>
            Table style element that applies to table's header row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastColumn">
      <summary>
            Table style element that applies to table's last column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastHeaderCell">
      <summary>
            Table style element that applies to table's last header row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastTotalCell">
      <summary>
            Table style element that applies to table's last total row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.PageFieldLabels">
      <summary>
            Table style element that applies to pivot table's page field labels.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.PageFieldValues">
      <summary>
            Table style element that applies to pivot table's page field values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondColumnStripe">
      <summary>
            Table style element that applies to table's second column stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondColumnSubheading">
      <summary>
            Table style element that applies to pivot table's second column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondRowStripe">
      <summary>
            Table style element that applies to table's second row stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondRowSubheading">
      <summary>
            Table style element that applies to pivot table's second row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondSubtotalColumn">
      <summary>
            Table style element that applies to PivotTable's second subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondSubtotalRow">
      <summary>
            Table style element that applies to PivotTable's second subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdColumnSubheading">
      <summary>
            Table style element that applies to PivotTable's third column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdRowSubheading">
      <summary>
            Table style element that applies to PivotTable's third row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdSubtotalColumn">
      <summary>
            Table style element that applies to pivot table's third subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdSubtotalRow">
      <summary>
            Table style element that applies to PivotTable's third subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.TotalRow">
      <summary>
            Table style element that applies to table's total row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.WholeTable">
      <summary>
            Table style element that applies to table's entire content.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleCollection">
      <summary>
            Represents all custom table styles.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.AddTableStyle(System.String)">
      <summary>
            Adds a custom table style.
            </summary>
      <param name="name">The table style name.</param>
      <returns>The index of the table style.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.AddPivotTableStyle(System.String)">
      <summary>
            Adds a custom pivot table style.
            </summary>
      <param name="name">The pivot table style name.</param>
      <returns>The index of the pivot table style.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.GetBuiltinTableStyle(Aspose.Cells.Tables.TableStyleType)">
      <summary>
            Gets the builtin table style
            </summary>
      <param name="type">The builtin table style type.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleCollection.Item(System.Int32)">
      <summary>
            Gets the table style by the index.
            </summary>
      <param name="index">The position of the table style in the list.</param>
      <returns>The table style object.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleCollection.Item(System.String)">
      <summary>
            Gets the table style by the name.
            </summary>
      <param name="name">The table style name.</param>
      <returns>The table style object.</returns>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleType">
      <summary>
            Represents the built-in table style type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.TextAlignmentType">
      <summary>
            Enumerates text alignment types. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Bottom">
      <summary>
            Represents bottom text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Center">
      <summary>
            Represents center text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.CenterAcross">
      <summary>
            Represents center across text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Distributed">
      <summary>
            Represents distributed text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Fill">
      <summary>
            Represents fill text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.General">
      <summary>
            Represents general text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Justify">
      <summary>
            Represents justify text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Left">
      <summary>
            Represents left text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Right">
      <summary>
            Represents right text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Top">
      <summary>
            Represents top text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.JustifiedLow">
      <summary>
            Aligns the text with an adjusted kashida length for Arabic text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.ThaiDistributed">
      <summary>
            Distributes Thai text specially, because each character is treated as a word.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextBox">
      <summary>
            Encapsulates the object that represents a textbox in a spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook.
            Workbook workbook = new Workbook();
            //Get the first worksheet in the book.
            Worksheet worksheet = workbook.Worksheets[0];
            //Add a new textbox to the collection.
            int textboxIndex = worksheet.TextBoxes.Add(2, 1, 160, 200);
            //Get the textbox object.
            Aspose.Cells.TextBox textbox0 = worksheet.TextBoxes[textboxIndex];
            //Fill the text.
            textbox0.Text = "ASPOSE______The .NET and JAVA Component Publisher!";
            //Get the textbox text frame.
            MsoTextFrame textframe0 = textbox0.TextFrame;
            //Set the textbox to adjust it according to its contents.
            textframe0.AutoSize = true;
            //Set the placement.
            textbox0.Placement = PlacementType.FreeFloating;
            //Set the font color.
            textbox0.Font.Color = Color.Blue;
            //Set the font to bold.
            textbox0.Font.IsBold = true;
            //Set the font size.
            textbox0.Font.Size = 14;
            //Set font attribute to italic.
            textbox0.Font.IsItalic = true;
            //Add a hyperlink to the textbox.
            textbox0.AddHyperlink("http://www.aspose.com/");
            //Get the filformat of the textbox.
            MsoFillFormat fillformat = textbox0.FillFormat;
            //Set the fillcolor.
            fillformat.ForeColor = Color.Silver;
            //Get the lineformat type of the textbox.
            MsoLineFormat lineformat = textbox0.LineFormat;
            //Set the line style.
            lineformat.Style = MsoLineStyle.ThinThick;
            //Set the line weight.
            lineformat.Weight = 6;
            //Set the dash style to squaredot.
            lineformat.DashStyle = MsoLineDashStyle.SquareDot;
            //Add another textbox.
            textboxIndex = worksheet.TextBoxes.Add(15, 4, 85, 120);
            //Get the second textbox.
            Aspose.Cells.TextBox textbox1 = worksheet.TextBoxes[textboxIndex];
            //Input some text to it.
            textbox1.Text = "This is another simple text box";
            //Set the placement type as the textbox will move and
            //resize with cells.
            textbox1.Placement = PlacementType.MoveAndSize;
            //Save the excel file.
            workbook.Save("C:\\tsttextboxes.xls");
            
            [Visual Basic]
            
            'Instantiate a new Workbook.
            Dim workbook As Workbook = New Workbook()
            'Get the first worksheet in the book.
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            'Add a new textbox to the collection.
            Dim textboxIndex As Integer = worksheet.TextBoxes.Add(2, 1, 160, 200)
            'Get the textbox object.
            Dim textbox0 As Aspose.Cells.TextBox = worksheet.TextBoxes(textboxIndex)
            'Fill the text.
            textbox0.Text = "ASPOSE______The .NET and JAVA Component Publisher!"
            'Get the textbox text frame.
            Dim textframe0 As MsoTextFrame = textbox0.TextFrame
            'Set the textbox to adjust it according to its contents.
            textframe0.AutoSize = True
            'Set the placement.
            textbox0.Placement = PlacementType.FreeFloating
            'Set the font color.
            textbox0.Font.Color = Color.Blue
            'Set the font to bold.
            textbox0.Font.IsBold = True
            'Set the font size.
            textbox0.Font.Size = 14
            'Set font attribute to italic.
            textbox0.Font.IsItalic = True
            'Add a hyperlink to the textbox.
            textbox0.AddHyperlink("http://www.aspose.com/")
            'Get the filformat of the textbox.
            Dim fillformat As MsoFillFormat = textbox0.FillFormat
            'Set the fillcolor.
            fillformat.ForeColor = Color.Silver
            'Get the lineformat type of the textbox.
            Dim lineformat As MsoLineFormat = textbox0.LineFormat
            'Set the line style.
            lineformat.Style = MsoLineStyle.ThinThick
            'Set the line weight.
            lineformat.Weight = 6
            'Set the dash style to squaredot.
            lineformat.DashStyle = MsoLineDashStyle.SquareDot
            'Add another textbox.
            textboxIndex = worksheet.TextBoxes.Add(15, 4, 85, 120)
            'Get the second textbox.
            Dim textbox1 As Aspose.Cells.TextBox = worksheet.TextBoxes(textboxIndex)
            'Input some text to it.
            textbox1.Text = "This is another simple text box"
            'Set the placement type as the textbox will move and
            'resize with cells.
            textbox1.Placement = PlacementType.MoveAndSize
            'Save the excel file.
            workbook.Save("C:\tsttextboxes.xls")
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextBoxCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Drawing.TextBox" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.TextBoxCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a textbox to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="height">Height of textbox, in unit of pixel.</param>
      <param name="width">Width of textbox, in unit of pixel.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.TextBox" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.TextBoxCollection.RemoveAt(System.Int32)">
      <summary>
            Remove a text box from the file.
            </summary>
      <param name="index">The text box index.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.TextBoxCollection.Clear">
      <summary>
            Clear all text boxes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextBoxCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.TextBox" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.TextBoxCollection.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.TextBox" /> element by the name.
             </summary>
      <param name="index">The name of the text box.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.TextDirectionType">
      <summary>
            Represents the direction of the text flow for this paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.Context">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.LeftToRight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.RightToLeft">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.TextOrientationType">
      <summary>
            Enumerates text orientation types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.ClockWise">
      <summary>
            text is rotated 90 degrees clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.CounterClockWise">
      <summary>
            text is rotated 90 degrees counterclockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.NoRotation">
      <summary>
            Represents the default value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.TopToBottom">
      <summary>
            Displays text from top to bottom of the cell. Stacked text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextureType">
      <summary>
            Represents the preset texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.BlueTissuePaper">
      <summary>
            Represents Blue Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Bouquet">
      <summary>
            Represents Bouquet texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.BrownMarble">
      <summary>
            Represents Brown Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Canvas">
      <summary>
            Represents Canvas texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Cork">
      <summary>
            Represents Cork texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Denim">
      <summary>
            Represents Denim texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.FishFossil">
      <summary>
            Represents Fish Fossil texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Granite">
      <summary>
            Represents Granite texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.GreenMarble">
      <summary>
            Represents Green Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.MediumWood">
      <summary>
            Represents Medium Wood texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Newsprint">
      <summary>
            Represents Newsprint texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Oak">
      <summary>
            Represents Oak texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PaperBag">
      <summary>
            Represents Paper Bag texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Papyrus">
      <summary>
            Represents Papyrus texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Parchment">
      <summary>
            Represents Parchment texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PinkTissuePaper">
      <summary>
            Represents Pink Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PurpleMesh">
      <summary>
            Represents Purple Mesh texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.RecycledPaper">
      <summary>
            Represents Recycled Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Sand">
      <summary>
            Represents Sand texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Stationery">
      <summary>
            Represents Stationery texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Walnut">
      <summary>
            Represents Walnut Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WaterDroplets">
      <summary>
            Represents Water Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WhiteMarble">
      <summary>
            Represents White Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WovenMat">
      <summary>
            Represents Woven Mat texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Unknown">
      <summary>
            Represents Unknown texture type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ThemeColor">
      <summary>
            Represents a theme color.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            cells["A1"].PutValue("Hello World");
            Style style = cells["A1"].GetStyle();
            //Set ThemeColorType.Text2 color type with 40% lighten as the font color.
            style.Font.ThemeColor = new ThemeColor(ThemeColorType.Text2, 0.4);
            style.Pattern = BackgroundType.Solid;
            //Set ThemeColorType.Background2 color type with 75% darken as the foreground color
            style.ForegroundThemeColor = new ThemeColor(ThemeColorType.Background2, -0.75);
            cells["A1"].SetStyle(style);
            //Saving the Excel file
            workbook.Save("C:\\book1.xlsx");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            cells("A1").PutValue("Hello World")
            'Get the cell style
            Dim style As Style = cells("A1").GetStyle()
            'Set ThemeColorType.Text2 color type with 40% lighten as the font color.
            Style.Font.ThemeColor = New ThemeColor(ThemeColorType.Text2, 0.4)
            Style.Pattern = BackgroundType.Solid
            'Set ThemeColorType.Background2 color type with 75% darken as the foreground color
            style.ForegroundThemeColor = New ThemeColor(ThemeColorType.Background2, -0.75)
            'Set the cell style
            cells("A1").SetStyle(style)
            'Saving the Excel file
            Workbook.Save("C:\\book1.xlsx")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ThemeColor.#ctor(Aspose.Cells.ThemeColorType,System.Double)">
      <summary>
      </summary>
      <param name="type">The theme type.</param>
      <param name="tint">The tint value.</param>
    </member>
    <member name="P:Aspose.Cells.ThemeColor.ColorType">
      <summary>
            Gets and sets the theme type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ThemeColor.Tint">
      <summary>
            Gets and sets the tint value.
            </summary>
      <remarks>
            The tint value is stored as a double from -1.0 .. 1.0, where -1.0 means 100% darken 
            and 1.0 means 100% lighten. Also, 0.0 means no change.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ThemeColorType">
      <summary>
            Enumerates  the theme color types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Background1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Text1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Background2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Text2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Hyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.StyleColor">
      <summary>
            Inner used.
            A color used in theme definitions which means to use the color of the style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TickLabelPositionType">
      <summary>
            Represents the position type of tick-mark labels on the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.High">
      <summary>
            Position type is high.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.Low">
      <summary>
            Position type is low. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.NextToAxis">
      <summary>
            Position type is next to axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.None">
      <summary>
            Position type is none.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TickLabels">
      <summary>
            Represents the tick-mark labels associated with tick marks on a chart axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.Font">
      <summary>
            Returns a <see cref="P:Aspose.Cells.Charts.TickLabels.Font" /> object that represents the font of the specified TickLabels object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.AutoScaleFont">
      <summary>
            True if the text in the object changes font size when the object size changes. The default value is True. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.BackgroundMode">
      <summary>
            Gets and sets the display mode of the background
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.Background">
      <summary>
            Gets and sets the display mode of the background
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use TickLabels.BackgroundMode property. 
            This property will be removed 12 months later since JANUARY 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use TickLabels.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.RotationAngle">
      <summary>
            Represents text rotation angle in clockwise.
            </summary>
      <remarks>
        <br>0: Not rotated.</br>
        <br>255: Top to Bottom.</br>
        <br>-90: Downward.</br>
        <br>90: Upward.</br>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.NumberFormat">
      <summary>
            Represents the format string for the TickLabels object.
            </summary>
      <remarks>The formating string is same as a custom format string setting to a cell. For example, "$0".</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.Number">
      <summary>
            Represents the format number for the TickLabels object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.NumberFormatLinked">
      <summary>
            True if the number format is linked to the cells 
            (so that the number format changes in the labels when it changes in the cells). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.Offset">
      <summary>
            Represents the distance between the levels of labels, and the distance between the first level and the axis line.  
            </summary>
      <remarks>
            The default distance is 100 percent, which represents the default spacing between the axis labels and the axis line.
            The value can be an integer percentage from 0 through 1000, relative to the axis label¡¯s font size.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.TickLabels.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TickMarkType">
      <summary>
            Represents the tick mark type for the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Cross">
      <summary>
            Tick mark type is Cross.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Inside">
      <summary>
            Tick mark type is Inside.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.None">
      <summary>
            Tick mark type is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Outside">
      <summary>
            Tick mark type is Outside
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TotalsCalculation">
      <summary>
            Determines the type of calculation in the Totals row of the list column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Sum">
      <summary>
            Represents Sum totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Count">
      <summary>
            Represents Count totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Average">
      <summary>
            Represents Average totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Max">
      <summary>
            Represents Max totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Min">
      <summary>
            Represents Min totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Var">
      <summary>
            Represents Var totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.CountNums">
      <summary>
            Represents Count Nums totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.StdDev">
      <summary>
            Represents StdDev totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.None">
      <summary>
            Represents No totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Custom">
      <summary>
            Represents custom calcultation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Trendline">
      <summary>
            Represents a trendline in a chart.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Excel object
            int sheetIndex = workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[sheetIndex];
            //Adding a sample value to "A1" cell
            worksheet.Cells["A1"].PutValue(50);
            //Adding a sample value to "A2" cell
            worksheet.Cells["A2"].PutValue(100);
            //Adding a sample value to "A3" cell
            worksheet.Cells["A3"].PutValue(150);
            //Adding a sample value to "A4" cell
            worksheet.Cells["A4"].PutValue(200);
            //Adding a sample value to "B1" cell
            worksheet.Cells["B1"].PutValue(60);
            //Adding a sample value to "B2" cell
            worksheet.Cells["B2"].PutValue(32);
            //Adding a sample value to "B3" cell
            worksheet.Cells["B3"].PutValue(50);
            //Adding a sample value to "B4" cell
            worksheet.Cells["B4"].PutValue(40);
            //Adding a sample value to "C1" cell as category data
            worksheet.Cells["C1"].PutValue("Q1");
            //Adding a sample value to "C2" cell as category data
            worksheet.Cells["C2"].PutValue("Q2");
            //Adding a sample value to "C3" cell as category data
            worksheet.Cells["C3"].PutValue("Y1");
            //Adding a sample value to "C4" cell as category data
            worksheet.Cells["C4"].PutValue("Y2");
            //Adding a chart to the worksheet
            int chartIndex = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5);
            //Accessing the instance of the newly added chart
            Chart chart = worksheet.Charts[chartIndex];
            //Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", true);
            //Setting the data source for the category data of NSeries
            chart.NSeries.CategoryData = "C1:C4";
            //adding a linear trendline
            int index = chart.NSeries[0].TrendLines.Add(TrendlineType.Linear);
            Trendline trendline = chart.NSeries[0].TrendLines[index];
            //Setting the custom name of the trendline.
            trendline.Name = "Linear";
            //Displaying the equation on chart
            trendline.DisplayEquation = true;
            //Displaying the R-Squared value on chart
            trendline.DisplayRSquared = true;
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Excel object
            Dim sheetIndex As Int32 = workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(sheetIndex)
            'Adding a sample value to "A1" cell
            worksheet.Cells("A1").PutValue(50)
            'Adding a sample value to "A2" cell
            worksheet.Cells("A2").PutValue(100)
            'Adding a sample value to "A3" cell
            worksheet.Cells("A3").PutValue(150)
            'Adding a sample value to "A4" cell
            worksheet.Cells("A4").PutValue(200)
            'Adding a sample value to "B1" cell
            worksheet.Cells("B1").PutValue(60)
            'Adding a sample value to "B2" cell
            worksheet.Cells("B2").PutValue(32)
            'Adding a sample value to "B3" cell
            worksheet.Cells("B3").PutValue(50)
            'Adding a sample value to "B4" cell
            worksheet.Cells("B4").PutValue(40)
            'Adding a sample value to "C1" cell as category data
            worksheet.Cells("C1").PutValue("Q1")
            'Adding a sample value to "C2" cell as category data
            worksheet.Cells("C2").PutValue("Q2")
            'Adding a sample value to "C3" cell as category data
            worksheet.Cells("C3").PutValue("Y1")
            'Adding a sample value to "C4" cell as category data
            worksheet.Cells("C4").PutValue("Y2")
            'Adding a chart to the worksheet
            Dim chartIndex As Int32 = worksheet.Charts.Add(ChartType.Column, 5, 0, 15, 5)
            'Accessing the instance of the newly added chart
            Dim chart As Chart = worksheet.Charts(chartIndex)
            'Adding NSeries (chart data source) to the chart ranging from "A1" cell to "B4"
            chart.NSeries.Add("A1:B4", True)
            'Setting the data source for the category data of NSeries
            Chart.NSeries.CategoryData = "C1:C4"
            'adding a linear trendline
            Dim index As Int32 = chart.NSeries(0).TrendLines.Add(TrendlineType.Linear)
            Dim trendline As Trendline = chart.NSeries(0).TrendLines(index)
            'Setting the custom name of the trendline.
            trendline.Name = "Linear"
            'Displaying the equation on chart
            trendline.DisplayEquation = True
            'Displaying the R-Squared value on chart
            trendline.DisplayRSquared = True
            'Saving the Excel file
            workbook.Save("C:\\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.IsNameAuto">
      <summary>
            Returns if Microsoft Excel automatically determines the name of the trendline. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Type">
      <summary>
            Returns the trendline type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Name">
      <summary>
            Returns the name of the trendline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Order">
      <summary>
            Returns or sets the trendline order (an integer greater than 1) when the trendline type is Polynomial. 
            The order must be between 2 and 6.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Period">
      <summary>
            Returns or sets the period for the moving-average trendline.
            </summary>
      <remarks>This value should be between 2 and 255.
            And it must be less than the number of the chart points in the series</remarks>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Forward">
      <summary>
            Returns or sets the number of periods (or units on a scatter chart) that the trendline extends forward.
            The number of periods must be greater than and equal to zero.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Backward">
      <summary>
            Returns or sets the number of periods (or units on a scatter chart) that the trendline extends backward. 
            The number of periods must be greater than and equal to zero.
            If the chart type is column ,the number of periods must be between 0 and 0.5
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.DisplayEquation">
      <summary>
            Represents if the equation for the trendline is displayed on the chart (in the same data label as the R-squared value). Setting this property to True automatically turns on data labels. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.DisplayRSquared">
      <summary>
            Represents if the R-squared value of the trendline is displayed on the chart (in the same data label as the equation). Setting this property to True automatically turns on data labels. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.Intercept">
      <summary>
            Returns or sets the point where the trendline crosses the value axis.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.DataLabels">
      <summary>
            Represents the DataLabels object for the specified ASeries. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Trendline.LegendEntry">
      <summary>
            Gets the legend entry according to this trendline
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TrendlineCollection">
      <summary>
            Represents a collection of all the <see cref="T:Aspose.Cells.Charts.Trendline" /> objects for the specified data series.
            </summary>
      <example>
        <code>
            [C#]
            int chartIndex = excel.Worksheets[0].Charts.Add(ChartType.Column, 3, 3, 15, 10);
            Chart chart = excel.Worksheets[0].Charts[chartIndex];
            chart.NSeries.Add("A1:a3", true);
            chart.NSeries[0].TrendLines.Add(TrendlineType.Linear, "MyTrendLine");
            Trendline line = chart.NSeries[0].TrendLines[0];
            line.DisplayEquation = true;
            line.DisplayRSquared = true;
            line.Color = Color.Red;
            
            [Visual Basic]
            Dim chartIndex As Integer =  excel.Worksheets(0).Charts.Add(ChartType.Column,3,3,15,10) 
            Dim chart As Chart =  excel.Worksheets(0).Charts(chartIndex) 
            chart.NSeries.Add("A1:a3", True)
            chart.NSeries(0).TrendLines.Add(TrendlineType.Linear, "MyTrendLine")
            Dim line As Trendline =  chart.NSeries(0).TrendLines(0) 
            line.DisplayEquation = True
            line.DisplayRSquared = True
            line.Color = Color.Red
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Charts.TrendlineCollection.Add(Aspose.Cells.Charts.TrendlineType)">
      <summary>
            Adds a <seealso cref="T:Aspose.Cells.Charts.Trendline" /> object to this collection with specified type.
            </summary>
      <param name="type">Trendline type.</param>
      <returns>
        <see cref="T:Aspose.Cells.Charts.Trendline" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.Charts.TrendlineCollection.Add(Aspose.Cells.Charts.TrendlineType,System.String)">
      <summary>
            Adds a <seealso cref="T:Aspose.Cells.Charts.Trendline" /> object to this collection with specified type and name.
            </summary>
      <param name="type">Trendline type.</param>
      <param name="name">Trendline name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Charts.Trendline" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.Charts.TrendlineCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Charts.Trendline" /> object by its index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TrendlineType">
      <summary>
            Represents the trendline type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Exponential">
      <summary>
            Exponential
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Linear">
      <summary>
            Linear
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Logarithmic">
      <summary>
            Logarithmic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.MovingAverage">
      <summary>
            MovingAverage
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Polynomial">
      <summary>
            Polynomial
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Power">
      <summary>
            Power
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.FontSettingCollection">
      <summary>
            Represents the list of <see cref="T:Aspose.Cells.FontSetting" />.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.GetParagraphEnumerator">
      <summary>
            Gets the enumerator of the paragraphs.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.AppendText(System.String)">
      <summary>
            Appends the text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.InsertText(System.Int32,System.String)">
      <summary>
            Insert index at the position.
            </summary>
      <param name="index">The start index.</param>
      <param name="text">The text.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.DeleteText(System.Int32,System.Int32)">
      <summary>
            Delete some characters.
            </summary>
      <param name="index">The start index.</param>
      <param name="count">The count of characters.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.Format(System.Int32,System.Int32,Aspose.Cells.Font,Aspose.Cells.StyleFlag)">
      <summary>
            Format the text with font setting.
            </summary>
      <param name="startIndex">The start index.</param>
      <param name="length">The length.</param>
      <param name="font">The font.</param>
      <param name="flag">The flags of the font.</param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.FontSettingCollection.Clear">
      <summary>
            Clear all setting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.FontSettingCollection.TextAlignment">
      <summary>
            Represents the alignment setting of the text body.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.FontSettingCollection.TextParagraphs">
      <summary>
            Gets all paragraphs.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.FontSettingCollection.Text">
      <summary>
            Gets and sets the text of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.FontSettingCollection.HtmlString">
      <summary>
            Gets and sets the html string which contains data and some formattings in this shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.FontSettingCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.FontSetting" /> by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Validation">
      <summary>
             Represents data validation.settings.
             </summary>
      <example>
        <code>
             [C#]
             Workbook workbook = new Workbook();
            	ValidationCollection validations = workbook.Worksheets[0].Validations;
            	Validation validation = validations[validations.Add()];
            	validation.Type = Aspose.Cells.ValidationType.WholeNumber;
            	validation.Operator = OperatorType.Between;
            	validation.Formula1 = "3";
            	validation.Formula2 = "1234";
            			
            	CellArea area;
            	area.StartRow = 0;
            	area.EndRow = 1;
            	area.StartColumn = 0;
            	area.EndColumn = 1;
            
            	validation.AreaList.Add(area);
            	
            	[Visual Basic]
            	Dim workbook as Workbook = new Workbook()
            	Dim validations as ValidationCollection  = workbook.Worksheets(0).Validations
            	Dim validation as Validation = validations(validations.Add())
            	validation.Type = ValidationType.WholeNumber
            	validation.Operator = OperatorType.Between
            	validation.Formula1 = "3"
            	validation.Formula2 = "1234"
            			
            	Dim area as CellArea
            	area.StartRow = 0
            	area.EndRow = 1
            	area.StartColumn = 0
            	area.EndColumn = 1
            
            	validation.AreaList.Add(area)
            
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Validation.AddArea(Aspose.Cells.CellArea)">
      <summary>
            Applies the validation to the area.
            </summary>
      <param name="cellArea">The area.</param>
      <remarks>
            In this method , we will remove all old validations on this area.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Validation.RemoveArea(Aspose.Cells.CellArea)">
      <summary>
            Remove the validation settings in the range.
            </summary>
      <param name="cellArea">The range which contains the data validation settings.</param>
    </member>
    <member name="M:Aspose.Cells.Validation.RemoveACell(System.Int32,System.Int32)">
      <summary>
            Remove the validation settings in the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column"> The column index.</param>
    </member>
    <member name="P:Aspose.Cells.Validation.Operator">
      <summary>
            Represents the operator for the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AlertStyle">
      <summary>
            Represents the validation alert style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Type">
      <summary>
            Represents the data validation type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputMessage">
      <summary>
            Represents the data validation input message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputTitle">
      <summary>
            Represents the title of the data-validation input dialog box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorMessage">
      <summary>
            Represents the data validation error message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorTitle">
      <summary>
            Represents the title of the data-validation error dialog box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowInput">
      <summary>
            Indicates whether the data validation input message will be displayed whenever the user selects a cell in the data validation range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowError">
      <summary>
            Indicates whether the data validation error message will be displayed whenever the user enters invalid data. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.IgnoreBlank">
      <summary>
            Indicates whether blank values are permitted by the range data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula1">
      <summary>
            Represents the value or expression associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Value1">
      <summary>
            Represents the first value associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Value2">
      <summary>
            Represents the first value associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula2">
      <summary>
            Represents the value or expression associated with the second part of the data validation. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InCellDropDown">
      <summary>
            Indicates whether data validation displays a drop-down list that contains acceptable values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AreaList">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.CellArea" /> which contains the data validation settings.
            </summary>
      <remarks>
            The old validations on the area will not be removed if directly adding are to this list.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ValidationAlertType">
      <summary>
            Represents the data validation alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Information">
      <summary>
            Information alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Stop">
      <summary>
            Stop alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Warning">
      <summary>
            Warning alert style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ValidationCollection">
      <summary>
            Represents data validation collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add">
      <summary>
            Adds a data validation to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ValidationCollection.Add(CellArea) method.
            This property will be removed 12 months later since JANUARY 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add(Aspose.Cells.CellArea)">
      <summary>
            Adds a data validation to the collection.
            </summary>
      <param name="ca">The area contains this validation.</param>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add(Aspose.Cells.Validation)">
      <summary>
            Add a <see cref="T:Aspose.Cells.Validation" /> to the collection.
            </summary>
      <param name="validation"> A validation object.</param>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.RemoveACell(System.Int32,System.Int32)">
      <summary>
            Removes all validation setting on the cell.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.RemoveArea(Aspose.Cells.CellArea)">
      <summary>
             Removes all validation setting on the range..
             </summary>
      <param name="ca">The range which contains the validations setting.</param>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.GetValidationInCell(System.Int32,System.Int32)">
      <summary>
            Gets the validation applied to given cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Validation" /> object or null if there is no validation for given cell</returns>
    </member>
    <member name="P:Aspose.Cells.ValidationCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Validation" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.ValidationType">
      <summary>
            Represents data validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.AnyValue">
      <summary>
            Any value validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.WholeNumber">
      <summary>
            Whole number validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Decimal">
      <summary>
            Decimal validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.List">
      <summary>
            List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Date">
      <summary>
            Date validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Time">
      <summary>
            Time validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.TextLength">
      <summary>
            Text length validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Custom">
      <summary>
            Custom validation type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ViewType">
      <summary>
            Represents the view type of the worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.NormalView">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.PageBreakPreview">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.PageLayoutView">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.VerticalPageBreak">
      <summary>
            Encapsulates the object that represents a vertical page break. 
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HorizontalPageBreaks.Add("G5");
            excel.Worksheets[0].VerticalPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HorizontalPageBreaks.Add("G5")
            excel.Worksheets(0).VerticalPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.StartRow">
      <summary>
            Gets the start row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.EndRow">
      <summary>
            Gets the end row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.Column">
      <summary>
            Gets the column index of the vertical page break.
            </summary>
    </member>
    <member name="T:Aspose.Cells.VerticalPageBreakCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.VerticalPageBreak" /> objects.
            </summary>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="startRow">Start row index, zero based.</param>
      <param name="endRow">End row index, zero based.</param>
      <param name="column">Column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>This method is used to add a vertical pagebreak within a print area.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.String)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the VPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreakCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.VerticalPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreakCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VerticalPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.Walls">
      <summary>
            Encapsulates the object that represents the walls of a 3-D chart.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Walls.GetCubePointCount">
      <summary>
            Gets the number of cube points after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Walls.GetCubePointXPx(System.Int32)">
      <summary>
            Gets x-coordinate of the apex point of walls cube after calls Chart.Calculate() method.
            The number of apex points of walls cube is eight
            </summary>
    </member>
    <member name="M:Aspose.Cells.Charts.Walls.GetCubePointYPx(System.Int32)">
      <summary>
            Gets y-coordinate of the apex point of walls cube after calls Chart.Calculate() method.
            The number of apex points of walls cube is eight.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.CenterX">
      <summary>
            Gets the x coordinate of the left-bottom corner of Wall center in units of 1/4000 of chart's width after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.CenterY">
      <summary>
            Gets the y coordinate of the left-bottom corner of Wall center in units of 1/4000 of chart's height after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.Width">
      <summary>
            Gets the width of left to right in units of 1/4000 of chart's width after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.Depth">
      <summary>
            Gets the depth front to back in units of 1/4000 of chart's width after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.Height">
      <summary>
            Gets the height of top to bottom in units of 1/4000 of chart's height after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.CenterXPx">
      <summary>
            Gets the x coordinate of the left-bottom corner of Wall center in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.CenterYPx">
      <summary>
            Gets the y coordinate of the left-bottom corner of Wall center in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.WidthPx">
      <summary>
            Gets the width of left to right in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.DepthPx">
      <summary>
            Gets the depth front to back in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Charts.Walls.HeightPx">
      <summary>
            Gets the height of top to bottom in units of pixels after calls Chart.Calculate() method.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.WeightType">
      <summary>
            Enumerates the weight types for a picture border or a chart line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.HairLine">
      <summary>
            Represents the weight of hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.MediumLine">
      <summary>
            Represents the weight of medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.SingleLine">
      <summary>
            Represents the weight of single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.WideLine">
      <summary>
            Represents the weight of wide line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.VisibilityType">
      <summary>
            Represents the states for sheet visibility. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.Hidden">
      <summary>
            Indicates the sheet is hidden, but can be shown by the user via the user interface.  
             </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.VeryHidden">
      <summary>
            ndicates the sheet is hidden and cannot be shown in the user interface (UI). 
            This state is only available programmatically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.Visible">
      <summary>
            Indicates the sheet is visible. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Workbook">
      <summary>
             Represents a root object to create an Excel spreadsheet. 	
             </summary>
      <remarks>The Workbook class denotes an Excel spreadsheet. Each spreadsheet can contain multiple worksheets.
             The basic feature of the class is to open and save native excel files.
             The class has some advanced features like copying data from other Workbooks, combining two Workbooks and protecting the Excel spreadsheet.
             </remarks>
      <example>
             The following example creates a Workbook, opens a file named designer.xls in it and makes the horizontal and vertical scroll bars invisible for the Workbook. It then replaces two string values with an Integer value and string value respectively within the spreadsheet and finally sends the updated file to the client browser. 
             <code>
             [C#]
            
             
             
             //Open a designer file
             string designerFile = MapPath("Designer") + "\\designer.xls";
             Workbook workbook = new Workbook(designerFile);
             
             //Set scroll bars
             workbook.IsHScrollBarVisible = false;
             workbook.IsVScrollBarVisible = false;
             
             //Replace the placeholder string with new values
             int newInt = 100;
             workbook.Replace("OldInt", newInt);
             
             string newString = "Hello!";
             workbook.Replace("OldString", newString);
             XlsSaveOptions saveOptions = new XlsSaveOptions();
             workbook.Save(Response, "result.xls", ContentDisposition.Inline, saveOptions);
             
             [Visual Basic]
             
             
             
             'Open a designer file
             Dim designerFile as String = MapPath("Designer") + "\designer.xls"
             Dim workbook as Workbook = new Workbook(designerFile)
             
             'Set scroll bars
             workbook.IsHScrollBarVisible = False
             workbook.IsVScrollBarVisible = False
             
             'Replace the placeholder string with new values
             Dim newInt as Integer = 100
             workbook.Replace("OldInt", newInt)
             
             Dim newString as String = "Hello!"
             workbook.Replace("OldString", newString)
             Dim saveOptions as XlsSaveOptions  = new XlsSaveOptions()
             workbook.Save(Response, "result.xls", ContentDisposition.Inline, saveOptions)    
             </code></example>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class.
            </summary>
      <example>
            The following code shows how to use the Workbook constructor to create and initialize a new instance of the class.
            <code>
            [C#]
            
            Workbook workbook = new Workbook();
            		
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            		
            </code></example>
      <remarks>
            The default file format type is Excel97To2003.If want create other format file type, please call Workbook(FileFormatType fileFormatType).
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(Aspose.Cells.FileFormatType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class.
            </summary>
      <param name="fileFormatType">
            The new file format.
            </param>
      <example>
            The following code shows how to use the Workbook constructor to create and initialize a new instance of the class.
            <code>
            [C#]
            
            Workbook workbook = new Workbook(FileFormatType.Excel2007Xlsx);
            		
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook(FileFormatType.Excel2007Xlsx)
            		
            </code></example>
      <remarks>
            The default file format type is Excel97To2003.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.String)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a file.
            </summary>
      <param name="file">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.IO.Stream)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.String,Aspose.Cells.LoadOptions)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a file.
            </summary>
      <param name="file">The file name.</param>
      <param name="loadOptions">The load options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.IO.Stream,Aspose.Cells.LoadOptions)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open stream.
            </summary>
      <param name="stream">The stream.</param>
      <param name="loadOptions">The load options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Initialize">
      <summary>
            Initialize the workbook object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.SaveToStream">
      <summary>
            Saves Excel file to a MemoryStream object and returns it.
            </summary>
      <returns>MemoryStream object which contains an Excel file.</returns>
      <remarks>
            
            This method provides same function as Save method and only save the workbook as Excel97-2003 xls file. 
            It's mainly for calling from COM clients.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String)">
      <summary>
            Creates and saves the specified file to the disk.
            </summary>
      <param name="fileName">The name of created file.</param>
      <remarks>
        <p>File format is according to file extension.</p>
            After calling Save method, data in Workbook instance will be reset.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.SaveFormat)">
      <summary>
            Save the workbook to the disk.
            </summary>
      <param name="fileName">The file name.</param>
      <param name="saveFormat">The save format type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.SaveOptions)">
      <summary>
            Save the workbook to the disk.
            </summary>
      <param name="fileName">The file name.</param>
      <param name="saveOptions">The save options.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.SaveFormat)">
      <summary>
            Save the workbook to the stream.
            </summary>
      <param name="stream">The file stream.</param>
      <param name="saveFormat">The save file format type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.SaveOptions)">
      <summary>
            Save the workbook to the stream.
            </summary>
      <param name="stream">The file stream.</param>
      <param name="saveOptions">The save options.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.Web.HttpResponse,System.String,Aspose.Cells.ContentDisposition,Aspose.Cells.SaveOptions)">
      <summary>
            Creates the result spreadsheet and transfer it to the client then open it in the browser or MS Workbook.
            </summary>
      <param name="response">Response object to return the spreadsheet to client.</param>
      <param name="fileName">The name of created file.</param>
      <param name="contentDisposition">The content dispostion type.</param>
      <param name="saveOptions">The save options.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveUnusedStyles">
      <summary>
            Remove all unused styles.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateStyle">
      <summary>
            Creates a new style.
            </summary>
      <returns>Returns a style object.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateBuiltinStyle(Aspose.Cells.BuiltinStyleType)">
      <summary>
            Creates built-in style by given type.
            </summary>
      <param name="type">
      </param>
      <returns>style object</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateCellsColor">
      <summary>
            Creates a <see cref="T:Aspose.Cells.CellsColor" /> object.
            </summary>
      <returns>Returns a <see cref="T:Aspose.Cells.CellsColor" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String)">
      <summary>
             Replaces a cell's value with a new string.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             workbook.Replace("AnOldValue", "NewValue");
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
              ........
            workbook.Replace("AnOldValue", "NewValue")
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">String value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32)">
      <summary>
             Replaces a cell's value with a new integer.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int newValue = 100;
             workbook.Replace("AnOldValue", newValue);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Integer =  100 
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Integer value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double)">
      <summary>
             Replaces a cell's value with a new double.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double newValue = 100.0;
             workbook.Replace("AnOldValue", newValue);
             
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Double =  100.0
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Double value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String[],System.Boolean)">
      <summary>
             Replaces a cell's value with a new string array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             string[] newValues = new string[]{"Tom", "Alice", "Jerry"};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             .............
            Dim NewValues() As String =  New String() {"Tom", "Alice", "Jerry"}		
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">String array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32[],System.Boolean)">
      <summary>
             Replaces cells' values with an integer array.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int[] newValues = new int[]{1, 2, 3};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            ...........
            Dim NewValues() As Integer =  New Integer() {1, 2, 3}
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Integer array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double[],System.Boolean)">
      <summary>
             Replaces cells' values with a double array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double[] newValues = new double[]{1.23, 2.56, 3.14159};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             ...........
             Dim NewValues() As Double =  New Double() {1.23, 2.56, 3.14159}
             workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Double array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Data.DataTable)">
      <summary>
             Replaces cells' values with data from a <see cref="T:System.Data.DataTable" />.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             DataTable myDataTable = new DataTable("Customers");
             // Adds data to myDataTable
             ........
             workbook.Replace("AnOldValue", myDataTable);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             Dim myDataTable As DataTable =  New DataTable("Customers") 
             ' Adds data to myDataTable
            .............
             workbook.Replace("AnOldValue", myDataTable)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="insertTable">DataTable to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Boolean,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="boolValue">The boolean value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Int32,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="intValue">The integer value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String,Aspose.Cells.ReplaceOptions)">
      <summary>
             Replaces a cell's value with a new string.
            </summary>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">String value to replace</param>
      <param name="options"> The replace options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Copy(Aspose.Cells.Workbook)">
      <summary>
            Copies data from a source Workbook object.
            </summary>
      <param name="source">Source Workbook object.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Combine(Aspose.Cells.Workbook)">
      <summary>
            Combines another Workbook object.
            </summary>
      <param name="secondWorkbook">Another Workbook object.</param>
      <remarks>Currently, only cell data and cell style of the second Workbook object can be combined. Images, charts and other drawing objects are not supported.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetStyleInPool(System.Int32)">
      <summary>
            Gets the style in the style pool.
            All styles in the workbook will be gathered into a pool.
            There is only a simple referrence index in the cells.
            </summary>
      <param name="index">The index.</param>
      <returns>
            The style in the pool corresponds to given index, may be null.
            </returns>
      <remarks>
            If the returned style is changed, the style of all cells(which refers to this style) will be changed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetNamedStyle(System.String)">
      <summary>
            Gets the named style in the style pool.
            </summary>
      <param name="name">name of the style</param>
      <returns>named style, maybe null.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.ChangePalette(System.Drawing.Color,System.Int32)">
      <summary>
             Changes the palette for the spreadsheet in the specified index.
             </summary>
      <param name="color">Color structure.</param>
      <param name="index">Palette index, 0 - 55.</param>
      <remarks>The palette has 56 entries, each represented by an RGB value. 
             If you set a color which is not in the palette, it will not take effect.
             So if you want to set a custom color, please change the palette at first.
             <p>The following is the standard color palette.</p><table class="dtTABLE" cellspacing="0"><tr><td width="25%"><font color="gray"><b>Color</b></font>¡¡</td><td width="25%"><font color="gray"><b>Red</b></font>¡¡</td><td width="25%"><font color="gray"><b>Green</b></font>¡¡</td><td width="25%"><font color="gray"><b>Blue</b></font>¡¡</td></tr><tr><td width="25%">Black¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">White¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Red¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Lime¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Blue¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Yellow¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Magenta¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Cyan¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Maroon¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Green¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Navy¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Olive¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Purple¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Teal¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Silver¡¡</td><td width="25%">192¡¡</td><td width="25%">192¡¡</td><td width="25%">192¡¡</td></tr><tr><td width="25%">Gray¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color17¡¡</td><td width="25%">153¡¡</td><td width="25%">153¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color18¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color19¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color20¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color21¡¡</td><td width="25%">102¡¡</td><td width="25%">0¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color22¡¡</td><td width="25%">255¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color23¡¡</td><td width="25%">0¡¡</td><td width="25%">102¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color24¡¡</td><td width="25%">204¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color25¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color26¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color27¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color28¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color29¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color30¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color31¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color32¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color33¡¡</td><td width="25%">0¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color34¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color35¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color36¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color37¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color38¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color39¡¡</td><td width="25%">204¡¡</td><td width="25%">153¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color40¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color41¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color42¡¡</td><td width="25%">51¡¡</td><td width="25%">204¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color43¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color44¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color45¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color46¡¡</td><td width="25%">255¡¡</td><td width="25%">102¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color47¡¡</td><td width="25%">102¡¡</td><td width="25%">102¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color48¡¡</td><td width="25%">150¡¡</td><td width="25%">150¡¡</td><td width="25%">150¡¡</td></tr><tr><td width="25%">Color49¡¡</td><td width="25%">0¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color50¡¡</td><td width="25%">51¡¡</td><td width="25%">153¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color51¡¡</td><td width="25%">0¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color52¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color53¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color54¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color55¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color56¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td></tr></table></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.IsColorInPalette(System.Drawing.Color)">
      <summary>
            Checks if a color is in the palette for the spreadsheet.
            </summary>
      <param name="color">Color structure.</param>
      <returns>Returns true if this color is in the palette. Otherwise, returns false</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula">
      <summary>
             Calculates the result of formulas.
             </summary>
      <remarks>
        <p>Now Workbook built-in functions are not supported in this method:</p>
        <p>[A]</p>
        <p>ASC</p>
        <p>[B]</p>
        <p>BAHTTEXT</p>
        <p>[C]</p>
        <p>CALL, CLEAN, CODE, CONVERT, CUBEKPIMEMBER, CUBEMEMBER, CUBEMEMBERPROPERTY, CUBERANKEDMEMBER, CUBESET, CUBESETCOUNT, CUBEVALUE</p>
        <p>[E]</p>
        <p>EUROCONVERT</p>
        <p>[G]</p>
        <p>GETPIVOTDATA</p>
        <p>[I]</p>
        <p>INFO</p>
        <p>[J]</p>
        <p>JIS</p>
        <p>[P]</p>
        <p>PHONETIC</p>
        <p>[R]</p>
        <p>REGISTER.ID, RTD</p>
        <p>[S]</p>
        <p>SQL.REQUEST</p>
        <p>[Y]</p>
        <p>YIELD, YIELDDISC</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean)">
      <summary>
            Calculates the result of formulas.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calculates the result of formulas.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(Aspose.Cells.CalculationOptions)">
      <summary>
            Calcualting formulas in this workbook.
            </summary>
      <param name="options">Options for calculation</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.ValidateFormula(System.String)">
      <summary>
            Checks if a formula is valid.
            </summary>
      <param name="formula">Formula string.</param>
      <returns>True: valid formula. False: invalid formula or unsupported function.</returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Cell.Formula property.
            This property will be removed 12 months later since April 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetMatchingColor(System.Drawing.Color)">
      <summary>
            Find best matching Color in current palette.
            </summary>
      <param name="rawColor">Raw color.</param>
      <returns>Best matching color.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.SetEncryptionOptions(Aspose.Cells.EncryptionType,System.Int32)">
      <summary>
            Set Encryption Options.
            </summary>
      <param name="encryptionType">The encryption type.</param>
      <param name="keyLength">The key length.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CheckWriteProtectedPassword(System.String)">
      <summary>
            Check whether the password is correct write protected password.
            </summary>
      <param name="password">The password.</param>
      <returns>
      </returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.ValidatePassword method.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Protect(Aspose.Cells.ProtectionType,System.String)">
      <summary>
            Protects a workbook.
            </summary>
      <param name="protectionType">Protection type.</param>
      <param name="password">Password to protect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Unprotect(System.String)">
      <summary>
            Unprotects a workbook.
            </summary>
      <param name="password">Password to unprotect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveMacro">
      <summary>
            Removes VBA/macro from this spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveDigitallySign">
      <summary>
            Removes digital signature from this spreadsheet.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.AcceptAllRevisions">
      <summary>
            Accepts all tracked changes in the workbook. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveExternalLinks">
      <summary>
            Removes all external links in the workbook.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetThemeColor(Aspose.Cells.ThemeColorType)">
      <summary>
            Gets theme color.
            </summary>
      <param name="type">The theme color type.</param>
      <returns>The theme color.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.SetThemeColor(Aspose.Cells.ThemeColorType,System.Drawing.Color)">
      <summary>
            Sets the theme color
            </summary>
      <param name="type">The theme color type.</param>
      <param name="color">the theme color</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CustomTheme(System.String,System.Drawing.Color[])">
      <summary>
            Customs the theme.
            </summary>
      <param name="themeName">The theme name</param>
      <param name="colors">The theme colors</param>
      <remarks>
            The length ofcolors should be 12.
            <table class="dtTABLE" cellspacing="0"><tr><td width="50%"><font color="gray"><b>Array index</b></font>¡¡</td><td width="50%"><font color="gray"><b>Theme type</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>0</b></font>¡¡</td><td width="50%"><font color="gray"><b>Backgournd1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>1</b></font>¡¡</td><td width="50%"><font color="gray"><b>Text1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>2</b></font>¡¡</td><td width="50%"><font color="gray"><b>Backgournd2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>3</b></font>¡¡</td><td width="50%"><font color="gray"><b>Text2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>4</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>5</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>6</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent3</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>7</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent4</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>8</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent5</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>9</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent6</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>10</b></font>¡¡</td><td width="50%"><font color="gray"><b>Hyperlink</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>11</b></font>¡¡</td><td width="50%"><font color="gray"><b>Followed Hyperlink</b></font>¡¡</td></tr></table></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CopyTheme(Aspose.Cells.Workbook)">
      <summary>
            Copy the theme from other workbook.
            </summary>
      <param name="source">Another workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.HasExernalLinks">
      <summary>
            Indicates whether this workbook contains external links to other data source.
            </summary>
      <returns>Whether this workbook contains external links to other data source.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.UpdateLinkedDataSource(Aspose.Cells.Workbook[])">
      <summary>
            If this workbook contains external links to other data source,
            Aspose.Cells will attempt to retrieve the latest data.
            </summary>
      <param name="exteralWorkbooks">
            External workbooks are refered by this workbook.
            If it's null, we will directly open the external linked files..
            If it's not null, 
            we will check whether the external link in the array first;
            if not, we will open the external linked files again.
            </param>
      <remarks>
            If the method is not called before calculating formulas,
            Aspose.Cells will use the previous information(cached in the file);
            Please set CellsHelper.StartupPath,CellsHelper.AltStartPath,CellsHelper.LibraryPath. 
            And please set Workbook.FilePath if this workbook is from a stream,
            otherwise Aspose.Cells could not get the external link full path sometimes.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.ImportXml(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            import a xml to the workbook.
            </summary>
      <param name="url">the path of the xml file.</param>
      <param name="sheetName">the destination sheet name .</param>
      <param name="row">the destination row of the xml.</param>
      <param name="col">the destination column of the xml.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.SetDigitalSignature(Aspose.Cells.DigitalSignatures.DigitalSignatureCollection)">
      <summary>
            Set digital signature to file.
            </summary>
      <param name="digitalSignatureCollection">
      </param>
      <remarks>Only support adding digital signature to OOXML file.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetDigitalSignature">
      <summary>
            Get digital signature from file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Settings">
      <summary>
            Gets the workbook settings.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Worksheets">
      <summary>
            Gets the <see cref="T:Aspose.Cells.WorksheetCollection" /> collection in the spreadsheet.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.WorksheetCollection" /> collection</returns>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsLicensed">
      <summary>
            Indicates whether license is set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Styles">
      <summary>
            Gets the <see cref="T:Aspose.Cells.StyleCollection" /> collection.
            </summary>
      <remarks>
            NOTE: This class is now obsolete. Instead, 
            please use Workbook.CreateStyle() to create and manipulate style for workbook instead of StyleCollection.Add()
            and use Workbook.GetNamedStyle(string) to get named style instead of StyleCollection[string].
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.Colors">
      <summary>
            Returns colors in the palette for the spreadsheet. 
            </summary>
      <remarks>The palette has 56 entries, each represented by an RGB value.</remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.CountOfStylesInPool">
      <summary>
            Gets number fo the styles in the style pool.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.DefaultStyle">
      <summary>
             Gets or sets the default <see cref="T:Aspose.Cells.Style" /> object of the workbook.
             </summary>
      <remarks>
             The DefaultStyle property is useful to implement a Style for the whole Workbook. 
             </remarks>
      <example>
             The following code creates and instantiates a new Workbook and sets a default <see cref="T:Aspose.Cells.Style" /> to it.
             <code>
             [C#]
             Workbook workbook = new Workbook();
             Style defaultStyle = workbook.DefaultStyle;
             defaultStyle.Font.Name = "Tahoma";
             workbook.DefaultStyle = defaultStyle;
            
             [Visual Basic]
             Dim workbook as Workbook = new Workbook()
             Dim defaultStyle as Style = workbook.DefaultStyle
             defaultStyle.Font.Name = "Tahoma"
             workbook.DefaultStyle = defaultStyle
             </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsDigitallySigned">
      <summary>
            Indicates if this spreadsheet is digitally signed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.VbaProject">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Workbook.VbaProject" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.HasMacro">
      <summary>
            Indicates if this spreadsheet contains macro/VBA.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.HasRevisions">
      <summary>
            Returns true if the workbook has any tracked changes
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.FileName">
      <summary>
            Gets and sets the current file name.
            </summary>
      <remarks>
            If the file is opened by stream and there are some external formula references,
            please set the file name.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.DataSorter">
      <summary>
            Gets a DataSorter object to sort data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Theme">
      <summary>
            Gets the theme name. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the built-in document properties of the spreadsheet. 
            </summary>
      <remarks>A new property cannot be added to built-in document properties list. You can only get a built-in property and change its value.
            The following is the built-in properties name list:
            <p>Title</p><p>Subject</p><p>Author</p><p>Keywords</p><p>Comments</p><p>Template</p><p>Last Author</p><p>Revision Number</p><p>Application Name</p><p>Last Print Date</p><p>Creation Date</p><p>Last Save Time</p><p>Total Editing Time</p><p>Number of Pages</p><p>Number of Words</p><p>Number of Characters</p><p>Security</p><p>Category</p><p>Format</p><p>Manager</p><p>Company</p><p>Number of Bytes</p><p>Number of Lines</p><p>Number of Paragraphs</p><p>Number of Slides</p><p>Number of Notes</p><p>Number of Hidden Slides</p><p>Number of Multimedia Clips</p></remarks>
      <example>
        <code>
            [C#]
            DocumentProperty doc = workbook.BuiltInDocumentProperties["Author"];
            doc.Value = "John Smith";
            
            [Visual Basic]
            Dim doc as DocumentProperty = workbook.BuiltInDocumentProperties("Author")
            doc.Value = "John Smith"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Workbook.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
      <example>
        <code>
            [C#]
            excel.CustomDocumentProperties.Add("Checked by", "Jane");
            
            [Visual Basic]
            excel.CustomDocumentProperties.Add("Checked by", "Jane")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Workbook.FileFormat">
      <summary>
            Gets and sets the file format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.InterruptMonitor">
      <summary>
            Gets and sets the interrupt monitor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.ContentTypeProperties">
      <summary>
            gets the contenttypeproperties objects in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.CustomXmlParts">
      <summary>
            Represents a Custom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.RibbonXml">
      <summary>
            gets and sets the ribbonXml in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.DataConnections">
      <summary>
            Gets the <see cref="T:Aspose.Cells.ExternalConnections.ExternalConnection" /> collection
            </summary>
    </member>
    <member name="T:Aspose.Cells.WorkbookSettings">
      <summary>
            Represents all seetings of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.EnableMacros">
      <summary>
            Enable macros;
            </summary>
      <remarks>
            Now it only works when copying a worksheet to other worksheet in a workbook.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Date1904">
      <summary>
            Gets or sets a value which represents if the workbook uses the 1904 date system.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ProtectionType">
      <summary>
            Gets the protection type of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.PrecisionAsDisplayed">
      <summary>
            True if calculations in this workbook will be done using only the precision of the numbers as they're displayed
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ReCalculateOnOpen">
      <summary>
            Indicates whether re-calculate all formulas on opening file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CreateCalcChain">
      <summary>
            Indicates whether create calculated formulas chain.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.DisplayDrawingObjects">
      <summary>
            Indicates whether and how to show objects in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Iteration">
      <summary>
            Indicates if Aspose.Cells will use iteration to resolve circular references.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MaxIteration">
      <summary>
            Returns or sets the maximum number of iterations that Aspose.Cells can use to resolve a circular reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MaxChange">
      <summary>
            Returns or sets the maximum number of change that Microsoft Excel can use to resolve a circular reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalcMode">
      <summary>
            It specifies whether to calculate formulas manually,
            automatically or automatically except for multiple table operations.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalculationId">
      <summary>
            Specifies the version of the calculation engine used to calculate values in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalcStackSize">
      <summary>
            Specifies the stack size for calculating cells recursively.
            The large value for this size will give better performance when there are lots of cells need to be calculated recursively.
            On the other hand, larger value will raise the risk of StackOverflowException.
            If user gets StackOverflowException when calculating formulas, this value should be decreased.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RecalculateBeforeSave">
      <summary>
            Indicates whether to recalculate before saving the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.SheetTabBarWidth">
      <summary>
            Width of worksheet tab bar (in 1/1000 of window width).
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ShowTabs">
      <summary>
            Get or sets a value whether the Workbook tabs are displayed.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code hides the Sheet Tabs and Tab Scrolling Buttons for the spreadsheet.
            <code>
            [C#]
            // Hide the spreadsheet tabs.
            workbook.ShowTabs = false;
             
            [Visual Basic]
            ' Hide the spreadsheet tabs.
            workbook.ShowTabs = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.FirstVisibleTab">
      <summary>
            Gets or sets the first visible worksheet tab.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsHScrollBarVisible">
      <summary>
            Gets or sets a value indicating whether the generated spreadsheet will contain a horizontal scroll bar.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>
            The following code makes the horizontal scroll bar invisible for the spreadsheet.
            <code>
            [C#]
            // Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = false;
            
            [Visual Basic]
            ' Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsVScrollBarVisible">
      <summary>
             Gets or sets a value indicating whether the generated spreadsheet will contain a vertical scroll bar.
             </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code makes the vertical scroll bar invisible for the spreadsheet.
             <code>
             [C#]
            	// Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = false;
             
             [Visual Basic]
             ' Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Shared">
      <summary>
            Gets or sets a value that indicates whether the Workbook is shared. 
            </summary>
      <remarks>The default value is false.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.LanguageCode">
      <summary>
            Gets or sets the user interface language of the Workbook version based on CountryCode that has saved the file. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Region">
      <summary>
            Gets or sets the regional settings for workbook.
            </summary>
      <remarks>
            1. Regional settings used by Aspose.Cells component for a workbook loaded from template file:
            i). For an XLS file, there are fields defined for regional settings and MS Excel does save regional settings data into the file when saving the XLS file.
            So, we use the saved region in the template file for the workbook.
            If you do not want to use the region saved in the XLS file, please reset it to the expected one (such as, CountryCode.Default) after loading the template file.
            And, we save the user specified value (by this method) into the file too when saving an XLS file.
            ii). For other file formats, such as, XLSX, XLSB...etc., there is no field defined for regional settings in the file format specification.
            So, we use the regional settings of application's environment for the workbook.
            And, the user specified value (by this method) cannot be kept for the generated files with those file formats.
            2. For the view effect in MS Excel:
            The applied regional settings here can take effect only at runtime with Aspose.Cells component and not when viewing the generated file with MS Excel.
            Even for the generated XLS file in which the specified regional settings data has been saved, when viewing/editing it with MS Excel,
            the used region to perform formatting by MS Excel is always the default regional settings of the environment where MS Excel is running,
            not the one saved in the file. It is MS Excel's behavior and cannot be changed by code.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CultureInfo">
      <summary>
            Gets or sets the system culture info.
            </summary>
      <remarks>
            Returns null if culture info is not set and <see cref="P:Aspose.Cells.WorkbookSettings.Region" /> is not set. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.NumberDecimalSeparator">
      <summary>
            Gets or sets the decimal separator for formatting/parsing numeric values. Default is the decimal separator of current Region.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.NumberGroupSeparator">
      <summary>
            Gets or sets the character that separates groups of digits to the left of the decimal in numeric values. Default is the group separator of current Region.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Password">
      <summary>
            Represents Workbook file encryption password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WriteProtection">
      <summary>
            Provides access to the workbook write protection options. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RecommendReadOnly">
      <summary>
            Indicates if the Read Only Recommended option is selected.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.RecommendReadOnly property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsWriteProtected">
      <summary>
            Indicates whether this workbook is write protected.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.IsWriteProtected property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WriteProtectedPassword">
      <summary>
            Sets the proected password to modify the file.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.Password property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsEncrypted">
      <summary>
            Gets a value that indicates whether a password is required to open this workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsProtected">
      <summary>
            Gets a value that indicates whether the structure or window of the Workbook is protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsDefaultEncrypted">
      <summary>
            Indicates whether encrypting the workbook with default password if Structure and Windows of the workbook are locked.
            </summary>
      <remarks>
            The default value is false now. It's same as MS Excel 2013.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsMinimized">
      <summary>
            Represents whether the generated spreadsheet will be opened Minimized.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsHidden">
      <summary>
            Indicates whether this workbook is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.AutoCompressPictures">
      <summary>
            Specifies a boolean value that indicates the application automatically compressed pictures in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RemovePersonalInformation">
      <summary>
            True if personal information can be removed from the specified workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.HidePivotFieldList">
      <summary>
            Gets and sets whether hide the field list for the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.UpdateLinksType">
      <summary>
            Gets and sets how updates external links when the workbook is opened.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ParsingFormulaOnOpen">
      <summary>
            Indicates whether parsing the formula when reading the file.
            </summary>
      <remarks>
            Only applies for Excel Xlsx,Xltx, Xltm,Xlsm file
            because the formulas in the files are stored with a string formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeft">
      <summary>
            The distance from the left edge of the client area to the left edge of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeftInch">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeftCM">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTop">
      <summary>
            The distance from the top edge of the client area to the top edge of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTopInch">
      <summary>
            The distance from the top edge of the client area to the top edge of the window,in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTopCM">
      <summary>
            The distance from the top edge of the client area to the top edge of the window,in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidth">
      <summary>
            The width of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidthInch">
      <summary>
            The width of the window,in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidthCM">
      <summary>
            The width of the window,in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeight">
      <summary>
            The height of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeightInch">
      <summary>
            The height of the window,in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeightCM">
      <summary>
            The height of the window,in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.UpdateAdjacentCellsBorder">
      <summary>
            Indicates whether update adjacent cells' border.
            </summary>
      <remarks>
            The default value is false.
            For example: the bottom border of the cell A1 is update, 
            the top border of the cell A2 should be changed too. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckComptiliblity">
      <summary>
            Indicates whether check comptiliblity when saving workbook.
            </summary>
      <remarks>
            The default value is true.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckExcelRestriction">
      <summary>
            Whether check restriction of excel file when user modify cells related objects.
            For example, excel does not allow inputting string value longer than 32K.
            When you input a value longer than 32K such as by Cell.PutValue(string), if this property is true, you will get an Exception.
            If this property is false, we will accept your input string value as the cell's value so that later
            you can output the complete string value for other file formats such as CSV.
            However, if you have set such kind of value that is invalid for excel file format,
            you should not save the workbook as excel file format later. Otherwise there may be unexpected error for the generated excel file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.AutoRecover">
      <summary>
            Indicates whether the file is mark for auto-recovery.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CrashSave">
      <summary>
            indicates whether the application last saved the workbook file after a crash.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.DataExtractLoad">
      <summary>
            indicates whether the application last opened the workbook for data recovery.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RepairLoad">
      <summary>
            Indicates whether the application last opened the workbook in safe or repair mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.BuildVersion">
      <summary>
            Specifies the incremental public release of the application.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MemorySetting">
      <summary>
            Gets or sets the memory usage options. The new option will be taken as the default option for newly created worksheets but does not take effect for existing worksheets.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.PaperSize">
      <summary>
            Gets and sets the default print paper size.
            </summary>
      <remarks>
            If there is no setting about paper size,MS Excel will use default printer's setting.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.Worksheet">
      <summary>
             Encapsulates the object that represents a single worksheet.
             </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             
             Worksheet sheet = workbook.Worksheets[0];
             
             //Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10);
             
             //Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
             
             [Visual Basic]
             
             Dim workbook as Workbook = new Workbook()
             
             Dim sheet as Worksheet = workbook.Worksheets(0)
             
             'Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10)
             
             'Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetPanes">
      <summary>
            Gets the window panes.
            </summary>
      <remarks>
            If the window is not splitted or frozen.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>
        <p>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</p>
        <p>The first two parameters specify the freezed position and the last two parameters specify the area freezed on the left top pane.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetFreezedPanes(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Gets the freeze panes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <returns>Return whether the worksheet is frozen</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Split">
      <summary>
            Splits window.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.String,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.UnFreezePanes">
      <summary>
            Unfreezes panes in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveSplit">
      <summary>
            Removes splitted window.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AddPageBreaks(System.String)">
      <summary>
            Adds page break.
            </summary>
      <param name="cellName">
      </param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet)">
      <summary>
            Copies contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet,Aspose.Cells.CopyOptions)">
      <summary>
            Copies contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
      <param name="copyOptions">
      </param>
      <remarks>You can copy data from another worksheet in the same file or another file. However, this method does not support to copy drawing objects, such as comments, images and charts.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="firstRow">First row index.</param>
      <param name="lastRow">Last row index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns">
      <summary>
            Autofits all columns in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns(Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits all columns in this worksheet.
            </summary>
      <param name="options">The auto fitting options
            </param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumn(System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns(System.Int32,System.Int32)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns(System.Int32,System.Int32,Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <param name="options">The auto fitting options</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastRow">Last row index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitColumns(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastRow">Last row index.</param>
      <param name="lastColumn">Last column index.</param>
      <param name="options">The auto fitting options</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32,Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <param name="options">The auto fitter options</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows">
      <summary>
            Autofits all rows in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows(System.Boolean)">
      <summary>
            Autofits all rows in this worksheet.
            </summary>
      <param name="onlyAuto">
            True,only autofits the row height when row height is not customed.
            </param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows(Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits all rows in this worksheet.
            </summary>
      <param name="options">The auto fitter options</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows(System.Int32,System.Int32)">
      <summary>
            Autofits row height in a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRows(System.Int32,System.Int32,Aspose.Cells.AutoFitterOptions)">
      <summary>
            Autofits row height in a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="options">The options of auto fitter.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits row height in a rectangle range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AutoFitRow(System.Int32)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <remarks>AutoFitRow is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveAutoFilter">
      <summary>
            Remove the auto filter of the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SetVisible(System.Boolean,System.Boolean)">
      <summary>
            Sets the visible options.
            </summary>
      <param name="isVisible">Whether the worksheet is visible</param>
      <param name="ignoreError">Whether ignore error if this option is not valid.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SelectRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Select a range.
            </summary>
      <param name="startRow">The start row.
            </param>
      <param name="startColumn">The start column</param>
      <param name="totalRows">The number of rows.</param>
      <param name="totalColumns">The number of columns</param>
      <param name="removeOthers">True means removing other selected range and only select this range.
            </param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveAllDrawingObjects">
      <summary>
            Removes all drawing objects in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.ClearComments">
      <summary>
            Clears all comments in designer spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType)">
      <summary>
             Protects worksheet.
             </summary>
      <param name="type">Protection type.</param>
      <remarks>This method protects worksheet without password. It can protect worksheet in all versions of Excel file. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType,System.String,System.String)">
      <summary>
            Protects worksheet.
            </summary>
      <param name="type">Protection type.</param>
      <param name="password">Password.</param>
      <param name="oldPassword">If the worksheet is already protected by a password, please supply the old password.
            Otherwise, you can set a null value or blank string to this parameter.</param>
      <remarks>This method can protect worksheet in all versions of Excel file. 
            </remarks>
      <example>
        <code>
            
            [C#]
            
            
            
            //Creating a file stream containing the Excel file to be opened
            FileStream fstream = new FileStream("C:\\book1.xls", FileMode.Open);
            //Instantiating a Workbook object and Opening the Excel file through the file stream
            Workbook excel = new Workbook(fstream);
            //Accessing the first worksheet in the Excel file
            Worksheet worksheet = excel.Worksheets[0];
            //Protecting the worksheet with a password
            worksheet.Protect(ProtectionType.All, "aspose", null);
            //Saving the modified Excel file in default (that is Excel 20003) format
            excel.Save("C:\\output.xls");
            //Closing the file stream to free all resources
            fstream.Close();
            
            [Visual Basic]
            
            'Creating a file stream containing the Excel file to be opened
            Dim fstream As FileStream = New FileStream("C:\\book1.xls", FileMode.Open)
            'Instantiating a Workbook object and Opening the Excel file through the file stream
            Dim excel As Workbook = New Workbook(fstream)
            'Accessing the first worksheet in the Excel file
            Dim worksheet As Worksheet = excel.Worksheets(0)
            'Protecting the worksheet with a password
            worksheet.Protect(ProtectionType.All, "aspose", DBNull.Value.ToString())
            'Saving the modified Excel file in default (that is Excel 20003) format
            excel.Save("C:\\output.xls")
            'Closing the file stream to free all resources
            fstream.Close()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect">
      <summary>
            Unprotects worksheet.
            </summary>
      <remarks> This method unprotects worksheet which is protected without password.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect(System.String)">
      <summary>
            Unprotects worksheet.
            </summary>
      <param name="password">Password</param>
      <remarks>If the worksheet is protected without a password, you can set a null value or blank string to password parameter.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CopyConditionalFormatting(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies conditional formatting on a cell to another cell.
            </summary>
      <param name="sourceRow">Source cell row index.</param>
      <param name="sourceColumn">Source cell column index.</param>
      <param name="destRow">Destination cell row index.</param>
      <param name="destColumn">Destination cell column index.</param>
      <remarks>This method can only copy conditional formatting within the same worksheet. </remarks>
      <remarks>
            NOTE: This method is now obsolete. Instead, 
            please use Cells.CopyRows() or Range.Copy method instead.
            This property will be removed 12 months later since December 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.MoveTo(System.Int32)">
      <summary>
            Moves the sheet to another location in the spreadsheet.
            </summary>
      <param name="index">Destination sheet index.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Replace(System.String,System.String)">
      <summary>
            Replaces all cell's text with a new string.
            </summary>
      <param name="oldString">Old string value.</param>
      <param name="newString">New string value.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetSelectedRanges">
      <summary>
            Gets selected ranges of cells in the designer spreadsheet.
            </summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains selected ranges.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SetBackground(System.Byte[])">
      <summary>
            Sets worksheet background image.
            </summary>
      <param name="pictureData">Picture data.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetPrintingPageBreaks(Aspose.Cells.Rendering.ImageOrPrintOptions)">
      <summary>
            Get automatic page breaks.
            </summary>
      <param name="options">The print options</param>
      <returns>The automatic page breaks.</returns>
      <remarks>
            Each cell area represents a paper.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.ToString">
      <summary>
            Returns a string represents the current Worksheet object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.String)">
      <summary>
            Calculates a formula.
            </summary>
      <param name="formula">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.String,Aspose.Cells.CalculationOptions)">
      <summary>
            Calculates a formula.
            </summary>
      <param name="formula">
      </param>
      <param name="opts">options for calculating formula</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RefreshPivotTables">
      <summary>
            Refresh all the PivotTables in this Worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.Boolean,System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calculates all formulas in this worksheet.
            </summary>
      <param name="recursive">True means if the worksheet' cells depend on the cells of other worksheets,
             the dependant cells in other worksheets will be calculated too.
             False means all the formulas in the worksheet have been calculated and the values are right.</param>
      <param name="ignoreError">Indicates if hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(Aspose.Cells.CalculationOptions,System.Boolean)">
      <summary>
            Calculates all formulas in this worksheet.
            </summary>
      <param name="options">Options for calculation</param>
      <param name="recursive">True means if the worksheet' cells depend on the cells of other worksheets,
             the dependant cells in other worksheets will be calculated too.
             False means all the formulas in the worksheet have been calculated and the values are right.</param>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. Supports advanced protection options in ExcelXP and above version.
            </summary>
      <remarks>This property can protect worksheet in all versions of Excel file and support advanced protection options in ExcelXP and above version.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Workbook">
      <summary>
            Gets the workbook object which contains this sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Cells">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Worksheet.Cells" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.QueryTables">
      <summary>
            Gets the queryTables in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PivotTables">
      <summary>
            Gets the pivotTables in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Type">
      <summary>
            Represents worksheet type
            </summary>
      <value>Excel worksheet type</value>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Name">
      <summary>
            Gets or sets the name of the worksheet.
            </summary>
      <remarks>The max length of sheet name is 31. And you cannot assign same name(case insensitive) to two worksheets. 
            For example, you cannot set "SheetName1" to the first worksheet and set "SHEETNAME1" to the second worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ShowFormulas">
      <summary>
            Indicates whether showing formulas or value fo the formulas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsGridlinesVisible">
      <summary>
            Gets or sets a value indicating whether the gridelines are visible.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsRowColumnHeadersVisible">
      <summary>
            Gets or sets a value indicating whether the worksheet will display row and column headers.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.DisplayZeros">
      <summary>
            True if zero values are displayed. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.DisplayRightToLeft">
      <summary>
            Indicates if the specified worksheet is displayed from right to left instead of from left to right.
            Default is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsOutlineShown">
      <summary>
            Indicates whether show outline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsSelected">
      <summary>
            Indicates whether this worksheet is selected when the workbook is opened.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ListObjects">
      <summary>
            Gets all ListObjects in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.HorizontalPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HorizontalPageBreakCollection" /> collection. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.VerticalPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VerticalPageBreakCollection" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Hyperlinks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HyperlinkCollection" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PageSetup">
      <summary>
            Represents the page setup description in this sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.HasAutofilter">
      <summary>
            Indicates whether worksheet has auto filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TransitionEvaluation">
      <summary>
            Flag indicating whether the Transition Formula Evaluation (Lotus compatibility) option is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TransitionEntry">
      <summary>
            Flag indicating whether the Transition Formula Entry (Lotus compatibility) option is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.VisibilityType">
      <summary>
            Indicates the state for this sheet visibility
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsVisible">
      <summary>
            Represents if the worksheet is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.SparklineGroupCollection">
      <summary>
            Gets the sparkline group collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Charts">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Charts.ChartCollection" /> collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Comments">
      <summary>
            Gets the <see cref="T:Aspose.Cells.CommentCollection" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Pictures">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Worksheet.Pictures" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TextBoxes">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Worksheet.TextBoxes" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CheckBoxes">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Worksheet.CheckBoxes" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.OleObjects">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.Drawing.OleObject" /> in a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Shapes">
      <summary>
            Returns all drawing shapes in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Index">
      <summary>
            Gets the index of sheet in the worksheets collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsProtected">
      <summary>
            Indicates if the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Validations">
      <summary>
            Gets the data validation setting collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.AllowEditRanges">
      <summary>
            Gets the allow edit range collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ErrorCheckOptions">
      <summary>
            Represents error check setting applied on certain ranges.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Outline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleRow">
      <summary>
            Represents first visible row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleColumn">
      <summary>
            Represents first visible column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be between 10 and 400.
            </summary>
      <remarks>Please set the view type first.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ViewType">
      <summary>
            Gets and sets the view type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsPageBreakPreview">
      <summary>
            Indications the specified worksheet is shown in normal view or page break preview.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsRulerVisible">
      <summary>
            Indicates whether the ruler is visible. Only apply for page break preview.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TabColor">
      <summary>
            Represents worksheet tab color.
            </summary>
      <remarks>This feature is only supported in ExcelXP(Excel2002) and above version. If you save file as Excel97 or Excel2000 format, it will be omitted.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CodeName">
      <summary>
            Represents worksheet code name.
            </summary>
      <remarks>You cannot change the code name while the template file contains VBA/macro.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.BackgroundImage">
      <summary>
            Gets and sets worksheet background image.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ConditionalFormattings">
      <summary>
            Gets the ConditionalFormattings in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ActiveCell">
      <summary>
            Gets or sets the active cell in the worksheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CustomProperties">
      <summary>
            Gets an object representing 
            the identifier information associated with a worksheet. 
            </summary>
      <remarks>
            Worksheet.CustomProperties provide a preferred mechanism for storing arbitrary data. 
            It supports legacy third-party document components, as well as those situations that have a stringent need for binary parts. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.SmartTagSetting">
      <summary>
            Gets all <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> objects of the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Scenarios">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Scenario" />.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WorksheetCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Worksheet" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            WorksheetCollection sheets = workbook.Worksheets;
            
            //Add a worksheet
            sheets.Add();
            
            //Change the name of a worksheet
            sheets[0].Name = "First Sheet";
            
            //Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1);
            
            	
            [Visual Basic]
            
            Dim excel as Workbook = new Workbook()
            
            Dim sheets as WorksheetCollection = excel.Worksheets
            
            'Add a worksheet
            sheets.Add()
            
            'Change the name of a worksheet
            sheets(0).Name = "First Sheet"
            
            'Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetSheetByCodeName(System.String)">
      <summary>
            Gets the worksheet by the code name.
            </summary>
      <param name="codeName">Worksheet code name.</param>
      <returns>The element with the specified code name.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SortNames">
      <summary>
            Sorts defined names.
            </summary>
      <remarks>If you create a large amount of named ranges in the Excel file, 
            please call this method after all named ranges are created and before saving </remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Insert(System.Int32,Aspose.Cells.SheetType)">
      <summary>
            Insert a worksheet.
            </summary>
      <param name="index">The sheet index</param>
      <param name="sheetType">The sheet type.</param>
      <returns>Returns an inserted worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Insert(System.Int32,Aspose.Cells.SheetType,System.String)">
      <summary>
            Insert a worksheet.
            </summary>
      <param name="index">The sheet index</param>
      <param name="sheetType">The sheet type.</param>
      <param name="sheetName">The sheet name.</param>
      <returns>Returns an inserted worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add(Aspose.Cells.SheetType)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="type">Worksheet type.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <example>
        <code>
            [C#]
            Workbook workbook = new Workbook();
            workbook.Worksheets.Add(SheetType.Chart);
            Cells cells = workbook.Worksheets[0].Cells;
            cells["c2"].PutValue(5000);
            cells["c3"].PutValue(3000);
            cells["c4"].PutValue(4000);
            cells["c5"].PutValue(5000);
            cells["c6"].PutValue(6000);
            Charts charts = workbook.Worksheets[1].Charts;
            int chartIndex = charts.Add(ChartType.Column, 10,10,20,20);
            Chart chart = charts[chartIndex];
            chart.NSeries.Add("Sheet1!C2:C6", true);
            
            [Visual Basic]
            Dim workbook As Workbook =  New Workbook() 
            workbook.Worksheets.Add(SheetType.Chart)
            Dim cells As Cells = workbook.Worksheets(0).Cells 
            cells("c2").PutValue(5000)
            cells("c3").PutValue(3000)
            cells("c4").PutValue(4000)
            cells("c5").PutValue(5000)
            cells("c6").PutValue(6000)
            Dim charts As Charts = workbook.Worksheets(1).Charts
            Dim chartIndex As Integer = charts.Add(ChartType.Column,10,10,20,20) 
            Dim chart As Chart = charts(chartIndex) 
            chart.NSeries.Add("Sheet1!C2:C6", True)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SwapSheet(System.Int32,System.Int32)">
      <summary>
            Swaps the two sheets.
            </summary>
      <param name="sheetIndex1">The first worksheet.</param>
      <param name="sheetIndex2">The second worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add(System.String)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.RemoveAt(System.String)">
      <summary>
            Removes the element at a specified name.
            </summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element at a specified index.
            </summary>
      <param name="index">The index value of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Clear">
      <summary>
            Clear all worksheets.
            </summary>
      <remarks>
            A workbook must contains a worksheet.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.AddCopy(System.String)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetName">Name of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <exception cref="T:Aspose.Cells.CellsException">Specifies an invalid worksheet name.</exception>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.AddCopy(System.Int32)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetIndex">Index of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetRangeByName(System.String)">
      <summary>
            Gets Range object by pre-defined name.
            </summary>
      <param name="rangeName">Name of range.</param>
      <returns>Range object.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetNamedRanges">
      <summary>
            Gets all pre-defined named ranges in the spreadsheet.
            </summary>
      <returns>An array of Range objects.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetNamedRangesAndTables">
      <summary>
            Gets all pre-defined named ranges in the spreadsheet.
            </summary>
      <returns>An array of Range objects.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SetOleSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets displayed size when Workbook file is used as an Ole object.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <remarks>This method is generally used to adjust display size in ppt file or doc file.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.IsRefreshAllConnections">
      <summary>
            Indicates whether refresh all connections on opening file in MS Excel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Worksheet" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Worksheet" /> element with the specified name.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.ActiveSheetIndex">
      <summary>
            Represents the index of active worksheet when the spreadsheet is opened.
            </summary>
      <remarks>Sheet index is zero based.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Dxfs">
      <summary>
             Gets the master differential formatting records.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.XmlMaps">
      <summary>
            gets and sets the xml maps in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the built-in document properties of the spreadsheet. 
            </summary>
      <remarks>A new property cannot be added to built-in document properties list. You can only get a built-in property and change its value.
            The following is the built-in properties name list:
            <p>Title</p><p>Subject</p><p>Author</p><p>Keywords</p><p>Comments</p><p>Template</p><p>Last Author</p><p>Revision Number</p><p>Application Name</p><p>Last Print Date</p><p>Creation Date</p><p>Last Save Time</p><p>Total Editing Time</p><p>Number of Pages</p><p>Number of Words</p><p>Number of Characters</p><p>Security</p><p>Category</p><p>Format</p><p>Manager</p><p>Company</p><p>Number of Bytes</p><p>Number of Lines</p><p>Number of Paragraphs</p><p>Number of Slides</p><p>Number of Notes</p><p>Number of Hidden Slides</p><p>Number of Multimedia Clips</p></remarks>
      <example>
        <code>
            [C#]
            DocumentProperty doc = workbook.Worksheets.BuiltInDocumentProperties["Author"];
            doc.Value = "John Smith";
            
            [Visual Basic]
            Dim doc as DocumentProperty = workbook.Worksheets.BuiltInDocumentProperties("Author")
            doc.Value = "John Smith"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
      <example>
        <code>
            [C#]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane");
            
            [Visual Basic]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.OleSize">
      <summary>
            Gets and Sets displayed size when Workbook file is used as an Ole object.
            </summary>
      <remarks>
            Null means no ole size setting.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.ExternalLinks">
      <summary>
            Represents external links in a workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.TableStyles">
      <summary>
            Gets <see cref="P:Aspose.Cells.WorksheetCollection.TableStyles" /> object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XlsbSaveOptions">
      <summary>
            Represents the options for saving xlsb file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsbSaveOptions.#ctor">
      <summary>
            Creates xlsb file save options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsbSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates xlsb file save options.
            </summary>
      <param name="saveFormat">The save format . It must be xlsb.</param>
    </member>
    <member name="T:Aspose.Cells.XlsSaveOptions">
      <summary>
            Represents the save options for the Excel 97-2003 file format: xls and xlt.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsSaveOptions.#ctor">
      <summary>
            Creates options for saving Excel 97-2003 xls/xlt file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates options for saving Excel 97-2003 xls/xlt file.
            </summary>
      <param name="format">The file format. It must be xls/xlt.</param>
    </member>
    <member name="P:Aspose.Cells.XlsSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.XlsSaveOptions.IsTemplate">
      <summary>
            Indicates whether saving a template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.OoxmlSaveOptions">
      <summary>
            Represents the options of saving office open xml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OoxmlSaveOptions.#ctor">
      <summary>
            Creates the options for saving office open xml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OoxmlSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving office open xml file.
            </summary>
      <param name="saveFormat">The file format.
            It must be xlsx,xltx,xlsm,xltm.</param>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.ExportCellName">
      <summary>
            Indicates if export cell name to Excel2007 .xlsx (.xlsm, .xltx, .xltm) file. 
            If the output file may be accessed by SQL Server DTS, this value must be true.
            Setting the value to false will highly increase the performance and reduce the file size when creating large file.
            Default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.UpdateZoom">
      <summary>
            Indicates whether update scaling factor before saving the file 
            if the PageSetup.FitToPagesWide and PageSetup.FitToPagesTall properties control how the worksheet is scaled.
            </summary>
      <remarks>
            The default value is false for permance.
            
            </remarks>
    </member>
    <member name="T:Aspose.Cells.XpsSaveOptions">
      <summary>
            Represents the additional options when saving the file as the Xps. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.XpsSaveOptions.#ctor">
      <summary>
             Creates options for saving xps file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XpsSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
             Creates options for saving xps file.
            </summary>
      <param name="saveFormat">The save format</param>
    </member>
    <member name="P:Aspose.Cells.XpsSaveOptions.OnePagePerSheet">
      <summary>
            If OnePagePerSheet is true , all content of one sheet will output to only one page in result. 
            The paper size of pagesetup will be invalid, and the other settings of pagesetup 
            will still take effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.XpsSaveOptions.PageIndex">
      <summary>
             Gets or sets the 0-based index of the first page to save.
            </summary>
      <remarks>
            Default is 0.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.XpsSaveOptions.PageCount">
      <summary>
             Gets or sets the number of pages to save.
            </summary>
      <remarks>
             Default is System.Int32.MaxValue which means all pages will be rendered..
             </remarks>
    </member>
    <member name="T:Aspose.Cells.XmlMap">
      <summary>
            Represents Xml map information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.XmlMap.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XmlMapCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.XmlMap" /> objects that represent XmlMap information. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.XmlMapCollection.Item(System.Int32)">
      <summary>
            Gets the xml map by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The xml map</returns>
    </member>
  </members>
</doc>