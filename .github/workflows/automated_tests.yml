name: Automated tests

on:
  pull_request:
    branches: [ master ]

jobs:

  wait-for-build:
    runs-on: ubuntu-latest

    steps:
    - name: Wait for build to succeed
      id: waitforstatuschecks
      uses: "WyriHaximus/github-action-wait-for-status@4c9e58820905eb246e88a413c39a9104cccf7e80"
      with:
        checkInterval: 13
        ignoreActions: wait-for-build 
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Do something with a failing build
      if: steps.wait-for-build.outputs.conclusion == 'failure'
      run: throw

  prepare-images:
    runs-on: ubuntu-latest

    needs: [ wait-for-build ]

    env:
      DOCKER_REGISTRY: docker.pkg.github.com
      DOCKER_REPO: surveysolutions/surveysolutions
      TEAMCITY_PASSWORD: ${{secrets.TEAMCITY_PASSWORD}}
      TEAMCITY_USER: github_automation
      TEAMCITY_CACHE: ./.cache
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      COMPOSE_PROJECT_NAME: github_actions
      TC_ARTIFACTS: ./.run_artifacts
    
    steps:
    - uses: actions/checkout@v2
      with: 
        repository: surveysolutions/automatedtesting
        token: ${{secrets.PAT_AUTOMATION}}

    - name: Cache artifacts
      uses: actions/cache@v2
      with:
          path: ./.cache
          key: downloaded-artifacts-${{ runner.os }}

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Build Tests
      run: |
        dotnet build Regression/UI.Headquarters -v q
        dotnet build Regression/UI.Web.Interview -v q
        dotnet build Regression/UI.Web.Interviewer -v q

    - name: Build and push images
      run: pwsh ./compose.ps1 -branch ${{ github.head_ref }} -skipApk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Tests UI.Web.Interview
      run: dotnet test Regression/UI.Headquarters --no-build -v d --filter TestCategory="Web&TestCategory!=Preload&(TestCategory=Smoke|TestCategory=High)" -- NUnit.NumberOfTestWorkers=6
      env: 
        TEAMCITY_PROJECT_NAME: "automation"
        # SELENIUM_GRID_URI: "http://localhost:4444/wd/hub" 
      
    - name: Collect container logs
      uses: actions/upload-artifact@v1
      with:
        name: container-logs
        path: docker/logs/${{ env.COMPOSE_PROJECT_NAME }}

    - name: Collect runner logs
      uses: actions/upload-artifact@v1
      with:
        name: autotests-logs
        path: ${{ env.TC_ARTIFACTS }}

    
